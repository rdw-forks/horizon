/***************************************************
 *       _   _            _                        *
 *      | | | |          (_)                       *
 *      | |_| | ___  _ __ _ _______  _ __          *
 *      |  _  |/ _ \| '__| |_  / _ \| '_  \        *
 *      | | | | (_) | |  | |/ / (_) | | | |        *
 *      \_| |_/\___/|_|  |_/___\___/|_| |_|        *
 ***************************************************
 * This file is part of Horizon (c).
 * Copyright (c) 2023 Horizon Dev Team.
 *
 * Base Author - Sephus. (sagunxp@gmail.com)
 *
 * This library is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this library.  If not, see <http://www.gnu.org/licenses/>.
 **************************************************/

#ifndef HORIZON_ZONE_TRANSMITTED_PACKETS_HPP
#define HORIZON_ZONE_TRANSMITTED_PACKETS_HPP

#include "Server/Common/Base/NetworkPacket.hpp"
#include "Server/Common/Configuration/Horizon.hpp"
#include "Server/Zone/Definitions/UnitDefinitions.hpp"
#include "Server/Zone/Definitions/ItemDefinitions.hpp"
#include "Server/Zone/Definitions/SkillDefinitions.hpp"
#include "Server/Zone/Definitions/CombatDefinitions.hpp"
#include "Server/Zone/Definitions/ClientDefinitions.hpp"

namespace Horizon
{
namespace Zone
{
class ZoneSession;
enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0064 = 0x0064
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0064 = 0x0064
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0064 = 0x0064
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0064 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0064
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0064 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0064(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0064, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0064() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0065 = 0x0065
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0065 = 0x0065
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0065 = 0x0065
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0065 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0065
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0065 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0065(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0065, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0065() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0066 = 0x0066
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0066 = 0x0066
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0066 = 0x0066
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0066 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0066
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0066 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0066(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0066, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0066() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0067 = 0x0067
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0067 = 0x0067
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0067 = 0x0067
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0067 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0067
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0067 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0067(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0067, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0067() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0068 = 0x0068
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0068 = 0x0068
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0068 = 0x0068
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0068 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0068
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0068 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0068(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0068, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0068() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0069 = 0x0069
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0069 = 0x0069
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0069 = 0x0069
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0069 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0069
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0069 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0069(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0069, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0069() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006A = 0x006a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006A = 0x006a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006A = 0x006a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006B = 0x006b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006B = 0x006b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006B = 0x006b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006C = 0x006c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006C = 0x006c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006C = 0x006c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006D = 0x006d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006D = 0x006d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006D = 0x006d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006E = 0x006e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006E = 0x006e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006E = 0x006e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006F = 0x006f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006F = 0x006f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_006F = 0x006f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_006F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_006F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_006F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_006F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_006F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_006F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0070 = 0x0070
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0070 = 0x0070
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0070 = 0x0070
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0070 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0070
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0070 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0070(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0070, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0070() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0071 = 0x0071
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0071 = 0x0071
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0071 = 0x0071
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0071 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0071
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0071 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0071(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0071, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0071() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0081 = 0x0081
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0081 = 0x0081
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0081 = 0x0081
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0081 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0081
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0081 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0081(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0081, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0081() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_008C = 0x008c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_008C = 0x008c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_008C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_008C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_008C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_008C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_008C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_008C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_00A7 = 0x00a7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_00A7 = 0x00a7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_00A7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_00A7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_00A7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_00A7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_00A7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_00A7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0187 = 0x0187
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0187 = 0x0187
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0187 = 0x0187
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0187 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0187
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0187 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0187(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0187, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0187() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01B5 = 0x01b5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01B5 = 0x01b5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01B5 = 0x01b5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01B5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01B5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01B5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01B5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01B5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01B5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BE = 0x01be
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BE = 0x01be
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BE = 0x01be
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01BE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01BE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01BE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01BE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01BE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01BE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BF = 0x01bf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BF = 0x01bf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01BF = 0x01bf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01BF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01BF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01BF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01BF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01BF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01BF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C6 = 0x01c6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C6 = 0x01c6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C6 = 0x01c6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01C6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01C6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01C6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01C6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01C6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01C6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C7 = 0x01c7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C7 = 0x01c7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01C7 = 0x01c7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01C7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01C7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01C7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01C7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01C7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01C7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DB = 0x01db
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DB = 0x01db
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DB = 0x01db
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01DB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01DB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01DB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01DB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01DB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01DB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DC = 0x01dc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DC = 0x01dc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DC = 0x01dc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01DC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01DC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01DC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01DC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01DC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01DC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DD = 0x01dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DD = 0x01dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01DD = 0x01dd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01DD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01DD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01DD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01DD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01DD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01DD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01F1 = 0x01f1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01F1 = 0x01f1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01F1 = 0x01f1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01F1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01F1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01F1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01F1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01F1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01F1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FA = 0x01fa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FA = 0x01fa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FA = 0x01fa
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01FA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01FA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01FA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01FA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01FA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01FA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FB = 0x01fb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FB = 0x01fb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_01FB = 0x01fb
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_01FB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_01FB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_01FB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_01FB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_01FB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_01FB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0200 = 0x0200
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0200 = 0x0200
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0200 = 0x0200
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0200 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0200
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0200 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0200(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0200, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0200() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0204 = 0x0204
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0204 = 0x0204
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0204 = 0x0204
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0204 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0204
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0204 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0204(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0204, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0204() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_020D = 0x020d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_020D = 0x020d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_020D = 0x020d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_020D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_020D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_020D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_020D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_020D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_020D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20221024
ID_UNKNOWN_PACKET_PLACEHOLDER_020F = 0x020f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_020F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_020F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_020F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_020F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_020F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_020F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20221024
ID_UNKNOWN_PACKET_PLACEHOLDER_0210 = 0x0210
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0210 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0210
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0210 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0210(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0210, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0210() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023D = 0x023d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023D = 0x023d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023D = 0x023d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_023D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_023D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_023D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_023D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_023D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_023D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023E = 0x023e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023E = 0x023e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_023E = 0x023e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_023E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_023E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_023E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_023E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_023E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_023E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0258 = 0x0258
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0258 = 0x0258
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0258 = 0x0258
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0258 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0258
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0258 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0258(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0258, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0258() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0259 = 0x0259
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0259 = 0x0259
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0259 = 0x0259
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0259 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0259
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0259 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0259(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0259, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0259() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0261 = 0x0261
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0261 = 0x0261
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0261 = 0x0261
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0261 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0261
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0261 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0261(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0261, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0261() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0262 = 0x0262
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0262 = 0x0262
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0262 = 0x0262
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0262 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0262
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0262 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0262(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0262, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0262() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0263 = 0x0263
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0263 = 0x0263
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0263 = 0x0263
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0263 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0263
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0263 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0263(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0263, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0263() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0264 = 0x0264
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0264 = 0x0264
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0264 = 0x0264
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0264 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0264
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0264 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0264(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0264, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0264() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0265 = 0x0265
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0265 = 0x0265
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0265 = 0x0265
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0265 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0265
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0265 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0265(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0265, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0265() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0266 = 0x0266
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0266 = 0x0266
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0266 = 0x0266
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0266 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0266
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0266 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0266(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0266, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0266() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0267 = 0x0267
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0267 = 0x0267
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0267 = 0x0267
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0267 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0267
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0267 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0267(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0267, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0267() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0268 = 0x0268
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0268 = 0x0268
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0268 = 0x0268
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0268 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0268
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0268 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0268(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0268, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0268() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0269 = 0x0269
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0269 = 0x0269
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0269 = 0x0269
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0269 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0269
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0269 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0269(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0269, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0269() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026A = 0x026a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026A = 0x026a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026A = 0x026a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_026A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_026A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_026A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_026A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_026A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_026A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026B = 0x026b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026B = 0x026b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026B = 0x026b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_026B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_026B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_026B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_026B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_026B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_026B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026C = 0x026c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026C = 0x026c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026C = 0x026c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_026C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_026C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_026C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_026C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_026C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_026C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026D = 0x026d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026D = 0x026d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026D = 0x026d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_026D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_026D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_026D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_026D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_026D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_026D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026F = 0x026f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026F = 0x026f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_026F = 0x026f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_026F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_026F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_026F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_026F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_026F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_026F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0270 = 0x0270
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0270 = 0x0270
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0270 = 0x0270
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0270 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0270
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0270 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0270(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0270, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0270() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0271 = 0x0271
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0271 = 0x0271
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0271 = 0x0271
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0271 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0271
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0271 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0271(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0271, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0271() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0272 = 0x0272
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0272 = 0x0272
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0272 = 0x0272
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0272 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0272
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0272 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0272(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0272, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0272() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0275 = 0x0275
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0275 = 0x0275
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0275 = 0x0275
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0275 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0275
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0275 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0275(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0275, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0275() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0276 = 0x0276
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0276 = 0x0276
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0276 = 0x0276
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0276 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0276
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0276 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0276(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0276, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0276() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0277 = 0x0277
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0277 = 0x0277
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0277 = 0x0277
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0277 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0277
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0277 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0277(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0277, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0277() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027C = 0x027c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027C = 0x027c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027C = 0x027c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_027C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_027C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_027C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_027C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_027C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_027C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027F = 0x027f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027F = 0x027f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_027F = 0x027f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_027F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_027F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_027F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_027F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_027F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_027F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028B = 0x028b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028B = 0x028b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028B = 0x028b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_028B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_028B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_028B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_028B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_028B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_028B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028C = 0x028c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028C = 0x028c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028C = 0x028c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_028C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_028C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_028C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_028C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_028C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_028C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028D = 0x028d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028D = 0x028d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028D = 0x028d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_028D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_028D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_028D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_028D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_028D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_028D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028E = 0x028e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028E = 0x028e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028E = 0x028e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_028E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_028E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_028E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_028E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_028E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_028E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028F = 0x028f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028F = 0x028f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_028F = 0x028f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_028F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_028F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_028F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_028F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_028F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_028F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0290 = 0x0290
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0290 = 0x0290
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0290 = 0x0290
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0290 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0290
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0290 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0290(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0290, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0290() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02AD = 0x02ad
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02AD = 0x02ad
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02AD = 0x02ad
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_02AD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_02AD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_02AD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_02AD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_02AD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_02AD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02B0 = 0x02b0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02B0 = 0x02b0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02B0 = 0x02b0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_02B0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_02B0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_02B0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_02B0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_02B0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_02B0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02CA = 0x02ca
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02CA = 0x02ca
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_02CA = 0x02ca
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_02CA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_02CA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_02CA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_02CA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_02CA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_02CA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220216
ID_UNKNOWN_PACKET_PLACEHOLDER_02F7 = 0x02f7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION == 20221024 \
	|| PACKET_VERSION == 20220203)
ID_UNKNOWN_PACKET_PLACEHOLDER_02F7 = 0x02f7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_02F7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_02F7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_02F7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_02F7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_02F7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_02F7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DD = 0x03dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DD = 0x03dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DD = 0x03dd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_03DD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_03DD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_03DD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_03DD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_03DD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_03DD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DE = 0x03de
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DE = 0x03de
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_03DE = 0x03de
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_03DE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_03DE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_03DE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_03DE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_03DE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_03DE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0448 = 0x0448
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0448 = 0x0448
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0448 = 0x0448
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0448 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0448
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0448 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0448(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0448, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0448() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E5 = 0x07e5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E5 = 0x07e5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E5 = 0x07e5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_07E5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_07E5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_07E5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_07E5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_07E5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_07E5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E7 = 0x07e7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E7 = 0x07e7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E7 = 0x07e7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_07E7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_07E7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_07E7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_07E7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_07E7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_07E7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E8 = 0x07e8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E8 = 0x07e8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E8 = 0x07e8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_07E8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_07E8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_07E8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_07E8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_07E8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_07E8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E9 = 0x07e9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E9 = 0x07e9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_07E9 = 0x07e9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_07E9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_07E9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_07E9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_07E9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_07E9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_07E9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0821 = 0x0821
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0821 = 0x0821
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0821 = 0x0821
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0821 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0821
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0821 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0821(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0821, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0821() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0822 = 0x0822
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0822 = 0x0822
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0822 = 0x0822
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0822 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0822
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0822 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0822(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0822, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0822() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0823 = 0x0823
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0823 = 0x0823
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0823 = 0x0823
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0823 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0823
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0823 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0823(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0823, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0823() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0825 = 0x0825
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0825 = 0x0825
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0825 = 0x0825
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0825 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0825
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0825 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0825(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0825, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0825() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0827 = 0x0827
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0827 = 0x0827
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0827 = 0x0827
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0827 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0827
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0827 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0827(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0827, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0827() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0828 = 0x0828
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0828 = 0x0828
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0828 = 0x0828
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0828 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0828
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0828 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0828(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0828, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0828() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0829 = 0x0829
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0829 = 0x0829
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0829 = 0x0829
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0829 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0829
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0829 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0829(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0829, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0829() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082A = 0x082a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082A = 0x082a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082A = 0x082a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_082A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_082A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_082A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_082A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_082A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_082A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082B = 0x082b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082B = 0x082b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082B = 0x082b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_082B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_082B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_082B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_082B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_082B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_082B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082C = 0x082c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082C = 0x082c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082C = 0x082c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_082C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_082C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_082C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_082C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_082C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_082C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082D = 0x082d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082D = 0x082d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_082D = 0x082d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_082D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_082D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_082D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_082D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_082D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_082D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_083E = 0x083e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_083E = 0x083e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_083E = 0x083e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_083E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_083E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_083E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_083E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_083E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_083E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0840 = 0x0840
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0840 = 0x0840
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0840 = 0x0840
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0840 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0840
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0840 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0840(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0840, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0840() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0841 = 0x0841
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0841 = 0x0841
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0841 = 0x0841
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0841 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0841
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0841 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0841(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0841, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0841() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_085A = 0x085a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_085A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_085A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_085A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_085A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_085A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_085A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_085B = 0x085b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_085B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_085B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_085B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_085B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_085B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_085B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_085C = 0x085c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_085C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_085C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_085C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_085C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_085C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_085C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_085D = 0x085d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_085D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_085D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_085D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_085D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_085D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_085D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_085E = 0x085e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_085E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_085E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_085E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_085E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_085E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_085E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0861 = 0x0861
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0861 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0861
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0861 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0861(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0861, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0861() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0862 = 0x0862
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0862 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0862
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0862 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0862(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0862, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0862() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0863 = 0x0863
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0863 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0863
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0863 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0863(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0863, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0863() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0864 = 0x0864
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0864 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0864
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0864 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0864(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0864, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0864() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0865 = 0x0865
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0865 = 0x0865
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0865 = 0x0865
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0865 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0865
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0865 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0865(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0865, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0865() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0866 = 0x0866
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0866 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0866
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0866 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0866(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0866, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0866() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0868 = 0x0868
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0868 = 0x0868
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0868 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0868
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0868 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0868(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0868, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0868() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0869 = 0x0869
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0869 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0869
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0869 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0869(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0869, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0869() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086A = 0x086a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_086A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_086A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_086A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_086A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_086A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_086A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086B = 0x086b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_086B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_086B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_086B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_086B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_086B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_086B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086D = 0x086d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086D = 0x086d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_086D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_086D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_086D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_086D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_086D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_086D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086E = 0x086e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_086E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_086E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_086E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_086E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_086E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_086E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_086F = 0x086f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_086F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_086F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_086F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_086F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_086F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_086F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0872 = 0x0872
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0872 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0872
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0872 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0872(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0872, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0872() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0873 = 0x0873
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0873 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0873
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0873 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0873(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0873, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0873() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0875 = 0x0875
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0875 = 0x0875
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0875 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0875
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0875 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0875(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0875, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0875() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0876 = 0x0876
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0876 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0876
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0876 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0876(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0876, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0876() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0879 = 0x0879
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0879 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0879
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0879 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0879(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0879, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0879() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_087B = 0x087b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_087B = 0x087b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_087B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_087B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_087B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_087B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_087B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_087B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_087C = 0x087c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_087C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_087C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_087C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_087C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_087C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_087C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_087D = 0x087d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_087D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_087D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_087D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_087D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_087D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_087D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_087F = 0x087f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_087F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_087F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_087F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_087F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_087F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_087F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0880 = 0x0880
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0880 = 0x0880
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0880 = 0x0880
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0880 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0880
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0880 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0880(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0880, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0880() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0882 = 0x0882
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0882 = 0x0882
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0882 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0882
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0882 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0882(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0882, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0882() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0883 = 0x0883
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0883 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0883
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0883 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0883(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0883, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0883() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0884 = 0x0884
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0884 = 0x0884
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0884 = 0x0884
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0884 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0884
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0884 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0884(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0884, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0884() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0886 = 0x0886
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0886 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0886
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0886 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0886(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0886, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0886() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0887 = 0x0887
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0887 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0887
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0887 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0887(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0887, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0887() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0888 = 0x0888
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0888 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0888
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0888 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0888(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0888, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0888() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0889 = 0x0889
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0889 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0889
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0889 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0889(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0889, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0889() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_088A = 0x088a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_088A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_088A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_088A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_088A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_088A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_088A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_088C = 0x088c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_088C = 0x088c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_088C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_088C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_088C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_088C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_088C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_088C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_088E = 0x088e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_088E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_088E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_088E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_088E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_088E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_088E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_088F = 0x088f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_088F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_088F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_088F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_088F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_088F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_088F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0890 = 0x0890
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0890 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0890
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0890 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0890(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0890, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0890() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0891 = 0x0891
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0891 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0891
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0891 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0891(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0891, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0891() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0892 = 0x0892
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0892 = 0x0892
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0892 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0892
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0892 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0892(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0892, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0892() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0895 = 0x0895
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0895 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0895
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0895 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0895(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0895, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0895() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0896 = 0x0896
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0896 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0896
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0896 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0896(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0896, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0896() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0898 = 0x0898
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0898 = 0x0898
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0898 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0898
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0898 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0898(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0898, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0898() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_089A = 0x089a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_089A = 0x089a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_089A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_089A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_089A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_089A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_089A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_089A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_089D = 0x089d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_089D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_089D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_089D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_089D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_089D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_089D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_089E = 0x089e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_089E = 0x089e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_089E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_089E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_089E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_089E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_089E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_089E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A0 = 0x08a0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A1 = 0x08a1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A2 = 0x08a2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A5 = 0x08a5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A6 = 0x08a6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A7 = 0x08a7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A7 = 0x08a7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A8 = 0x08a8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A9 = 0x08a9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08A9 = 0x08a9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08A9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08A9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08A9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08A9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08A9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08A9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AA = 0x08aa
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08AA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08AA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08AA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08AA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08AA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08AA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AB = 0x08ab
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AB = 0x08ab
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08AB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08AB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08AB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08AB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08AB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08AB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AD = 0x08ad
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08AD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08AD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08AD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08AD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08AD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08AD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AF = 0x08af
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AF = 0x08af
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08AF = 0x08af
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08AF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08AF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08AF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08AF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08AF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08AF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B0 = 0x08b0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B0 = 0x08b0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B0 = 0x08b0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08B0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08B0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08B0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08B0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08B0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08B0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B2 = 0x08b2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B2 = 0x08b2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B2 = 0x08b2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08B2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08B2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08B2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08B2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08B2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08B2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B8 = 0x08b8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B8 = 0x08b8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B8 = 0x08b8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08B8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08B8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08B8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08B8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08B8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08B8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B9 = 0x08b9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B9 = 0x08b9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08B9 = 0x08b9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08B9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08B9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08B9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08B9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08B9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08B9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BA = 0x08ba
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BA = 0x08ba
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BA = 0x08ba
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BB = 0x08bb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BB = 0x08bb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BB = 0x08bb
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BC = 0x08bc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BC = 0x08bc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BC = 0x08bc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BD = 0x08bd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BD = 0x08bd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BD = 0x08bd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BE = 0x08be
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BE = 0x08be
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BE = 0x08be
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BF = 0x08bf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BF = 0x08bf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08BF = 0x08bf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08BF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08BF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08BF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08BF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08BF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08BF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C3 = 0x08c3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C3 = 0x08c3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C3 = 0x08c3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08C3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08C3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08C3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08C3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08C3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08C3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C4 = 0x08c4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C4 = 0x08c4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C4 = 0x08c4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08C4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08C4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08C4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08C4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08C4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08C4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C5 = 0x08c5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C5 = 0x08c5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C5 = 0x08c5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08C5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08C5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08C5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08C5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08C5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08C5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C6 = 0x08c6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C6 = 0x08c6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08C6 = 0x08c6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08C6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08C6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08C6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08C6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08C6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08C6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08CC = 0x08cc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08CC = 0x08cc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08CC = 0x08cc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08CC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08CC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08CC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08CC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08CC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08CC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D4 = 0x08d4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D4 = 0x08d4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D4 = 0x08d4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08D4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08D4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08D4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08D4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08D4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08D4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D5 = 0x08d5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D5 = 0x08d5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08D5 = 0x08d5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08D5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08D5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08D5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08D5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08D5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08D5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E3 = 0x08e3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E3 = 0x08e3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E3 = 0x08e3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08E3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08E3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08E3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08E3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08E3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08E3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E4 = 0x08e4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E4 = 0x08e4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08E4 = 0x08e4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08E4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08E4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08E4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08E4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08E4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08E4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FC = 0x08fc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FC = 0x08fc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FC = 0x08fc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08FC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08FC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08FC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08FC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08FC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08FC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FD = 0x08fd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FD = 0x08fd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_08FD = 0x08fd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_08FD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_08FD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_08FD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_08FD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_08FD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_08FD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0917 = 0x0917
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0917 = 0x0917
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0917 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0917
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0917 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0917(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0917, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0917() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0919 = 0x0919
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0919 = 0x0919
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0919 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0919
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0919 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0919(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0919, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0919() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091A = 0x091a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091A = 0x091a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091A = 0x091a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_091A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_091A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_091A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_091A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_091A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_091A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091D = 0x091d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_091D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_091D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_091D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_091D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_091D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_091D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091E = 0x091e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_091E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_091E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_091E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_091E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_091E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_091E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_091F = 0x091f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_091F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_091F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_091F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_091F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_091F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_091F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0920 = 0x0920
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0920 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0920
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0920 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0920(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0920, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0920() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0921 = 0x0921
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0921 = 0x0921
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0921 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0921
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0921 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0921(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0921, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0921() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0923 = 0x0923
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0923 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0923
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0923 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0923(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0923, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0923() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0924 = 0x0924
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0924 = 0x0924
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0924 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0924
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0924 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0924(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0924, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0924() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0926 = 0x0926
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0926 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0926
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0926 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0926(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0926, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0926() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0927 = 0x0927
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0927 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0927
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0927 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0927(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0927, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0927() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0929 = 0x0929
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0929 = 0x0929
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0929 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0929
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0929 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0929(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0929, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0929() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092A = 0x092a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092A = 0x092a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092A = 0x092a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_092A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_092A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_092A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_092A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_092A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_092A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092B = 0x092b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092B = 0x092b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092B = 0x092b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_092B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_092B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_092B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_092B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_092B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_092B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092C = 0x092c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092C = 0x092c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_092C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_092C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_092C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_092C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_092C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_092C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_092F = 0x092f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_092F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_092F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_092F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_092F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_092F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_092F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0930 = 0x0930
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0930 = 0x0930
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0930 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0930
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0930 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0930(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0930, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0930() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0931 = 0x0931
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0931 = 0x0931
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0931 = 0x0931
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0931 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0931
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0931 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0931(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0931, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0931() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0933 = 0x0933
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0933 = 0x0933
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0933 = 0x0933
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0933 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0933
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0933 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0933(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0933, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0933() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0934 = 0x0934
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0934 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0934
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0934 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0934(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0934, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0934() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0935 = 0x0935
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0935 = 0x0935
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0935 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0935
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0935 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0935(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0935, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0935() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0937 = 0x0937
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0937 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0937
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0937 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0937(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0937, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0937() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0938 = 0x0938
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0938 = 0x0938
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0938 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0938
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0938 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0938(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0938, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0938() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093A = 0x093a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_093A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_093A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_093A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_093A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_093A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_093A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093B = 0x093b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093B = 0x093b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_093B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_093B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_093B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_093B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_093B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_093B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093C = 0x093c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093C = 0x093c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_093C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_093C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_093C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_093C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_093C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_093C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093D = 0x093d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093D = 0x093d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_093D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_093D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_093D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_093D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_093D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_093D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093F = 0x093f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_093F = 0x093f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_093F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_093F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_093F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_093F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_093F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_093F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0941 = 0x0941
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0941 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0941
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0941 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0941(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0941, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0941() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0942 = 0x0942
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0942 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0942
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0942 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0942(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0942, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0942() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0943 = 0x0943
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0943 = 0x0943
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0943 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0943
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0943 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0943(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0943, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0943() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0944 = 0x0944
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0944 = 0x0944
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0944 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0944
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0944 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0944(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0944, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0944() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0945 = 0x0945
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0945 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0945
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0945 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0945(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0945, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0945() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0947 = 0x0947
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0947 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0947
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0947 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0947(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0947, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0947() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0948 = 0x0948
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0948 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0948
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0948 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0948(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0948, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0948() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0949 = 0x0949
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0949 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0949
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0949 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0949(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0949, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0949() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_094A = 0x094a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_094A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_094A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_094A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_094A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_094A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_094A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_094C = 0x094c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_094C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_094C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_094C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_094C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_094C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_094C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_094D = 0x094d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_094D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_094D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_094D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_094D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_094D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_094D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_094E = 0x094e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_094E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_094E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_094E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_094E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_094E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_094E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_094F = 0x094f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_094F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_094F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_094F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_094F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_094F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_094F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0951 = 0x0951
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0951 = 0x0951
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0951 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0951
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0951 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0951(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0951, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0951() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0952 = 0x0952
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0952 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0952
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0952 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0952(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0952, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0952() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0953 = 0x0953
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0953 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0953
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0953 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0953(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0953, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0953() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0954 = 0x0954
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0954 = 0x0954
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0954 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0954
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0954 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0954(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0954, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0954() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0955 = 0x0955
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0955 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0955
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0955 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0955(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0955, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0955() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0956 = 0x0956
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0956 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0956
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0956 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0956(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0956, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0956() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0957 = 0x0957
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0957 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0957
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0957 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0957(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0957, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0957() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0958 = 0x0958
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0958 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0958
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0958 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0958(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0958, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0958() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0959 = 0x0959
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0959 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0959
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0959 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0959(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0959, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0959() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095A = 0x095a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_095A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_095A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_095A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_095A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_095A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_095A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095B = 0x095b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_095B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_095B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_095B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_095B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_095B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_095B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095C = 0x095c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_095C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_095C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_095C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_095C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_095C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_095C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095D = 0x095d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095D = 0x095d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_095D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_095D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_095D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_095D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_095D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_095D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_095F = 0x095f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_095F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_095F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_095F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_095F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_095F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_095F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0960 = 0x0960
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0960 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0960
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0960 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0960(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0960, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0960() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0961 = 0x0961
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0961 = 0x0961
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0961 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0961
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0961 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0961(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0961, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0961() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0962 = 0x0962
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0962 = 0x0962
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0962 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0962
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0962 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0962(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0962, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0962() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0963 = 0x0963
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0963 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0963
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0963 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0963(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0963, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0963() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0964 = 0x0964
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0964 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0964
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0964 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0964(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0964, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0964() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0965 = 0x0965
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0965 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0965
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0965 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0965(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0965, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0965() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0969 = 0x0969
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0969 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0969
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0969 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0969(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0969, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0969() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0970 = 0x0970
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0970 = 0x0970
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0970 = 0x0970
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0970 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0970
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0970 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0970(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0970, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0970() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0986 = 0x0986
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0986 = 0x0986
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0986 = 0x0986
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0986 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0986
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0986 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0986(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0986, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0986() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0987 = 0x0987
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0987 = 0x0987
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0987 = 0x0987
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0987 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0987
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0987 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0987(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0987, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0987() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098B = 0x098b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098B = 0x098b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098B = 0x098b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_098B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_098B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_098B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_098B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_098B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_098B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098C = 0x098c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098C = 0x098c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098C = 0x098c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_098C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_098C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_098C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_098C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_098C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_098C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098F = 0x098f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098F = 0x098f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_098F = 0x098f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_098F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_098F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_098F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_098F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_098F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_098F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099C = 0x099c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099C = 0x099c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099C = 0x099c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_099C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_099C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_099C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_099C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_099C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_099C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099D = 0x099d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099D = 0x099d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099D = 0x099d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_099D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_099D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_099D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_099D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_099D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_099D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099E = 0x099e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099E = 0x099e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_099E = 0x099e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_099E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_099E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_099E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_099E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_099E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_099E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A0 = 0x09a0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A0 = 0x09a0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A0 = 0x09a0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09A0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09A0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09A0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09A0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09A0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09A0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A1 = 0x09a1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A1 = 0x09a1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A1 = 0x09a1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09A1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09A1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09A1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09A1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09A1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09A1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A2 = 0x09a2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A2 = 0x09a2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A2 = 0x09a2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09A2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09A2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09A2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09A2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09A2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09A2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A3 = 0x09a3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A3 = 0x09a3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A3 = 0x09a3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09A3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09A3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09A3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09A3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09A3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09A3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A5 = 0x09a5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A5 = 0x09a5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09A5 = 0x09a5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09A5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09A5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09A5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09A5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09A5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09A5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C2 = 0x09c2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C2 = 0x09c2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C2 = 0x09c2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C5 = 0x09c5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C5 = 0x09c5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C5 = 0x09c5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C6 = 0x09c6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C6 = 0x09c6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C6 = 0x09c6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C7 = 0x09c7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C7 = 0x09c7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C7 = 0x09c7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C8 = 0x09c8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C8 = 0x09c8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C8 = 0x09c8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C9 = 0x09c9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C9 = 0x09c9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09C9 = 0x09c9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09C9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09C9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09C9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09C9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09C9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09C9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09E0 = 0x09e0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09E0 = 0x09e0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_09E0 = 0x09e0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_09E0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_09E0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_09E0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_09E0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_09E0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_09E0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A39 = 0x0a39
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A39 = 0x0a39
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A39 = 0x0a39
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A39 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A39
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A39 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A39(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A39, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A39() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3A = 0x0a3a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3A = 0x0a3a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3A = 0x0a3a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A3A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A3A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A3A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A3A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A3A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3C = 0x0a3c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3C = 0x0a3c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3C = 0x0a3c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A3C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A3C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A3C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A3C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A3C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3D = 0x0a3d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3D = 0x0a3d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3D = 0x0a3d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A3D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A3D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A3D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A3D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A3D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3E = 0x0a3e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3E = 0x0a3e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3E = 0x0a3e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A3E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A3E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A3E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A3E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A3E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A3E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A40 = 0x0a40
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A40 = 0x0a40
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A40 = 0x0a40
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A40 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A40
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A40 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A40(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A40, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A40() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A42 = 0x0a42
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A42 = 0x0a42
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A42 = 0x0a42
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A42 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A42
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A42 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A42(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A42, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A42() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A4D = 0x0a4d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A4D = 0x0a4d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A4D = 0x0a4d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A4D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A4D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A4D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A4D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A4D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A4D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220720
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5E = 0x0a5e
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5E = 0x0a5e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A5E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A5E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A5E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A5E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A5E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220720
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5F = 0x0a5f
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5F = 0x0a5f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A5F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A5F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A5F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A5F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A5F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A5F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220720
ID_UNKNOWN_PACKET_PLACEHOLDER_0A60 = 0x0a60
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0A60 = 0x0a60
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A60 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A60
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A60 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A60(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A60, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A60() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A71 = 0x0a71
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A71 = 0x0a71
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A71 = 0x0a71
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A71 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A71
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A71 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A71(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A71, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A71() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A72 = 0x0a72
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A72 = 0x0a72
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A72 = 0x0a72
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A72 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A72
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A72 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A72(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A72, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A72() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A73 = 0x0a73
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A73 = 0x0a73
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A73 = 0x0a73
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A73 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A73
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A73 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A73(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A73, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A73() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A74 = 0x0a74
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A74 = 0x0a74
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A74 = 0x0a74
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A74 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A74
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A74 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A74(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A74, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A74() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A76 = 0x0a76
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A76 = 0x0a76
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A76 = 0x0a76
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A76 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A76
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A76 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A76(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A76, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A76() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A79 = 0x0a79
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A79 = 0x0a79
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A79 = 0x0a79
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A79 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A79
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A79 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A79(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A79, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A79() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7B = 0x0a7b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7B = 0x0a7b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7B = 0x0a7b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A7B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A7B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A7B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A7B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A7B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7C = 0x0a7c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7C = 0x0a7c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7C = 0x0a7c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A7C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A7C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A7C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A7C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A7C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A7C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A80 = 0x0a80
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A80 = 0x0a80
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A80 = 0x0a80
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A80 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A80
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A80 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A80(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A80, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A80() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A81 = 0x0a81
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A81 = 0x0a81
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A81 = 0x0a81
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A81 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A81
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A81 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A81(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A81, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A81() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A82 = 0x0a82
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A82 = 0x0a82
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A82 = 0x0a82
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A82 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A82
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A82 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A82(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A82, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A82() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A83 = 0x0a83
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A83 = 0x0a83
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A83 = 0x0a83
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A83 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A83
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A83 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A83(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A83, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A83() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A85 = 0x0a85
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A85 = 0x0a85
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A85 = 0x0a85
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A85 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A85
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A85 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A85(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A85, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A85() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A86 = 0x0a86
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A86 = 0x0a86
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A86 = 0x0a86
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A86 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A86
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A86 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A86(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A86, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A86() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8B = 0x0a8b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8B = 0x0a8b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8B = 0x0a8b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A8B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A8B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A8B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A8B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A8B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8C = 0x0a8c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8C = 0x0a8c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8C = 0x0a8c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A8C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A8C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A8C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A8C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A8C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8E = 0x0a8e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8E = 0x0a8e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8E = 0x0a8e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A8E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A8E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A8E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A8E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A8E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8F = 0x0a8f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8F = 0x0a8f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8F = 0x0a8f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A8F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A8F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A8F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A8F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A8F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A8F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A90 = 0x0a90
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A90 = 0x0a90
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A90 = 0x0a90
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A90 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A90
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A90 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A90(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A90, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A90() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A92 = 0x0a92
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A92 = 0x0a92
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A92 = 0x0a92
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A92 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A92
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A92 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A92(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A92, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A92() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A93 = 0x0a93
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A93 = 0x0a93
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A93 = 0x0a93
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A93 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A93
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A93 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A93(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A93, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A93() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A94 = 0x0a94
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A94 = 0x0a94
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A94 = 0x0a94
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A94 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A94
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A94 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A94(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A94, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A94() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A95 = 0x0a95
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A95 = 0x0a95
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A95 = 0x0a95
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A95 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A95
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A95 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A95(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A95, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A95() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9E = 0x0a9e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9E = 0x0a9e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9E = 0x0a9e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A9E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A9E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A9E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A9E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A9E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9F = 0x0a9f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9F = 0x0a9f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9F = 0x0a9f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0A9F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0A9F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0A9F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0A9F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0A9F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0A9F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA8 = 0x0aa8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA8 = 0x0aa8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA8 = 0x0aa8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AA8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AA8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AA8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AA8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AA8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA9 = 0x0aa9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA9 = 0x0aa9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA9 = 0x0aa9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AA9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AA9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AA9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AA9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AA9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AA9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAA = 0x0aaa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAA = 0x0aaa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAA = 0x0aaa
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAB = 0x0aab
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAB = 0x0aab
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAB = 0x0aab
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAC = 0x0aac
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAC = 0x0aac
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAC = 0x0aac
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAD = 0x0aad
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAD = 0x0aad
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAD = 0x0aad
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAE = 0x0aae
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAE = 0x0aae
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAE = 0x0aae
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAF = 0x0aaf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAF = 0x0aaf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAF = 0x0aaf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AAF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AAF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AAF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AAF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AAF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AAF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB0 = 0x0ab0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB0 = 0x0ab0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB0 = 0x0ab0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AB0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AB0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AB0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AB0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AB0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB1 = 0x0ab1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB1 = 0x0ab1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB1 = 0x0ab1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AB1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AB1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AB1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AB1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AB1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB3 = 0x0ab3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB3 = 0x0ab3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB3 = 0x0ab3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AB3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AB3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AB3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AB3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AB3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB8 = 0x0ab8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB8 = 0x0ab8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB8 = 0x0ab8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AB8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AB8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AB8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AB8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AB8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AB8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABA = 0x0aba
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABA = 0x0aba
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABA = 0x0aba
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ABA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ABA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ABA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ABA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ABA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABB = 0x0abb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABB = 0x0abb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABB = 0x0abb
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ABB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ABB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ABB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ABB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ABB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABC = 0x0abc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABC = 0x0abc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABC = 0x0abc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ABC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ABC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ABC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ABC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ABC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABF = 0x0abf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABF = 0x0abf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABF = 0x0abf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ABF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ABF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ABF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ABF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ABF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ABF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC3 = 0x0ac3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC3 = 0x0ac3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC3 = 0x0ac3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AC3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AC3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AC3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AC3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AC3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC4 = 0x0ac4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC4 = 0x0ac4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC4 = 0x0ac4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AC4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AC4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AC4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AC4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AC4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC5 = 0x0ac5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC5 = 0x0ac5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC5 = 0x0ac5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AC5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AC5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AC5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AC5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AC5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC6 = 0x0ac6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC6 = 0x0ac6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC6 = 0x0ac6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AC6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AC6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AC6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AC6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AC6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC9 = 0x0ac9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC9 = 0x0ac9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC9 = 0x0ac9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AC9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AC9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AC9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AC9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AC9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AC9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACA = 0x0aca
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACA = 0x0aca
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACA = 0x0aca
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ACA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ACA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ACA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ACA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ACA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACD = 0x0acd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACD = 0x0acd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACD = 0x0acd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ACD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ACD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ACD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ACD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ACD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACE = 0x0ace
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACE = 0x0ace
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACE = 0x0ace
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ACE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ACE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ACE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ACE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ACE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACF = 0x0acf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACF = 0x0acf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACF = 0x0acf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0ACF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0ACF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0ACF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0ACF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0ACF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0ACF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD0 = 0x0ad0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD0 = 0x0ad0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD0 = 0x0ad0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD1 = 0x0ad1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD1 = 0x0ad1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD1 = 0x0ad1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD2 = 0x0ad2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD2 = 0x0ad2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD2 = 0x0ad2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD3 = 0x0ad3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD3 = 0x0ad3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD3 = 0x0ad3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD4 = 0x0ad4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD4 = 0x0ad4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD4 = 0x0ad4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD5 = 0x0ad5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD5 = 0x0ad5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD5 = 0x0ad5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD6 = 0x0ad6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD6 = 0x0ad6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD6 = 0x0ad6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD7 = 0x0ad7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD7 = 0x0ad7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD7 = 0x0ad7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD8 = 0x0ad8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD8 = 0x0ad8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD8 = 0x0ad8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD9 = 0x0ad9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD9 = 0x0ad9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD9 = 0x0ad9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AD9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AD9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AD9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AD9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AD9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AD9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE0 = 0x0ae0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE0 = 0x0ae0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE0 = 0x0ae0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AE0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AE0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AE0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AE0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AE0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE1 = 0x0ae1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE1 = 0x0ae1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE1 = 0x0ae1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AE1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AE1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AE1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AE1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AE1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE3 = 0x0ae3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE3 = 0x0ae3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE3 = 0x0ae3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AE3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AE3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AE3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AE3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AE3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE8 = 0x0ae8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE8 = 0x0ae8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE8 = 0x0ae8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AE8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AE8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AE8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AE8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AE8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE9 = 0x0ae9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE9 = 0x0ae9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE9 = 0x0ae9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AE9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AE9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AE9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AE9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AE9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AE9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEC = 0x0aec
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEC = 0x0aec
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEC = 0x0aec
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AEC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AEC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AEC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AEC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AEC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AED = 0x0aed
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AED = 0x0aed
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AED = 0x0aed
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AED = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AED
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AED : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AED(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AED, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AED() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEE = 0x0aee
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEE = 0x0aee
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEE = 0x0aee
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AEE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AEE
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AEE : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AEE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AEE, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AEE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF1 = 0x0af1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF1 = 0x0af1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF1 = 0x0af1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AF1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AF1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AF1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AF1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AF1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF2 = 0x0af2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF2 = 0x0af2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF2 = 0x0af2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AF2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AF2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AF2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AF2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AF2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF3 = 0x0af3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF3 = 0x0af3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF3 = 0x0af3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AF3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AF3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AF3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AF3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AF3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF5 = 0x0af5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF5 = 0x0af5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF5 = 0x0af5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AF5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AF5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AF5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AF5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AF5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF9 = 0x0af9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF9 = 0x0af9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF9 = 0x0af9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0AF9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0AF9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0AF9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0AF9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0AF9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0AF9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B00 = 0x0b00
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B00 = 0x0b00
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B00 = 0x0b00
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B00 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B00
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B00 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B00(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B00, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B00() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B01 = 0x0b01
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B01 = 0x0b01
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B01 = 0x0b01
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B01 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B01
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B01 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B01(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B01, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B01() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B02 = 0x0b02
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B02 = 0x0b02
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B02 = 0x0b02
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B02 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B02
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B02 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B02(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B02, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B02() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210721 \
	|| PACKET_VERSION == 20210203 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210203))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B04 = 0x0b04
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION == 20211103 \
	|| PACKET_VERSION == 20210107 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210107))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B04 = 0x0b04
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210721 \
	|| PACKET_VERSION == 20210106 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210106))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B04 = 0x0b04
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B04 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B04
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B04 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B04(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B04, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B04() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B07 = 0x0b07
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B07 = 0x0b07
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B07 = 0x0b07
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B07 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B07
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B07 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B07(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B07, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B07() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B23 = 0x0b23
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B23 = 0x0b23
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B23 = 0x0b23
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B23 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B23
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B23 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B23(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B23, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B23() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B24 = 0x0b24
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B24 = 0x0b24
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B24 = 0x0b24
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B24 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B24
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B24 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B24(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B24, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B24() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B25 = 0x0b25
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B25 = 0x0b25
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B25 = 0x0b25
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B25 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B25
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B25 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B25(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B25, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B25() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B2B = 0x0b2b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B2B = 0x0b2b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B2B = 0x0b2b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B2B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B2B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B2B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B2B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B2B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B2B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B30 = 0x0b30
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B30 = 0x0b30
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B30 = 0x0b30
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B30 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B30
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B30 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B30(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B30, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B30() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B34 = 0x0b34
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B34 = 0x0b34
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B34 = 0x0b34
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B34 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B34
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B34 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B34(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B34, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B34() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B39 = 0x0b39
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B39 = 0x0b39
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B39 = 0x0b39
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B39 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B39
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B39 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B39(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B39, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B39() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3C = 0x0b3c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3C = 0x0b3c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3C = 0x0b3c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B3C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B3C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B3C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B3C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B3C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3D = 0x0b3d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3D = 0x0b3d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3D = 0x0b3d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B3D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B3D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B3D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B3D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B3D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3E = 0x0b3e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3E = 0x0b3e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3E = 0x0b3e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B3E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B3E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B3E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B3E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B3E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B3E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B44 = 0x0b44
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B44 = 0x0b44
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B44 = 0x0b44
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B44 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B44
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B44 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B44(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B44, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B44() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B48 = 0x0b48
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B48 = 0x0b48
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B48 = 0x0b48
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B48 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B48
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B48 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B48(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B48, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B48() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B49 = 0x0b49
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B49 = 0x0b49
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B49 = 0x0b49
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B49 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B49
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B49 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B49(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B49, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B49() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4A = 0x0b4a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4A = 0x0b4a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4A = 0x0b4a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B4A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B4A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B4A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B4A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B4A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4B = 0x0b4b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4B = 0x0b4b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4B = 0x0b4b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B4B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B4B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B4B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B4B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B4B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4D = 0x0b4d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4D = 0x0b4d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4D = 0x0b4d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B4D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B4D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B4D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B4D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B4D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4F = 0x0b4f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4F = 0x0b4f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4F = 0x0b4f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B4F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B4F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B4F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B4F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B4F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B4F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B50 = 0x0b50
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B50 = 0x0b50
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B50 = 0x0b50
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B50 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B50
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B50 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B50(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B50, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B50() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B51 = 0x0b51
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B51 = 0x0b51
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B51 = 0x0b51
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B51 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B51
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B51 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B51(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B51, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B51() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B52 = 0x0b52
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B52 = 0x0b52
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B52 = 0x0b52
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B52 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B52
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B52 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B52(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B52, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B52() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B53 = 0x0b53
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B53 = 0x0b53
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B53 = 0x0b53
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B53 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B53
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B53 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B53(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B53, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B53() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B54 = 0x0b54
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B54 = 0x0b54
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B54 = 0x0b54
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B54 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B54
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B54 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B54(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B54, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B54() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B55 = 0x0b55
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B55 = 0x0b55
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B55 = 0x0b55
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B55 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B55
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B55 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B55(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B55, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B55() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B5F = 0x0b5f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B5F = 0x0b5f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B5F = 0x0b5f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B5F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B5F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B5F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B5F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B5F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B5F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B60 = 0x0b60
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B60 = 0x0b60
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B60 = 0x0b60
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B60 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B60
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B60 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B60(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B60, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B60() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B61 = 0x0b61
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B61 = 0x0b61
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B61 = 0x0b61
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B61 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B61
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B61 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B61(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B61, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B61() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B62 = 0x0b62
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B62 = 0x0b62
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B62 = 0x0b62
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B62 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B62
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B62 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B62(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B62, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B62() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B68 = 0x0b68
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B68 = 0x0b68
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B68 = 0x0b68
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B68 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B68
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B68 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B68(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B68, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B68() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6A = 0x0b6a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6A = 0x0b6a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6A = 0x0b6a
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6A = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B6A
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B6A : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B6A(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B6A, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B6A() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6B = 0x0b6b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6B = 0x0b6b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6B = 0x0b6b
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6B = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B6B
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B6B : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B6B(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B6B, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B6B() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6C = 0x0b6c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6C = 0x0b6c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6C = 0x0b6c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B6C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B6C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B6C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B6C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B6C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6F = 0x0b6f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6F = 0x0b6f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200129)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6F = 0x0b6f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B6F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B6F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B6F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B6F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B6F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B6F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200318 \
	|| PACKET_VERSION >= 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B70 = 0x0b70
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709 \
	|| PACKET_VERSION == 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B70 = 0x0b70
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200401 \
	|| PACKET_VERSION >= 20200129)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B70 = 0x0b70
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B70 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B70
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B70 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B70(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B70, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B70() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B71 = 0x0b71
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B71 = 0x0b71
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200129)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B71 = 0x0b71
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B71 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B71
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B71 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B71(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B71, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B71() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200318 \
	|| PACKET_VERSION >= 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B72 = 0x0b72
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709 \
	|| PACKET_VERSION == 20200122)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B72 = 0x0b72
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200401 \
	|| PACKET_VERSION >= 20200129)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B72 = 0x0b72
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B72 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B72
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B72 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B72(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B72, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B72() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200212)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B73 = 0x0b73
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200212)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B73 = 0x0b73
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200212)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B73 = 0x0b73
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B73 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B73
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B73 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B73(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B73, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B73() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B74 = 0x0b74
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B74 = 0x0b74
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B74 = 0x0b74
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B74 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B74
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B74 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B74(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B74, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B74() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B75 = 0x0b75
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B75 = 0x0b75
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200304)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B75 = 0x0b75
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B75 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B75
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B75 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B75(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B75, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B75() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B77 = 0x0b77
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B77 = 0x0b77
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B77 = 0x0b77
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B77 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B77
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B77 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B77(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B77, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B77() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7E = 0x0b7e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7E = 0x0b7e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7E = 0x0b7e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B7E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B7E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B7E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B7E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B7E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7F = 0x0b7f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7F = 0x0b7f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7F = 0x0b7f
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B7F = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B7F
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B7F : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B7F(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B7F, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B7F() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B80 = 0x0b80
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B80 = 0x0b80
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B80 = 0x0b80
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B80 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B80
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B80 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B80(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B80, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B80() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200819)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8C = 0x0b8c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200812)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8C = 0x0b8c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8C = 0x0b8c
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8C = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B8C
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B8C : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B8C(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B8C, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B8C() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8D = 0x0b8d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8D = 0x0b8d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8D = 0x0b8d
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8D = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B8D
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B8D : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B8D(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B8D, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B8D() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200916 \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8E = 0x0b8e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8E = 0x0b8e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118 \
	|| PACKET_VERSION >= 20200902)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8E = 0x0b8e
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B8E = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B8E
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B8E : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B8E(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B8E, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B8E() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B93 = 0x0b93
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B93 = 0x0b93
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B93 = 0x0b93
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B93 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B93
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B93 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B93(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B93, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B93() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118 \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B94 = 0x0b94
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B94 = 0x0b94
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B94 = 0x0b94
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B94 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B94
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B94 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B94(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B94, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B94() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B95 = 0x0b95
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B95 = 0x0b95
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B95 = 0x0b95
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B95 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B95
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B95 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B95(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B95, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B95() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118 \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B96 = 0x0b96
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B96 = 0x0b96
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B96 = 0x0b96
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B96 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B96
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B96 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B96(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B96, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B96() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B97 = 0x0b97
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B97 = 0x0b97
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B97 = 0x0b97
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B97 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B97
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B97 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B97(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B97, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B97() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118 \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B98 = 0x0b98
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B98 = 0x0b98
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B98 = 0x0b98
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B98 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B98
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B98 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B98(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B98, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B98() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118 \
	|| PACKET_VERSION >= 20201104)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B99 = 0x0b99
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0B99 = 0x0b99
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_UNKNOWN_PACKET_PLACEHOLDER_0B99 = 0x0b99
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0B99 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0B99
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0B99 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0B99(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0B99, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0B99() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201223)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA2 = 0x0ba2
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA2 = 0x0ba2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA2 = 0x0ba2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BA2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BA2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BA2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BA2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BA2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA3 = 0x0ba3
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA3 = 0x0ba3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA3 = 0x0ba3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BA3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BA3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BA3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BA3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BA3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA5 = 0x0ba5
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA5 = 0x0ba5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210217)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA5 = 0x0ba5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BA5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BA5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BA5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BA5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BA5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BA5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210602 \
	|| PACKET_VERSION == 20210317)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAC = 0x0bac
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAC = 0x0bac
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210630 \
	|| PACKET_VERSION == 20210623 \
	|| PACKET_VERSION == 20210616 \
	|| PACKET_VERSION == 20210317)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAC = 0x0bac
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BAC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BAC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BAC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BAC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BAC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION == 20220216 \
	|| PACKET_VERSION == 20210317)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAF = 0x0baf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION == 20220316 \
	|| PACKET_VERSION == 20210317)
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAF = 0x0baf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BAF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BAF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BAF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BAF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BAF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BAF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220216
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB0 = 0x0bb0
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220203
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB0 = 0x0bb0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220216
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB1 = 0x0bb1
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220203
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB1 = 0x0bb1
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB1 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB1
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB1 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB1(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB1, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB1() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220216
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB2 = 0x0bb2
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220203
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB2 = 0x0bb2
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB2
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB2 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB2, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220216
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB3 = 0x0bb3
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220316
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB3 = 0x0bb3
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB3
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB3 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB3, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220302
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB4 = 0x0bb4
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220316
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB4 = 0x0bb4
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB4
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB4 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB4, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220330
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB5 = 0x0bb5
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220420
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB5 = 0x0bb5
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB5
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB5 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB5, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220406
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB6 = 0x0bb6
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220420
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB6 = 0x0bb6
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB6
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB6 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB6, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220406
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB7 = 0x0bb7
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220420
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB7 = 0x0bb7
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB7
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB7 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB7, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220406
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB8 = 0x0bb8
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220420
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB8 = 0x0bb8
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB8
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB8 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB8, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220406
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB9 = 0x0bb9
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220420
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB9 = 0x0bb9
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BB9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BB9
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BB9 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BB9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BB9, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BB9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220518
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBA = 0x0bba
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220518
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBA = 0x0bba
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BBA
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BBA : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BBA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BBA, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BBA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220803
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBB = 0x0bbb
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBB = 0x0bbb
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BBB
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BBB : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BBB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BBB, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BBB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220803
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBC = 0x0bbc
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBC = 0x0bbc
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BBC
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BBC : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BBC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BBC, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BBC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220803
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBD = 0x0bbd
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20220817
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBD = 0x0bbd
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BBD
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BBD : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BBD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BBD, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BBD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20220921
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBF = 0x0bbf
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20221005
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBF = 0x0bbf
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BBF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BBF
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BBF : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BBF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BBF, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BBF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20221005
ID_UNKNOWN_PACKET_PLACEHOLDER_0BC0 = 0x0bc0
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20221005
ID_UNKNOWN_PACKET_PLACEHOLDER_0BC0 = 0x0bc0
#else
ID_UNKNOWN_PACKET_PLACEHOLDER_0BC0 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: UNKNOWN_PACKET_PLACEHOLDER_0BC0
 *
 */ 
class UNKNOWN_PACKET_PLACEHOLDER_0BC0 : public Base::NetworkPacket<ZoneSession>
{
public:
	UNKNOWN_PACKET_PLACEHOLDER_0BC0(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_UNKNOWN_PACKET_PLACEHOLDER_0BC0, s)
	{}
	virtual ~UNKNOWN_PACKET_PLACEHOLDER_0BC0() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACCEPT_ENTER = 0x0073
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER = 0x0073
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER = 0x0073
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACCEPT_ENTER = 0x0073
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER = 0x0073
#else
ID_ZC_ACCEPT_ENTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACCEPT_ENTER
 *
 */ 
class ZC_ACCEPT_ENTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACCEPT_ENTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACCEPT_ENTER, s)
	{}
	virtual ~ZC_ACCEPT_ENTER() {}

	void deliver(int16_t x, int16_t y, int16_t dir);
	ByteBuffer &serialize();

/* Structure */
	int _start_time{ 0 };
	char _packed_pos[3]{0};
	int8_t _x_size{0};
	int8_t _y_size{0};

};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ACCEPT_ENTER2 = 0x02eb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER2 = 0x02eb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER2 = 0x02eb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ACCEPT_ENTER2 = 0x02eb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER2 = 0x02eb
#else
ID_ZC_ACCEPT_ENTER2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACCEPT_ENTER2
 *
 */ 
class ZC_ACCEPT_ENTER2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACCEPT_ENTER2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACCEPT_ENTER2, s)
	{}
	virtual ~ZC_ACCEPT_ENTER2() {}

	void deliver(int16_t x, int16_t y, int16_t dir, int16_t font);
	ByteBuffer &serialize();

/* Structure */
	int32_t _start_time{0};
	char _packed_pos[3]{0};
	int8_t _x_size{0};
	int8_t _y_size{0};
	int16_t _font{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACCEPT_ENTER3 = 0x0a18
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACCEPT_ENTER3 = 0x0a18
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_ENTER3 = 0x0a18
#else
ID_ZC_ACCEPT_ENTER3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACCEPT_ENTER3
 *
 */ 
class ZC_ACCEPT_ENTER3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACCEPT_ENTER3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACCEPT_ENTER3, s)
	{}
	virtual ~ZC_ACCEPT_ENTER3() {}

	void deliver(int16_t x, int16_t y, int16_t dir, int16_t font, unit_gender_types gender);
	ByteBuffer &serialize();

/* Structure */
	int32_t _start_time{0};
	char _packed_pos[3]{0};
	int8_t _x_size{0};
	int8_t _y_size{0};
	int16_t _font{0};
	int8_t _gender{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACCEPT_QUIT = 0x0083
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_QUIT = 0x0083
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_QUIT = 0x0083
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACCEPT_QUIT = 0x0083
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACCEPT_QUIT = 0x0083
#else
ID_ZC_ACCEPT_QUIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACCEPT_QUIT
 *
 */ 
class ZC_ACCEPT_QUIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACCEPT_QUIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACCEPT_QUIT, s)
	{}
	virtual ~ZC_ACCEPT_QUIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141001)
ID_ZC_ACH_UPDATE = 0x0a24
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141001)
ID_ZC_ACH_UPDATE = 0x0a24
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACH_UPDATE = 0x0a24
#else
ID_ZC_ACH_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACH_UPDATE
 *
 */ 
class ZC_ACH_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACH_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACH_UPDATE, s)
	{}
	virtual ~ZC_ACH_UPDATE() {}

	void deliver(int total_points, int rank, int current_rank_points, int next_rank_points, zc_ach_update_list_info info);
	ByteBuffer &serialize();

/* Structure */
	int _total_points{ 0 };
	int16_t _rank{ 0 };
	int _current_rank_points{ 0 };
	int _next_rank_points{ 0 };
	struct zc_ach_update_list_info _info;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ACCOUNTNAME = 0x01e0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ACCOUNTNAME = 0x01e0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ACCOUNTNAME = 0x01e0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ACCOUNTNAME = 0x01e0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ACCOUNTNAME = 0x01e0
#else
ID_ZC_ACK_ACCOUNTNAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ACCOUNTNAME
 *
 */ 
class ZC_ACK_ACCOUNTNAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ACCOUNTNAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ACCOUNTNAME, s)
	{}
	virtual ~ZC_ACK_ACCOUNTNAME() {}

	void deliver(int account_id, std::string account_name);
	ByteBuffer &serialize();

/* Structure */
	int _account_id{ 0 };
	char _account_name[MAX_USERNAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ADDITEM_TO_CART = 0x012c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADDITEM_TO_CART = 0x012c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADDITEM_TO_CART = 0x012c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ADDITEM_TO_CART = 0x012c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADDITEM_TO_CART = 0x012c
#else
ID_ZC_ACK_ADDITEM_TO_CART = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ADDITEM_TO_CART
 *
 */ 
class ZC_ACK_ADDITEM_TO_CART : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ADDITEM_TO_CART(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ADDITEM_TO_CART, s)
	{}
	virtual ~ZC_ACK_ADDITEM_TO_CART() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x00ea
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x00ea
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x00ea
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x00ea
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x00ea
#else
ID_ZC_ACK_ADD_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ADD_EXCHANGE_ITEM
 *
 */ 
class ZC_ACK_ADD_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ADD_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ADD_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_ACK_ADD_EXCHANGE_ITEM() {}

	void deliver(int inventory_index, zc_ack_exchange_item_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20141119
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0a05
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0b3f
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20141119
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0a05
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0b3f
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0a05
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0b3f
#else
ID_ZC_ACK_ADD_ITEM_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ADD_ITEM_RODEX
 *
 */ 
class ZC_ACK_ADD_ITEM_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ADD_ITEM_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ADD_ITEM_RODEX, s)
	{}
	virtual ~ZC_ACK_ADD_ITEM_RODEX() {}

	void deliver(s_zc_ack_add_item_rodex info);
	ByteBuffer &serialize();

/* Structure */
	s_zc_ack_add_item_rodex _info;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_APPLY_BARGAIN_SALE_ITEM = 0x09af
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_APPLY_BARGAIN_SALE_ITEM = 0x09af
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_APPLY_BARGAIN_SALE_ITEM = 0x09af
#else
ID_ZC_ACK_APPLY_BARGAIN_SALE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_APPLY_BARGAIN_SALE_ITEM
 *
 */ 
class ZC_ACK_APPLY_BARGAIN_SALE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_APPLY_BARGAIN_SALE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_APPLY_BARGAIN_SALE_ITEM, s)
	{}
	virtual ~ZC_ACK_APPLY_BARGAIN_SALE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_APPLY_MACRO_DETECTOR = 0x0a57
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_APPLY_MACRO_DETECTOR = 0x0a57
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_APPLY_MACRO_DETECTOR = 0x0a57
#else
ID_ZC_ACK_APPLY_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_APPLY_MACRO_DETECTOR
 *
 */ 
class ZC_ACK_APPLY_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_APPLY_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_APPLY_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_ACK_APPLY_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0256
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050829)
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0256
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0256
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0256
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0256
#else
ID_ZC_ACK_AUCTION_ADD_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_AUCTION_ADD_ITEM
 *
 */ 
class ZC_ACK_AUCTION_ADD_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_AUCTION_ADD_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_AUCTION_ADD_ITEM, s)
	{}
	virtual ~ZC_ACK_AUCTION_ADD_ITEM() {}

	void deliver(int inventory_index, zc_ack_auction_add_item_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130515)
ID_ZC_ACK_BANKING_DEPOSIT = 0x09a8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130515)
ID_ZC_ACK_BANKING_DEPOSIT = 0x09a8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BANKING_DEPOSIT = 0x09a8
#else
ID_ZC_ACK_BANKING_DEPOSIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BANKING_DEPOSIT
 *
 */ 
class ZC_ACK_BANKING_DEPOSIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BANKING_DEPOSIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BANKING_DEPOSIT, s)
	{}
	virtual ~ZC_ACK_BANKING_DEPOSIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130515)
ID_ZC_ACK_BANKING_WITHDRAW = 0x09aa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130515)
ID_ZC_ACK_BANKING_WITHDRAW = 0x09aa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BANKING_WITHDRAW = 0x09aa
#else
ID_ZC_ACK_BANKING_WITHDRAW = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BANKING_WITHDRAW
 *
 */ 
class ZC_ACK_BANKING_WITHDRAW : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BANKING_WITHDRAW(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BANKING_WITHDRAW, s)
	{}
	virtual ~ZC_ACK_BANKING_WITHDRAW() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_BAN_GUILD = 0x015c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BAN_GUILD = 0x015c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BAN_GUILD = 0x015c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_BAN_GUILD = 0x015c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BAN_GUILD = 0x015c
#else
ID_ZC_ACK_BAN_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BAN_GUILD
 *
 */ 
class ZC_ACK_BAN_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BAN_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BAN_GUILD, s)
	{}
	virtual ~ZC_ACK_BAN_GUILD() {}

	void deliver(std::string name, std::string reason, std::string account_name);
	ByteBuffer &serialize();

/* Structure */
	char _name[MAX_UNIT_NAME_LENGTH];
	char _reason[MAX_GUILD_LEAVE_REASON_STR_LENGTH];
	char _account_name[MAX_USERNAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100608)
ID_ZC_ACK_BAN_GUILD_SSO = 0x0839
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100608)
ID_ZC_ACK_BAN_GUILD_SSO = 0x0839
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BAN_GUILD_SSO = 0x0839
#else
ID_ZC_ACK_BAN_GUILD_SSO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BAN_GUILD_SSO
 *
 */ 
class ZC_ACK_BAN_GUILD_SSO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BAN_GUILD_SSO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BAN_GUILD_SSO, s)
	{}
	virtual ~ZC_ACK_BAN_GUILD_SSO() {}

	void deliver(std::string name, std::string reason);
	ByteBuffer &serialize();

/* Structure */
	char _name[MAX_UNIT_NAME_LENGTH];
	char _reason[MAX_GUILD_LEAVE_REASON_STR_LENGTH];
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_ACK_BATTLE_STATE_MONITOR = 0x07f1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_ACK_BATTLE_STATE_MONITOR = 0x07f1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BATTLE_STATE_MONITOR = 0x07f1
#else
ID_ZC_ACK_BATTLE_STATE_MONITOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BATTLE_STATE_MONITOR
 *
 */ 
class ZC_ACK_BATTLE_STATE_MONITOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BATTLE_STATE_MONITOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BATTLE_STATE_MONITOR, s)
	{}
	virtual ~ZC_ACK_BATTLE_STATE_MONITOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120328)
ID_ZC_ACK_BEFORE_WORLD_INFO = 0x0979
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120328)
ID_ZC_ACK_BEFORE_WORLD_INFO = 0x0979
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_BEFORE_WORLD_INFO = 0x0979
#else
ID_ZC_ACK_BEFORE_WORLD_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_BEFORE_WORLD_INFO
 *
 */ 
class ZC_ACK_BEFORE_WORLD_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_BEFORE_WORLD_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_BEFORE_WORLD_INFO, s)
	{}
	virtual ~ZC_ACK_BEFORE_WORLD_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO = 0x09ad
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO = 0x09ad
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO = 0x09ad
#else
ID_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO
 *
 */ 
class ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO, s)
	{}
	virtual ~ZC_ACK_CASH_BARGAIN_SALE_ITEM_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0174
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0174
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0174
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0174
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0174
#else
ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CHANGE_GUILD_POSITIONINFO
 *
 */ 
class ZC_ACK_CHANGE_GUILD_POSITIONINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CHANGE_GUILD_POSITIONINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CHANGE_GUILD_POSITIONINFO, s)
	{}
	virtual ~ZC_ACK_CHANGE_GUILD_POSITIONINFO() {}

	void deliver(std::vector<s_zcack_change_guild_positioninfo> info);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zcack_change_guild_positioninfo> _info;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140827)
ID_ZC_ACK_CHANGE_TITLE = 0x0a2f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140827)
ID_ZC_ACK_CHANGE_TITLE = 0x0a2f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CHANGE_TITLE = 0x0a2f
#else
ID_ZC_ACK_CHANGE_TITLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CHANGE_TITLE
 *
 */ 
class ZC_ACK_CHANGE_TITLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CHANGE_TITLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CHANGE_TITLE, s)
	{}
	virtual ~ZC_ACK_CHANGE_TITLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_ACK_CLAN_LEAVE = 0x0989
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_ACK_CLAN_LEAVE = 0x0989
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CLAN_LEAVE = 0x0989
#else
ID_ZC_ACK_CLAN_LEAVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CLAN_LEAVE
 *
 */ 
class ZC_ACK_CLAN_LEAVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CLAN_LEAVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CLAN_LEAVE, s)
	{}
	virtual ~ZC_ACK_CLAN_LEAVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_ACK_CLOSE_BANKING = 0x09b9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_ACK_CLOSE_BANKING = 0x09b9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CLOSE_BANKING = 0x09b9
#else
ID_ZC_ACK_CLOSE_BANKING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CLOSE_BANKING
 *
 */ 
class ZC_ACK_CLOSE_BANKING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CLOSE_BANKING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CLOSE_BANKING, s)
	{}
	virtual ~ZC_ACK_CLOSE_BANKING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130502)
ID_ZC_ACK_CLOSE_GUILD_STORAGE = 0x09bf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130502)
ID_ZC_ACK_CLOSE_GUILD_STORAGE = 0x09bf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CLOSE_GUILD_STORAGE = 0x09bf
#else
ID_ZC_ACK_CLOSE_GUILD_STORAGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CLOSE_GUILD_STORAGE
 *
 */ 
class ZC_ACK_CLOSE_GUILD_STORAGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CLOSE_GUILD_STORAGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CLOSE_GUILD_STORAGE, s)
	{}
	virtual ~ZC_ACK_CLOSE_GUILD_STORAGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_CLOSE_ROULETTE = 0x0a1e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_CLOSE_ROULETTE = 0x0a1e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CLOSE_ROULETTE = 0x0a1e
#else
ID_ZC_ACK_CLOSE_ROULETTE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CLOSE_ROULETTE
 *
 */ 
class ZC_ACK_CLOSE_ROULETTE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CLOSE_ROULETTE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CLOSE_ROULETTE, s)
	{}
	virtual ~ZC_ACK_CLOSE_ROULETTE() {}

	void deliver(int result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_ACK_COUNT_BARGAIN_SALE_ITEM = 0x09c4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_ACK_COUNT_BARGAIN_SALE_ITEM = 0x09c4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_COUNT_BARGAIN_SALE_ITEM = 0x09c4
#else
ID_ZC_ACK_COUNT_BARGAIN_SALE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_COUNT_BARGAIN_SALE_ITEM
 *
 */ 
class ZC_ACK_COUNT_BARGAIN_SALE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_COUNT_BARGAIN_SALE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_COUNT_BARGAIN_SALE_ITEM, s)
	{}
	virtual ~ZC_ACK_COUNT_BARGAIN_SALE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_CREATE_CHATROOM = 0x00d6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CREATE_CHATROOM = 0x00d6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CREATE_CHATROOM = 0x00d6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_CREATE_CHATROOM = 0x00d6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_CREATE_CHATROOM = 0x00d6
#else
ID_ZC_ACK_CREATE_CHATROOM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_CREATE_CHATROOM
 *
 */ 
class ZC_ACK_CREATE_CHATROOM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_CREATE_CHATROOM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_CREATE_CHATROOM, s)
	{}
	virtual ~ZC_ACK_CREATE_CHATROOM() {}

	void deliver(zcack_create_chatroom_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131218)
ID_ZC_ACK_DELETE_RODEX = 0x09f6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131218)
ID_ZC_ACK_DELETE_RODEX = 0x09f6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DELETE_RODEX = 0x09f6
#else
ID_ZC_ACK_DELETE_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_DELETE_RODEX
 *
 */ 
class ZC_ACK_DELETE_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_DELETE_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_DELETE_RODEX, s)
	{}
	virtual ~ZC_ACK_DELETE_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x00cd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x00cd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x00cd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x00cd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x00cd
#else
ID_ZC_ACK_DISCONNECT_CHARACTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_DISCONNECT_CHARACTER
 *
 */ 
class ZC_ACK_DISCONNECT_CHARACTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_DISCONNECT_CHARACTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_DISCONNECT_CHARACTER, s)
	{}
	virtual ~ZC_ACK_DISCONNECT_CHARACTER() {}

	void deliver(zc_ack_disconnect_character_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_DISORGANIZE_GUILD = 0x015f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD = 0x015f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD = 0x015f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_DISORGANIZE_GUILD = 0x015f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD = 0x015f
#else
ID_ZC_ACK_DISORGANIZE_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_DISORGANIZE_GUILD
 *
 */ 
class ZC_ACK_DISORGANIZE_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_DISORGANIZE_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_DISORGANIZE_GUILD, s)
	{}
	virtual ~ZC_ACK_DISORGANIZE_GUILD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x015e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x015e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x015e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x015e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x015e
#else
ID_ZC_ACK_DISORGANIZE_GUILD_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_DISORGANIZE_GUILD_RESULT
 *
 */ 
class ZC_ACK_DISORGANIZE_GUILD_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_DISORGANIZE_GUILD_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_DISORGANIZE_GUILD_RESULT, s)
	{}
	virtual ~ZC_ACK_DISORGANIZE_GUILD_RESULT() {}

	void deliver(zc_ack_disorganizeguild_result result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_ACK_ENTRY_QUEUE_APPLY = 0x08d8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_ACK_ENTRY_QUEUE_APPLY = 0x08d8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ENTRY_QUEUE_APPLY = 0x08d8
#else
ID_ZC_ACK_ENTRY_QUEUE_APPLY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ENTRY_QUEUE_APPLY
 *
 */ 
class ZC_ACK_ENTRY_QUEUE_APPLY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ENTRY_QUEUE_APPLY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ENTRY_QUEUE_APPLY, s)
	{}
	virtual ~ZC_ACK_ENTRY_QUEUE_APPLY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_ACK_ENTRY_QUEUE_CANCEL = 0x08db
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_ACK_ENTRY_QUEUE_CANCEL = 0x08db
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ENTRY_QUEUE_CANCEL = 0x08db
#else
ID_ZC_ACK_ENTRY_QUEUE_CANCEL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ENTRY_QUEUE_CANCEL
 *
 */ 
class ZC_ACK_ENTRY_QUEUE_CANCEL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ENTRY_QUEUE_CANCEL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ENTRY_QUEUE_CANCEL, s)
	{}
	virtual ~ZC_ACK_ENTRY_QUEUE_CANCEL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_EXCHANGE_ITEM = 0x00e7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_EXCHANGE_ITEM = 0x00e7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_EXCHANGE_ITEM = 0x00e7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_EXCHANGE_ITEM = 0x00e7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_EXCHANGE_ITEM = 0x00e7
#else
ID_ZC_ACK_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_EXCHANGE_ITEM
 *
 */ 
class ZC_ACK_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_ACK_EXCHANGE_ITEM() {}

	void deliver(zc_ack_exchange_item_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x01f5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040302)
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x01f5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x01f5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040302
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x01f5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x01f5
#else
ID_ZC_ACK_EXCHANGE_ITEM2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_EXCHANGE_ITEM2
 *
 */ 
class ZC_ACK_EXCHANGE_ITEM2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_EXCHANGE_ITEM2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_EXCHANGE_ITEM2, s)
	{}
	virtual ~ZC_ACK_EXCHANGE_ITEM2() {}

	void deliver(zc_ack_exchange_item_result_type type, int char_id, int base_level);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
	int _char_id{ 0 };
	int16_t _base_level{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_GENERATE_ROULETTE = 0x0a20
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_GENERATE_ROULETTE = 0x0a20
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GENERATE_ROULETTE = 0x0a20
#else
ID_ZC_ACK_GENERATE_ROULETTE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GENERATE_ROULETTE
 *
 */ 
class ZC_ACK_GENERATE_ROULETTE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GENERATE_ROULETTE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GENERATE_ROULETTE, s)
	{}
	virtual ~ZC_ACK_GENERATE_ROULETTE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_GIVE_MANNER_POINT = 0x014a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GIVE_MANNER_POINT = 0x014a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GIVE_MANNER_POINT = 0x014a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_GIVE_MANNER_POINT = 0x014a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GIVE_MANNER_POINT = 0x014a
#else
ID_ZC_ACK_GIVE_MANNER_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GIVE_MANNER_POINT
 *
 */ 
class ZC_ACK_GIVE_MANNER_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GIVE_MANNER_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GIVE_MANNER_POINT, s)
	{}
	virtual ~ZC_ACK_GIVE_MANNER_POINT() {}

	void deliver(zc_ack_give_manner_point_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131002)
ID_ZC_ACK_GUILDSTORAGE_LOG = 0x09da
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131002)
ID_ZC_ACK_GUILDSTORAGE_LOG = 0x09da
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILDSTORAGE_LOG = 0x09da
#else
ID_ZC_ACK_GUILDSTORAGE_LOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GUILDSTORAGE_LOG
 *
 */ 
class ZC_ACK_GUILDSTORAGE_LOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GUILDSTORAGE_LOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GUILDSTORAGE_LOG, s)
	{}
	virtual ~ZC_ACK_GUILDSTORAGE_LOG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0176
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0176
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0176
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0176
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0176
#else
ID_ZC_ACK_GUILD_MEMBER_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GUILD_MEMBER_INFO
 *
 */ 
class ZC_ACK_GUILD_MEMBER_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GUILD_MEMBER_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GUILD_MEMBER_INFO, s)
	{}
	virtual ~ZC_ACK_GUILD_MEMBER_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x014e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x014e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x014e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x014e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x014e
#else
ID_ZC_ACK_GUILD_MENUINTERFACE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GUILD_MENUINTERFACE
 *
 */ 
class ZC_ACK_GUILD_MENUINTERFACE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GUILD_MENUINTERFACE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GUILD_MENUINTERFACE, s)
	{}
	virtual ~ZC_ACK_GUILD_MENUINTERFACE() {}

	void deliver(int options);
	ByteBuffer &serialize();

/* Structure */
	int _options{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120120)
ID_ZC_ACK_GUILD_NAME = 0x0913
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120120)
ID_ZC_ACK_GUILD_NAME = 0x0913
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_GUILD_NAME = 0x0913
#else
ID_ZC_ACK_GUILD_NAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_GUILD_NAME
 *
 */ 
class ZC_ACK_GUILD_NAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_GUILD_NAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_GUILD_NAME, s)
	{}
	virtual ~ZC_ACK_GUILD_NAME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_ACK_INVENTORY_EXPAND = 0x0b15
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_ACK_INVENTORY_EXPAND = 0x0b15
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_INVENTORY_EXPAND = 0x0b15
#else
ID_ZC_ACK_INVENTORY_EXPAND = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_INVENTORY_EXPAND
 *
 */ 
class ZC_ACK_INVENTORY_EXPAND : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_INVENTORY_EXPAND(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_INVENTORY_EXPAND, s)
	{}
	virtual ~ZC_ACK_INVENTORY_EXPAND() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_ACK_INVENTORY_EXPAND_RESULT = 0x0b17
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_ACK_INVENTORY_EXPAND_RESULT = 0x0b17
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_INVENTORY_EXPAND_RESULT = 0x0b17
#else
ID_ZC_ACK_INVENTORY_EXPAND_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_INVENTORY_EXPAND_RESULT
 *
 */ 
class ZC_ACK_INVENTORY_EXPAND_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_INVENTORY_EXPAND_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_INVENTORY_EXPAND_RESULT, s)
	{}
	virtual ~ZC_ACK_INVENTORY_EXPAND_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ITEMCOMPOSITION = 0x017d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMCOMPOSITION = 0x017d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMCOMPOSITION = 0x017d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ITEMCOMPOSITION = 0x017d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMCOMPOSITION = 0x017d
#else
ID_ZC_ACK_ITEMCOMPOSITION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEMCOMPOSITION
 *
 */ 
class ZC_ACK_ITEMCOMPOSITION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEMCOMPOSITION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEMCOMPOSITION, s)
	{}
	virtual ~ZC_ACK_ITEMCOMPOSITION() {}

	void deliver(int16_t item_inventory_index, int16_t card_inventory_index, zc_ack_item_composition_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _item_inventory_index{ 0 };
	int16_t _card_inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ITEMIDENTIFY = 0x0179
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMIDENTIFY = 0x0179
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMIDENTIFY = 0x0179
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ITEMIDENTIFY = 0x0179
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMIDENTIFY = 0x0179
#else
ID_ZC_ACK_ITEMIDENTIFY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEMIDENTIFY
 *
 */ 
class ZC_ACK_ITEMIDENTIFY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEMIDENTIFY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEMIDENTIFY, s)
	{}
	virtual ~ZC_ACK_ITEMIDENTIFY() {}

	void deliver(int inventory_index, zc_ack_item_identify_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_ACK_ITEMLIST_BUYING_STORE = 0x0818
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_ACK_ITEMLIST_BUYING_STORE = 0x0818
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMLIST_BUYING_STORE = 0x0818
#else
ID_ZC_ACK_ITEMLIST_BUYING_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEMLIST_BUYING_STORE
 *
 */ 
class ZC_ACK_ITEMLIST_BUYING_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEMLIST_BUYING_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEMLIST_BUYING_STORE, s)
	{}
	virtual ~ZC_ACK_ITEMLIST_BUYING_STORE() {}

	void deliver(int account_id, int store_id, int zeny_limit, std::vector<zc_ack_itemlist_buying_store> items);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int _account_id{ 0 };
	int _store_id{ 0 };
	int _zeny_limit{ 0 };
	std::vector<zc_ack_itemlist_buying_store> _items;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ITEMREFINING = 0x0188
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMREFINING = 0x0188
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMREFINING = 0x0188
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_ITEMREFINING = 0x0188
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMREFINING = 0x0188
#else
ID_ZC_ACK_ITEMREFINING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEMREFINING
 *
 */ 
class ZC_ACK_ITEMREFINING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEMREFINING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEMREFINING, s)
	{}
	virtual ~ZC_ACK_ITEMREFINING() {}

	void deliver(zc_ack_itemrefining_result_type result, int16_t inventory_index, int16_t refine_lv);
	ByteBuffer &serialize();

/* Structure */
	int16_t _result{ 0 };
	int16_t _inventory_index{ 0 };
	int16_t _refine_lv{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_ITEMREPAIR = 0x01fe
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040426)
ID_ZC_ACK_ITEMREPAIR = 0x01fe
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMREPAIR = 0x01fe
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040426
ID_ZC_ACK_ITEMREPAIR = 0x01fe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEMREPAIR = 0x01fe
#else
ID_ZC_ACK_ITEMREPAIR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEMREPAIR
 *
 */ 
class ZC_ACK_ITEMREPAIR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEMREPAIR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEMREPAIR, s)
	{}
	virtual ~ZC_ACK_ITEMREPAIR() {}

	void deliver(int inventory_index, zc_ack_itemrepair_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140409)
ID_ZC_ACK_ITEM_FROM_RODEX = 0x09f4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140409)
ID_ZC_ACK_ITEM_FROM_RODEX = 0x09f4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ITEM_FROM_RODEX = 0x09f4
#else
ID_ZC_ACK_ITEM_FROM_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ITEM_FROM_RODEX
 *
 */ 
class ZC_ACK_ITEM_FROM_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ITEM_FROM_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ITEM_FROM_RODEX, s)
	{}
	virtual ~ZC_ACK_ITEM_FROM_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_LEAVE_GUILD = 0x015a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_LEAVE_GUILD = 0x015a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_LEAVE_GUILD = 0x015a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_LEAVE_GUILD = 0x015a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_LEAVE_GUILD = 0x015a
#else
ID_ZC_ACK_LEAVE_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_LEAVE_GUILD
 *
 */ 
class ZC_ACK_LEAVE_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_LEAVE_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_LEAVE_GUILD, s)
	{}
	virtual ~ZC_ACK_LEAVE_GUILD() {}

	void deliver(std::string name, std::string reason);
	ByteBuffer &serialize();

/* Structure */
	char _name[MAX_UNIT_NAME_LENGTH];
	char _reason[MAX_GUILD_LEAVE_REASON_STR_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0255
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050829)
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0255
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0255
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0255
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0255
#else
ID_ZC_ACK_MAIL_ADD_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_MAIL_ADD_ITEM
 *
 */ 
class ZC_ACK_MAIL_ADD_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_MAIL_ADD_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_MAIL_ADD_ITEM, s)
	{}
	virtual ~ZC_ACK_MAIL_ADD_ITEM() {}

	void deliver(int16_t inventory_index, zc_ack_mail_add_item_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_MAIL_DELETE = 0x0257
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050829)
ID_ZC_ACK_MAIL_DELETE = 0x0257
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_DELETE = 0x0257
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_ACK_MAIL_DELETE = 0x0257
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_DELETE = 0x0257
#else
ID_ZC_ACK_MAIL_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_MAIL_DELETE
 *
 */ 
class ZC_ACK_MAIL_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_MAIL_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_MAIL_DELETE, s)
	{}
	virtual ~ZC_ACK_MAIL_DELETE() {}

	void deliver(int mail_id, zc_ack_mail_delete_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int _mail_id{ 0 };
	int16_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060306
ID_ZC_ACK_MAIL_RETURN = 0x0274
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060306)
ID_ZC_ACK_MAIL_RETURN = 0x0274
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_RETURN = 0x0274
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060306
ID_ZC_ACK_MAIL_RETURN = 0x0274
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAIL_RETURN = 0x0274
#else
ID_ZC_ACK_MAIL_RETURN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_MAIL_RETURN
 *
 */ 
class ZC_ACK_MAIL_RETURN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_MAIL_RETURN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_MAIL_RETURN, s)
	{}
	virtual ~ZC_ACK_MAIL_RETURN() {}

	void deliver(int mail_id, zc_ack_mail_return_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int _mail_id{ 0 };
	int16_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_MAKE_GROUP = 0x00fa
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAKE_GROUP = 0x00fa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAKE_GROUP = 0x00fa
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_MAKE_GROUP = 0x00fa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MAKE_GROUP = 0x00fa
#else
ID_ZC_ACK_MAKE_GROUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_MAKE_GROUP
 *
 */ 
class ZC_ACK_MAKE_GROUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_MAKE_GROUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_MAKE_GROUP, s)
	{}
	virtual ~ZC_ACK_MAKE_GROUP() {}

	void deliver(zcack_makegroup_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_ACK_MERGE_ITEM = 0x096f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_ACK_MERGE_ITEM = 0x096f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_MERGE_ITEM = 0x096f
#else
ID_ZC_ACK_MERGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_MERGE_ITEM
 *
 */ 
class ZC_ACK_MERGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_MERGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_MERGE_ITEM, s)
	{}
	virtual ~ZC_ACK_MERGE_ITEM() {}

	void deliver(int inventory_index, int amount, zc_ack_merge_item_reason_type reason);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index, _amount;
	int8_t _reason;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140625)
ID_ZC_ACK_OPENSTORE2 = 0x0a28
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140625)
ID_ZC_ACK_OPENSTORE2 = 0x0a28
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_OPENSTORE2 = 0x0a28
#else
ID_ZC_ACK_OPENSTORE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPENSTORE2
 *
 */ 
class ZC_ACK_OPENSTORE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPENSTORE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPENSTORE2, s)
	{}
	virtual ~ZC_ACK_OPENSTORE2() {}

	void deliver(zc_ack_openstore2_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_ACK_OPEN_BANKING = 0x09b7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_ACK_OPEN_BANKING = 0x09b7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_OPEN_BANKING = 0x09b7
#else
ID_ZC_ACK_OPEN_BANKING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPEN_BANKING
 *
 */ 
class ZC_ACK_OPEN_BANKING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPEN_BANKING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPEN_BANKING, s)
	{}
	virtual ~ZC_ACK_OPEN_BANKING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130502)
ID_ZC_ACK_OPEN_GUILD_STORAGE = 0x09bb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130502)
ID_ZC_ACK_OPEN_GUILD_STORAGE = 0x09bb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_OPEN_GUILD_STORAGE = 0x09bb
#else
ID_ZC_ACK_OPEN_GUILD_STORAGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPEN_GUILD_STORAGE
 *
 */ 
class ZC_ACK_OPEN_GUILD_STORAGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPEN_GUILD_STORAGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPEN_GUILD_STORAGE, s)
	{}
	virtual ~ZC_ACK_OPEN_GUILD_STORAGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_OPEN_MEMBER_INFO = 0x0158
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_OPEN_MEMBER_INFO = 0x0158
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ACK_OPEN_MEMBER_INFO = 0x0158
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_OPEN_MEMBER_INFO = 0x0158
#else
ID_ZC_ACK_OPEN_MEMBER_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPEN_MEMBER_INFO
 *
 */ 
class ZC_ACK_OPEN_MEMBER_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPEN_MEMBER_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPEN_MEMBER_INFO, s)
	{}
	virtual ~ZC_ACK_OPEN_MEMBER_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_OPEN_ROULETTE = 0x0a1a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_OPEN_ROULETTE = 0x0a1a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_OPEN_ROULETTE = 0x0a1a
#else
ID_ZC_ACK_OPEN_ROULETTE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPEN_ROULETTE
 *
 */ 
class ZC_ACK_OPEN_ROULETTE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPEN_ROULETTE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPEN_ROULETTE, s)
	{}
	virtual ~ZC_ACK_OPEN_ROULETTE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140416)
ID_ZC_ACK_OPEN_WRITE_RODEX = 0x0a12
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140416)
ID_ZC_ACK_OPEN_WRITE_RODEX = 0x0a12
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_OPEN_WRITE_RODEX = 0x0a12
#else
ID_ZC_ACK_OPEN_WRITE_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_OPEN_WRITE_RODEX
 *
 */ 
class ZC_ACK_OPEN_WRITE_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_OPEN_WRITE_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_OPEN_WRITE_RODEX, s)
	{}
	virtual ~ZC_ACK_OPEN_WRITE_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120120)
ID_ZC_ACK_PARTY_NAME = 0x0911
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120120)
ID_ZC_ACK_PARTY_NAME = 0x0911
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_PARTY_NAME = 0x0911
#else
ID_ZC_ACK_PARTY_NAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_PARTY_NAME
 *
 */ 
class ZC_ACK_PARTY_NAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_PARTY_NAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_PARTY_NAME, s)
	{}
	virtual ~ZC_ACK_PARTY_NAME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PLAYER_AID_IN_RANGE = 0x0a6d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PLAYER_AID_IN_RANGE = 0x0a6d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PLAYER_AID_IN_RANGE = 0x0a6d
#else
ID_ZC_ACK_PLAYER_AID_IN_RANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_PLAYER_AID_IN_RANGE
 *
 */ 
class ZC_ACK_PLAYER_AID_IN_RANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_PLAYER_AID_IN_RANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_PLAYER_AID_IN_RANGE, s)
	{}
	virtual ~ZC_ACK_PLAYER_AID_IN_RANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PREVIEW_MACRO_DETECTOR = 0x0a6a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PREVIEW_MACRO_DETECTOR = 0x0a6a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_PREVIEW_MACRO_DETECTOR = 0x0a6a
#else
ID_ZC_ACK_PREVIEW_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_PREVIEW_MACRO_DETECTOR
 *
 */ 
class ZC_ACK_PREVIEW_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_PREVIEW_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_PREVIEW_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_ACK_PREVIEW_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040817
ID_ZC_ACK_PVPPOINT = 0x0210
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION == 20211117 \
	|| PACKET_VERSION == 20211105 \
	|| PACKET_VERSION == 20211103 \
	|| PACKET_VERSION >= 20041220)
ID_ZC_ACK_PVPPOINT = 0x0210
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_PVPPOINT = 0x0210
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040817
ID_ZC_ACK_PVPPOINT = 0x0210
#else
ID_ZC_ACK_PVPPOINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_PVPPOINT
 *
 */ 
class ZC_ACK_PVPPOINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_PVPPOINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_PVPPOINT, s)
	{}
	virtual ~ZC_ACK_PVPPOINT() {}

	void deliver(int char_id, int account_id, int win_point, int lose_point, int point);
	ByteBuffer &serialize();

/* Structure */
	int _char_id{ 0 };
	int _account_id{ 0 };
	int _win_point{ 0 };
	int _lose_point{ 0 };
	int _point{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_COMBINE_ITEM = 0x0a50
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_COMBINE_ITEM = 0x0a50
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_COMBINE_ITEM = 0x0a50
#else
ID_ZC_ACK_RANDOM_COMBINE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_RANDOM_COMBINE_ITEM
 *
 */ 
class ZC_ACK_RANDOM_COMBINE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_RANDOM_COMBINE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_RANDOM_COMBINE_ITEM, s)
	{}
	virtual ~ZC_ACK_RANDOM_COMBINE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_UPGRADE_ITEM = 0x0ab7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_UPGRADE_ITEM = 0x0ab7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_RANDOM_UPGRADE_ITEM = 0x0ab7
#else
ID_ZC_ACK_RANDOM_UPGRADE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_RANDOM_UPGRADE_ITEM
 *
 */ 
class ZC_ACK_RANDOM_UPGRADE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_RANDOM_UPGRADE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_RANDOM_UPGRADE_ITEM, s)
	{}
	virtual ~ZC_ACK_RANDOM_UPGRADE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20120503
ID_ZC_ACK_RANKING = 0x097d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_RANKING = 0x0af6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20120502
ID_ZC_ACK_RANKING = 0x097d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_RANKING = 0x0af6
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ACK_RANKING = 0x097d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_RANKING = 0x0af6
#else
ID_ZC_ACK_RANKING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_RANKING
 *
 */ 
class ZC_ACK_RANKING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_RANKING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_RANKING, s)
	{}
	virtual ~ZC_ACK_RANKING() {}

	void deliver(cz_req_ranking_type ranking_type, std::vector<zc_ack_ranking_info> info, int ranking_points);
	ByteBuffer &serialize();

/* Structure */
	int16_t _ranking_type{ 0 };
	struct zc_ack_ranking_info _info[MAX_RANKING_LIST];
	int _ranking_points{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20131230
ID_ZC_ACK_READ_RODEX = 0x09eb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_READ_RODEX = 0x0b63
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20131230
ID_ZC_ACK_READ_RODEX = 0x09eb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_READ_RODEX = 0x0b63
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ACK_READ_RODEX = 0x09eb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_READ_RODEX = 0x0b63
#else
ID_ZC_ACK_READ_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_READ_RODEX
 *
 */ 
class ZC_ACK_READ_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_READ_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_READ_RODEX, s)
	{}
	virtual ~ZC_ACK_READ_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x011e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x011e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x011e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x011e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x011e
#else
ID_ZC_ACK_REMEMBER_WARPPOINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REMEMBER_WARPPOINT
 *
 */ 
class ZC_ACK_REMEMBER_WARPPOINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REMEMBER_WARPPOINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REMEMBER_WARPPOINT, s)
	{}
	virtual ~ZC_ACK_REMEMBER_WARPPOINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM = 0x09b1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130327)
ID_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM = 0x09b1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM = 0x09b1
#else
ID_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REMOVE_BARGAIN_SALE_ITEM
 *
 */ 
class ZC_ACK_REMOVE_BARGAIN_SALE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REMOVE_BARGAIN_SALE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REMOVE_BARGAIN_SALE_ITEM, s)
	{}
	virtual ~ZC_ACK_REMOVE_BARGAIN_SALE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140521)
ID_ZC_ACK_REMOVE_RODEX_ITEM = 0x0a07
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140521)
ID_ZC_ACK_REMOVE_RODEX_ITEM = 0x0a07
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REMOVE_RODEX_ITEM = 0x0a07
#else
ID_ZC_ACK_REMOVE_RODEX_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REMOVE_RODEX_ITEM
 *
 */ 
class ZC_ACK_REMOVE_RODEX_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REMOVE_RODEX_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REMOVE_RODEX_ITEM, s)
	{}
	virtual ~ZC_ACK_REMOVE_RODEX_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQMAKINGITEM = 0x018f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQMAKINGITEM = 0x018f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQMAKINGITEM = 0x018f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQMAKINGITEM = 0x018f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQMAKINGITEM = 0x018f
#else
ID_ZC_ACK_REQMAKINGITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQMAKINGITEM
 *
 */ 
class ZC_ACK_REQMAKINGITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQMAKINGITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQMAKINGITEM, s)
	{}
	virtual ~ZC_ACK_REQMAKINGITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQNAME = 0x0095
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQNAME = 0x0095
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170920)
ID_ZC_ACK_REQNAME = 0x0adf
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ACK_REQNAME = 0x0095
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170920)
ID_ZC_ACK_REQNAME = 0x0adf
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQNAME = 0x0095
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQNAME = 0x0adf
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_ACK_REQNAME = 0x0095
#else
ID_ZC_ACK_REQNAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQNAME
 *
 */ 
class ZC_ACK_REQNAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQNAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQNAME, s)
	{}
	virtual ~ZC_ACK_REQNAME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQNAMEALL = 0x0195
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQNAMEALL = 0x0195
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQNAMEALL = 0x0195
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQNAMEALL = 0x0195
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQNAMEALL = 0x0195
#else
ID_ZC_ACK_REQNAMEALL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQNAMEALL
 *
 */ 
class ZC_ACK_REQNAMEALL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQNAMEALL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQNAMEALL, s)
	{}
	virtual ~ZC_ACK_REQNAMEALL() {}

	void deliver(int32_t guid, std::string name, std::string party_name, std::string guild_name, std::string position_name);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid;
	char _name[MAX_UNIT_NAME_LENGTH];
	char _party_name[MAX_UNIT_NAME_LENGTH];
	char _guild_name[MAX_UNIT_NAME_LENGTH];
	char _position_name[MAX_UNIT_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140917)
ID_ZC_ACK_REQNAMEALL2 = 0x0a30
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140917)
ID_ZC_ACK_REQNAMEALL2 = 0x0a30
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQNAMEALL2 = 0x0a30
#else
ID_ZC_ACK_REQNAMEALL2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQNAMEALL2
 *
 */ 
class ZC_ACK_REQNAMEALL2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQNAMEALL2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQNAMEALL2, s)
	{}
	virtual ~ZC_ACK_REQNAMEALL2() {}

	void deliver(int32_t guid, std::string name, std::string party_name, std::string guild_name, std::string position_name, int32_t title_id);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid;
	char _name[MAX_UNIT_NAME_LENGTH];
	char _party_name[MAX_UNIT_NAME_LENGTH];
	char _guild_name[MAX_UNIT_NAME_LENGTH];
	char _position_name[MAX_UNIT_NAME_LENGTH];
	int32_t _title_id;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQNAME_BYGID = 0x0194
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQNAME_BYGID = 0x0194
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180207)
ID_ZC_ACK_REQNAME_BYGID = 0x0af7
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ACK_REQNAME_BYGID = 0x0194
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180207)
ID_ZC_ACK_REQNAME_BYGID = 0x0af7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQNAME_BYGID = 0x0194
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ACK_REQNAME_BYGID = 0x0194
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180207)
ID_ZC_ACK_REQNAME_BYGID = 0x0af7
#else
ID_ZC_ACK_REQNAME_BYGID = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQNAME_BYGID
 *
 */ 
class ZC_ACK_REQNAME_BYGID : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQNAME_BYGID(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQNAME_BYGID, s)
	{}
	virtual ~ZC_ACK_REQNAME_BYGID() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_ACK_REQNAME_TITLE = 0x0adf
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_ACK_REQNAME_TITLE = 0x0adf
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_ACK_REQNAME_TITLE = 0x0adf
#else
ID_ZC_ACK_REQNAME_TITLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQNAME_TITLE
 *
 */ 
class ZC_ACK_REQNAME_TITLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQNAME_TITLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQNAME_TITLE, s)
	{}
	virtual ~ZC_ACK_REQNAME_TITLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0173
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0173
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0173
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0173
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0173
#else
ID_ZC_ACK_REQ_ALLY_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_ALLY_GUILD
 *
 */ 
class ZC_ACK_REQ_ALLY_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_ALLY_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_ALLY_GUILD, s)
	{}
	virtual ~ZC_ACK_REQ_ALLY_GUILD() {}

	void deliver(zc_ack_req_ally_guild_response_type response);
	ByteBuffer &serialize();

/* Structure */
	int8_t _response{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0156
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0156
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0156
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0156
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0156
#else
ID_ZC_ACK_REQ_CHANGE_MEMBERS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_CHANGE_MEMBERS
 *
 */ 
class ZC_ACK_REQ_CHANGE_MEMBERS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_CHANGE_MEMBERS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_CHANGE_MEMBERS, s)
	{}
	virtual ~ZC_ACK_REQ_CHANGE_MEMBERS() {}

	void deliver(std::vector<s_zcack_reqchange_members> members);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zcack_reqchange_members> _members;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_DISCONNECT = 0x018b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_DISCONNECT = 0x018b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_DISCONNECT = 0x018b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_DISCONNECT = 0x018b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_DISCONNECT = 0x018b
#else
ID_ZC_ACK_REQ_DISCONNECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_DISCONNECT
 *
 */ 
class ZC_ACK_REQ_DISCONNECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_DISCONNECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_DISCONNECT, s)
	{}
	virtual ~ZC_ACK_REQ_DISCONNECT() {}

	void deliver(bool wait);
	ByteBuffer &serialize();

/* Structure */
	int16_t _waiting{0}; // 0 =  allowed, 1 = not allowed (wait 10 seconds)
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0181
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0181
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0181
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0181
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0181
#else
ID_ZC_ACK_REQ_HOSTILE_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_HOSTILE_GUILD
 *
 */ 
class ZC_ACK_REQ_HOSTILE_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_HOSTILE_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_HOSTILE_GUILD, s)
	{}
	virtual ~ZC_ACK_REQ_HOSTILE_GUILD() {}

	void deliver(zc_ack_req_hostile_guild_response_type response);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_JOIN_GROUP = 0x00fd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GROUP = 0x00fd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GROUP = 0x00fd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_JOIN_GROUP = 0x00fd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GROUP = 0x00fd
#else
ID_ZC_ACK_REQ_JOIN_GROUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_JOIN_GROUP
 *
 */ 
class ZC_ACK_REQ_JOIN_GROUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_JOIN_GROUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_JOIN_GROUP, s)
	{}
	virtual ~ZC_ACK_REQ_JOIN_GROUP() {}

	void deliver(std::string name, zcparty_joinreqack_result_type result);
	ByteBuffer &serialize();

/* Structure */
	char _name[MAX_UNIT_NAME_LENGTH]{ 0 };
	int8_t _result;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0169
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0169
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0169
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0169
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0169
#else
ID_ZC_ACK_REQ_JOIN_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_REQ_JOIN_GUILD
 *
 */ 
class ZC_ACK_REQ_JOIN_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_REQ_JOIN_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_REQ_JOIN_GUILD, s)
	{}
	virtual ~ZC_ACK_REQ_JOIN_GUILD() {}

	void deliver(zc_ack_req_join_guild_type response);
	ByteBuffer &serialize();

/* Structure */
	int8_t _response{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20131218
ID_ZC_ACK_RODEX_LIST = 0x09f0
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20160601
ID_ZC_ACK_RODEX_LIST = 0x0a7d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_ACK_RODEX_LIST = 0x0ac2
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20131218
ID_ZC_ACK_RODEX_LIST = 0x09f0
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20160601
ID_ZC_ACK_RODEX_LIST = 0x0a7d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_ACK_RODEX_LIST = 0x0ac2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_RODEX_LIST = 0x0ac2
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_ACK_RODEX_LIST = 0x0a7d
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_ACK_RODEX_LIST = 0x09f0
#else
ID_ZC_ACK_RODEX_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_RODEX_LIST
 *
 */ 
class ZC_ACK_RODEX_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_RODEX_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_RODEX_LIST, s)
	{}
	virtual ~ZC_ACK_RODEX_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_ROULEITTE_INFO = 0x0a1c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ACK_ROULEITTE_INFO = 0x0a1c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ROULEITTE_INFO = 0x0a1c
#else
ID_ZC_ACK_ROULEITTE_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ROULEITTE_INFO
 *
 */ 
class ZC_ACK_ROULEITTE_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ROULEITTE_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ROULEITTE_INFO, s)
	{}
	virtual ~ZC_ACK_ROULEITTE_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110614)
ID_ZC_ACK_SCHEDULER_CASHITEM = 0x08ca
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110614)
ID_ZC_ACK_SCHEDULER_CASHITEM = 0x08ca
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_SCHEDULER_CASHITEM = 0x08ca
#else
ID_ZC_ACK_SCHEDULER_CASHITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_SCHEDULER_CASHITEM
 *
 */ 
class ZC_ACK_SCHEDULER_CASHITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_SCHEDULER_CASHITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_SCHEDULER_CASHITEM, s)
	{}
	virtual ~ZC_ACK_SCHEDULER_CASHITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131230)
ID_ZC_ACK_SEND_RODEX = 0x09ed
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131230)
ID_ZC_ACK_SEND_RODEX = 0x09ed
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_SEND_RODEX = 0x09ed
#else
ID_ZC_ACK_SEND_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_SEND_RODEX
 *
 */ 
class ZC_ACK_SEND_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_SEND_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_SEND_RODEX, s)
	{}
	virtual ~ZC_ACK_SEND_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100824)
ID_ZC_ACK_SE_CASH_ITEM_LIST = 0x0847
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100824)
ID_ZC_ACK_SE_CASH_ITEM_LIST = 0x0847
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_SE_CASH_ITEM_LIST = 0x0847
#else
ID_ZC_ACK_SE_CASH_ITEM_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_SE_CASH_ITEM_LIST
 *
 */ 
class ZC_ACK_SE_CASH_ITEM_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_SE_CASH_ITEM_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_SE_CASH_ITEM_LIST, s)
	{}
	virtual ~ZC_ACK_SE_CASH_ITEM_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110222)
ID_ZC_ACK_SE_CASH_ITEM_LIST2 = 0x08c0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110222)
ID_ZC_ACK_SE_CASH_ITEM_LIST2 = 0x08c0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_SE_CASH_ITEM_LIST2 = 0x08c0
#else
ID_ZC_ACK_SE_CASH_ITEM_LIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_SE_CASH_ITEM_LIST2
 *
 */ 
class ZC_ACK_SE_CASH_ITEM_LIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_SE_CASH_ITEM_LIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_SE_CASH_ITEM_LIST2, s)
	{}
	virtual ~ZC_ACK_SE_CASH_ITEM_LIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040816
ID_ZC_ACK_STATUS_GM = 0x0214
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040816)
ID_ZC_ACK_STATUS_GM = 0x0214
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_STATUS_GM = 0x0214
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040816
ID_ZC_ACK_STATUS_GM = 0x0214
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_STATUS_GM = 0x0214
#else
ID_ZC_ACK_STATUS_GM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_STATUS_GM
 *
 */ 
class ZC_ACK_STATUS_GM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_STATUS_GM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_STATUS_GM, s)
	{}
	virtual ~ZC_ACK_STATUS_GM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210818 \
	|| PACKET_VERSION == 20210317)
ID_ZC_ACK_TAKEOFF_EQUIP_ALL = 0x0bae
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_ACK_TAKEOFF_EQUIP_ALL = 0x0bae
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210818 \
	|| PACKET_VERSION == 20210317)
ID_ZC_ACK_TAKEOFF_EQUIP_ALL = 0x0bae
#else
ID_ZC_ACK_TAKEOFF_EQUIP_ALL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_TAKEOFF_EQUIP_ALL
 *
 */ 
class ZC_ACK_TAKEOFF_EQUIP_ALL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_TAKEOFF_EQUIP_ALL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_TAKEOFF_EQUIP_ALL, s)
	{}
	virtual ~ZC_ACK_TAKEOFF_EQUIP_ALL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ACK_TAKEOFF_EQUIP_V5 = 0x099a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ACK_TAKEOFF_EQUIP_V5 = 0x099a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_TAKEOFF_EQUIP_V5 = 0x099a
#else
ID_ZC_ACK_TAKEOFF_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_TAKEOFF_EQUIP_V5
 *
 */ 
class ZC_ACK_TAKEOFF_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_TAKEOFF_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_TAKEOFF_EQUIP_V5, s)
	{}
	virtual ~ZC_ACK_TAKEOFF_EQUIP_V5() {}

	void deliver(int16_t inventory_index, int32_t equip_location_mask, item_unequip_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{0};
	int32_t _equip_location_mask{0};
	int8_t _result{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_TOUSESKILL = 0x0110
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_TOUSESKILL = 0x0110
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_TOUSESKILL = 0x0110
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_TOUSESKILL = 0x0110
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_TOUSESKILL = 0x0110
#else
ID_ZC_ACK_TOUSESKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_TOUSESKILL
 *
 */ 
class ZC_ACK_TOUSESKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_TOUSESKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_TOUSESKILL, s)
	{}
	virtual ~ZC_ACK_TOUSESKILL() {}

	void deliver(int16_t skill_id, int32_t message_type, int32_t item_id, skill_use_fail_cause_type cause);
	ByteBuffer &serialize();

/* Structure */
	int16_t _skill_id{0};

/// message type:
/// (only used when skill id = NV_BASIC and cause = 0):
///     0 = "skill failed" MsgStringTable[159]
///     1 = "no emotions" MsgStringTable[160]
///     2 = "no sit" MsgStringTable[161]
///     3 = "no chat" MsgStringTable[162]
///     4 = "no party" MsgStringTable[163]
///     5 = "no shout" MsgStringTable[164]
///     6 = "no PKing" MsgStringTable[165]
///     7 = "no aligning" MsgStringTable[383]
///     ? = ignored
#if (CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181121) || \
	(CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180704) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20181114)
	int32_t _message_type{0};
	int32_t _item_id{0};
#else
	int16_t _message_type{0};
	int16_t _item_id{0};
#endif
	int8_t _flag{0};
/// cause:
///     0 = "not enough skill level" MsgStringTable[214] (AL_WARP)
///         "steal failed" MsgStringTable[205] (TF_STEAL)
///         "envenom failed" MsgStringTable[207] (TF_POISON)
///         "skill failed" MsgStringTable[204] (otherwise)
///   ... = @see enum useskill_fail_cause
///     ? = ignored
	int8_t _cause{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_UPLOAD_MACRO_DETECTOR = 0x0a53
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_UPLOAD_MACRO_DETECTOR = 0x0a53
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ACK_UPLOAD_MACRO_DETECTOR = 0x0a53
#else
ID_ZC_ACK_UPLOAD_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_UPLOAD_MACRO_DETECTOR
 *
 */ 
class ZC_ACK_UPLOAD_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_UPLOAD_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_UPLOAD_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_ACK_UPLOAD_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041129
ID_ZC_ACK_WEAPONREFINE = 0x0223
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041129)
ID_ZC_ACK_WEAPONREFINE = 0x0223
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WEAPONREFINE = 0x0223
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041129
ID_ZC_ACK_WEAPONREFINE = 0x0223
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WEAPONREFINE = 0x0223
#else
ID_ZC_ACK_WEAPONREFINE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_WEAPONREFINE
 *
 */ 
class ZC_ACK_WEAPONREFINE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_WEAPONREFINE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_WEAPONREFINE, s)
	{}
	virtual ~ZC_ACK_WEAPONREFINE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ACK_WEAR_EQUIP_V5 = 0x0999
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ACK_WEAR_EQUIP_V5 = 0x0999
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WEAR_EQUIP_V5 = 0x0999
#else
ID_ZC_ACK_WEAR_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_WEAR_EQUIP_V5
 *
 */ 
class ZC_ACK_WEAR_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_WEAR_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_WEAR_EQUIP_V5, s)
	{}
	virtual ~ZC_ACK_WEAR_EQUIP_V5() {}

	void deliver(int16_t inventory_index, int32_t location, int16_t look, int8_t result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index{0};
	int32_t _equip_location{0};
	int16_t _look{0};
///     0 = failure
///     1 = success
///     2 = failure due to low level
	int8_t _result{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACK_WHISPER = 0x0098
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WHISPER = 0x0098
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WHISPER = 0x0098
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACK_WHISPER = 0x0098
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WHISPER = 0x0098
#else
ID_ZC_ACK_WHISPER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_WHISPER
 *
 */ 
class ZC_ACK_WHISPER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_WHISPER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_WHISPER, s)
	{}
	virtual ~ZC_ACK_WHISPER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};
 
enum zc_whisper_result_type {
	WRT_SUCCESS               = 0,
	WRT_RECIPIENT_OFFLINE     = 1,
	WRT_RECIPIENT_IGNORE      = 2,
	WRT_RECIPIENT_IGNORE_ALL  = 3
};
enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131030)
ID_ZC_ACK_WHISPER02 = 0x09df
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131030)
ID_ZC_ACK_WHISPER02 = 0x09df
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_WHISPER02 = 0x09df
#else
ID_ZC_ACK_WHISPER02 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_WHISPER02
 *
 */ 
class ZC_ACK_WHISPER02 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_WHISPER02(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_WHISPER02, s)
	{}
	virtual ~ZC_ACK_WHISPER02() {}

	void deliver(zc_whisper_result_type result, int32_t recipient_char_id);
	ByteBuffer &serialize();

/* Structure */
/// result:
///     0 = success to send wisper
///     1 = target character is not loged in
///     2 = ignored by target
///     3 = everyone ignored by target
	int8_t _result;
	int32_t _recipient_char_id;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140409)
ID_ZC_ACK_ZENY_FROM_RODEX = 0x09f2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140409)
ID_ZC_ACK_ZENY_FROM_RODEX = 0x09f2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACK_ZENY_FROM_RODEX = 0x09f2
#else
ID_ZC_ACK_ZENY_FROM_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACK_ZENY_FROM_RODEX
 *
 */ 
class ZC_ACK_ZENY_FROM_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACK_ZENY_FROM_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACK_ZENY_FROM_RODEX, s)
	{}
	virtual ~ZC_ACK_ZENY_FROM_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ACTION_FAILURE = 0x013b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ACTION_FAILURE = 0x013b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACTION_FAILURE = 0x013b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ACTION_FAILURE = 0x013b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACTION_FAILURE = 0x013b
#else
ID_ZC_ACTION_FAILURE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACTION_FAILURE
 *
 */ 
class ZC_ACTION_FAILURE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACTION_FAILURE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACTION_FAILURE, s)
	{}
	virtual ~ZC_ACTION_FAILURE() {}

	void deliver(int16_t message_type);
	ByteBuffer &serialize();

/* Structure */
	/// type:
	///     0 = MsgStringTable[242]="Please equip the proper ammunition first."
	///     1 = MsgStringTable[243]="You can't Attack or use Skills because your Weight Limit has been exceeded."
	///     2 = MsgStringTable[244]="You can't use Skills because Weight Limit has been exceeded."
	///     3 = assassin, baby_assassin, assassin_cross => MsgStringTable[1040]="You have equipped throwing daggers."
	///         gunslinger => MsgStringTable[1175]="Bullets have been equipped."
	///         NOT ninja => MsgStringTable[245]="Ammunition has been equipped."
	int16_t _message_type{0};
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20130515
ID_ZC_ACTION_MOVE = 0x09c0
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20130515
ID_ZC_ACTION_MOVE = 0x09c0
#else
ID_ZC_ACTION_MOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACTION_MOVE
 *
 */ 
class ZC_ACTION_MOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACTION_MOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACTION_MOVE, s)
	{}
	virtual ~ZC_ACTION_MOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_ACTIVE_QUEST = 0x02b7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070807)
ID_ZC_ACTIVE_QUEST = 0x02b7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ACTIVE_QUEST = 0x02b7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_ACTIVE_QUEST = 0x02b7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ACTIVE_QUEST = 0x02b7
#else
ID_ZC_ACTIVE_QUEST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ACTIVE_QUEST
 *
 */ 
class ZC_ACTIVE_QUEST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ACTIVE_QUEST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ACTIVE_QUEST, s)
	{}
	virtual ~ZC_ACTIVE_QUEST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_EXCHANGE_ITEM = 0x00e9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_EXCHANGE_ITEM = 0x0b42
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_EXCHANGE_ITEM = 0x00e9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_EXCHANGE_ITEM = 0x0b42
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ADD_EXCHANGE_ITEM = 0x00e9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_EXCHANGE_ITEM = 0x00e9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_EXCHANGE_ITEM = 0x0b42
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ADD_EXCHANGE_ITEM = 0x00e9
#else
ID_ZC_ADD_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_EXCHANGE_ITEM
 *
 */ 
class ZC_ADD_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_ADD_EXCHANGE_ITEM() {}

	void deliver(s_zc_add_exchange_item item);
	ByteBuffer& serialize();
	
	s_zc_add_exchange_item _item;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100223)
ID_ZC_ADD_EXCHANGE_ITEM2 = 0x080f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100223)
ID_ZC_ADD_EXCHANGE_ITEM2 = 0x080f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_EXCHANGE_ITEM2 = 0x080f
#else
ID_ZC_ADD_EXCHANGE_ITEM2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_EXCHANGE_ITEM2
 *
 */ 
class ZC_ADD_EXCHANGE_ITEM2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_EXCHANGE_ITEM2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_EXCHANGE_ITEM2, s)
	{}
	virtual ~ZC_ADD_EXCHANGE_ITEM2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
//<nameid>.W <item type>.B <amount>.L <identified>.B <damaged>.B <refine>.B <card1>.W <card2>.W <card3>.W <card4>.W
	int16_t _item_id{ 0 };
	int8_t _item_type{ 0 };
	int _amount{ 0 };
	int8_t _identified{ 0 };
	int8_t _damaged{ 0 };
	int8_t _refine{ 0 };
	item_slot _cards;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_EXCHANGE_ITEM3 = 0x0a09
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_EXCHANGE_ITEM3 = 0x0a09
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_EXCHANGE_ITEM3 = 0x0a09
#else
ID_ZC_ADD_EXCHANGE_ITEM3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_EXCHANGE_ITEM3
 *
 */ 
class ZC_ADD_EXCHANGE_ITEM3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_EXCHANGE_ITEM3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_EXCHANGE_ITEM3, s)
	{}
	virtual ~ZC_ADD_EXCHANGE_ITEM3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160921)
ID_ZC_ADD_EXCHANGE_ITEM4 = 0x0a96
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160921)
ID_ZC_ADD_EXCHANGE_ITEM4 = 0x0a96
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_EXCHANGE_ITEM4 = 0x0a96
#else
ID_ZC_ADD_EXCHANGE_ITEM4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_EXCHANGE_ITEM4
 *
 */ 
class ZC_ADD_EXCHANGE_ITEM4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_EXCHANGE_ITEM4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_EXCHANGE_ITEM4, s)
	{}
	virtual ~ZC_ADD_EXCHANGE_ITEM4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_FRIENDS_LIST = 0x0209
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_ADD_FRIENDS_LIST = 0x0209
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_FRIENDS_LIST = 0x0209
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_ADD_FRIENDS_LIST = 0x0209
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_FRIENDS_LIST = 0x0209
#else
ID_ZC_ADD_FRIENDS_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_FRIENDS_LIST
 *
 */ 
class ZC_ADD_FRIENDS_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_FRIENDS_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_FRIENDS_LIST, s)
	{}
	virtual ~ZC_ADD_FRIENDS_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_ITEM_TO_CART = 0x0124
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_ITEM_TO_CART = 0x0124
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_ITEM_TO_CART = 0x0b45
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ADD_ITEM_TO_CART = 0x0124
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_ITEM_TO_CART = 0x0b45
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_ITEM_TO_CART = 0x0124
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ADD_ITEM_TO_CART = 0x0124
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADD_ITEM_TO_CART = 0x0b45
#else
ID_ZC_ADD_ITEM_TO_CART = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_CART
 *
 */ 
class ZC_ADD_ITEM_TO_CART : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_CART(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_CART, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_CART() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_ITEM_TO_CART2 = 0x01c5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_CART2 = 0x01c5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_CART2 = 0x01c5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_ITEM_TO_CART2 = 0x01c5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_CART2 = 0x01c5
#else
ID_ZC_ADD_ITEM_TO_CART2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_CART2
 *
 */ 
class ZC_ADD_ITEM_TO_CART2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_CART2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_CART2, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_CART2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_ITEM_TO_CART3 = 0x0a0b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_ITEM_TO_CART3 = 0x0a0b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_CART3 = 0x0a0b
#else
ID_ZC_ADD_ITEM_TO_CART3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_CART3
 *
 */ 
class ZC_ADD_ITEM_TO_CART3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_CART3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_CART3, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_CART3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_ITEM_TO_STORE = 0x00f4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE = 0x00f4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE = 0x00f4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_ITEM_TO_STORE = 0x00f4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE = 0x00f4
#else
ID_ZC_ADD_ITEM_TO_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_STORE
 *
 */ 
class ZC_ADD_ITEM_TO_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_STORE, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_STORE() {}

	void deliver(std::shared_ptr<const item_entry_data> entry);
	ByteBuffer &serialize();

/* Structure */
	std::shared_ptr<const item_entry_data> _entry;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_ITEM_TO_STORE2 = 0x01c4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE2 = 0x01c4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE2 = 0x01c4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_ITEM_TO_STORE2 = 0x01c4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE2 = 0x01c4
#else
ID_ZC_ADD_ITEM_TO_STORE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_STORE2
 *
 */ 
class ZC_ADD_ITEM_TO_STORE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_STORE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_STORE2, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_STORE2() {}

	void deliver(std::shared_ptr<const item_entry_data> entry);
	ByteBuffer &serialize();

/* Structure */
	std::shared_ptr<const item_entry_data> _entry;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_ITEM_TO_STORE3 = 0x0a0a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ADD_ITEM_TO_STORE3 = 0x0a0a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_ITEM_TO_STORE3 = 0x0a0a
#else
ID_ZC_ADD_ITEM_TO_STORE3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_ITEM_TO_STORE3
 *
 */ 
class ZC_ADD_ITEM_TO_STORE3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_ITEM_TO_STORE3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_ITEM_TO_STORE3, s)
	{}
	virtual ~ZC_ADD_ITEM_TO_STORE3() {}

	void deliver(std::shared_ptr<const item_entry_data> entry, int amount);
	ByteBuffer &serialize();

/* Structure */
	std::shared_ptr<const item_entry_data> _entry;
	int _amount;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0104
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171206)
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0ae4
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20151007
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0a43
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20031117
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0104
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171206)
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0ae4
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20151007
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0a43
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0104
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031117
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0104
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171130)
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0ae4
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0104
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0a43
#else
ID_ZC_ADD_MEMBER_TO_GROUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_MEMBER_TO_GROUP
 *
 */ 
class ZC_ADD_MEMBER_TO_GROUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_MEMBER_TO_GROUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_MEMBER_TO_GROUP, s)
	{}
	virtual ~ZC_ADD_MEMBER_TO_GROUP() {}

	void deliver(s_zc_add_member_to_group member);
	ByteBuffer &serialize();

/* Structure */
	s_zc_add_member_to_group _member;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x01e9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031117)
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x01e9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x01e9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031117
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x01e9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x01e9
#else
ID_ZC_ADD_MEMBER_TO_GROUP2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_MEMBER_TO_GROUP2
 *
 */ 
class ZC_ADD_MEMBER_TO_GROUP2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_MEMBER_TO_GROUP2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_MEMBER_TO_GROUP2, s)
	{}
	virtual ~ZC_ADD_MEMBER_TO_GROUP2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_ADD_QUEST = 0x02b3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070821)
ID_ZC_ADD_QUEST = 0x02b3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_QUEST = 0x02b3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_ADD_QUEST = 0x02b3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_QUEST = 0x02b3
#else
ID_ZC_ADD_QUEST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_QUEST
 *
 */ 
class ZC_ADD_QUEST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_QUEST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_QUEST, s)
	{}
	virtual ~ZC_ADD_QUEST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20140122
ID_ZC_ADD_QUEST_EX = 0x09f9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_ADD_QUEST_EX = 0x0b0c
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20140122
ID_ZC_ADD_QUEST_EX = 0x09f9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_ADD_QUEST_EX = 0x0b0c
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ADD_QUEST_EX = 0x09f9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180822)
ID_ZC_ADD_QUEST_EX = 0x0b0c
#else
ID_ZC_ADD_QUEST_EX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_QUEST_EX
 *
 */ 
class ZC_ADD_QUEST_EX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_QUEST_EX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_QUEST_EX, s)
	{}
	virtual ~ZC_ADD_QUEST_EX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_RELATED_GUILD = 0x0185
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_RELATED_GUILD = 0x0185
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_RELATED_GUILD = 0x0185
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_RELATED_GUILD = 0x0185
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ADD_RELATED_GUILD = 0x0185
#else
ID_ZC_ADD_RELATED_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_RELATED_GUILD
 *
 */ 
class ZC_ADD_RELATED_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_RELATED_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_RELATED_GUILD, s)
	{}
	virtual ~ZC_ADD_RELATED_GUILD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ADD_SKILL = 0x0111
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_SKILL = 0x0111
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_ADD_SKILL = 0x0b31
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ADD_SKILL = 0x0111
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_ADD_SKILL = 0x0b31
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ADD_SKILL = 0x0111
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ADD_SKILL = 0x0111
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190626)
ID_ZC_ADD_SKILL = 0x0b31
#else
ID_ZC_ADD_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADD_SKILL
 *
 */ 
class ZC_ADD_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADD_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADD_SKILL, s)
	{}
	virtual ~ZC_ADD_SKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_REQ = 0x0ae7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_REQ = 0x0ae7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_REQ = 0x0ae7
#else
ID_ZC_ADVENTURER_AGENCY_JOIN_REQ = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADVENTURER_AGENCY_JOIN_REQ
 *
 */ 
class ZC_ADVENTURER_AGENCY_JOIN_REQ : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADVENTURER_AGENCY_JOIN_REQ(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADVENTURER_AGENCY_JOIN_REQ, s)
	{}
	virtual ~ZC_ADVENTURER_AGENCY_JOIN_REQ() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_RESULT = 0x0afa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_RESULT = 0x0afa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ADVENTURER_AGENCY_JOIN_RESULT = 0x0afa
#else
ID_ZC_ADVENTURER_AGENCY_JOIN_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ADVENTURER_AGENCY_JOIN_RESULT
 *
 */ 
class ZC_ADVENTURER_AGENCY_JOIN_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ADVENTURER_AGENCY_JOIN_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ADVENTURER_AGENCY_JOIN_RESULT, s)
	{}
	virtual ~ZC_ADVENTURER_AGENCY_JOIN_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060904
ID_ZC_AID = 0x0283
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060904)
ID_ZC_AID = 0x0283
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AID = 0x0283
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060904
ID_ZC_AID = 0x0283
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AID = 0x0283
#else
ID_ZC_AID = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AID
 *
 */ 
class ZC_AID : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AID(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AID, s)
	{}
	virtual ~ZC_AID() {}

	void deliver(int32_t aid);
	ByteBuffer &serialize();

/* Structure */
	int32_t _account_id{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_AIRSHIP_MAPMOVE = 0x0a4b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_AIRSHIP_MAPMOVE = 0x0a4b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AIRSHIP_MAPMOVE = 0x0a4b
#else
ID_ZC_AIRSHIP_MAPMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AIRSHIP_MAPMOVE
 *
 */ 
class ZC_AIRSHIP_MAPMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AIRSHIP_MAPMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AIRSHIP_MAPMOVE, s)
	{}
	virtual ~ZC_AIRSHIP_MAPMOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_AIRSHIP_SERVERMOVE = 0x0a4c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_AIRSHIP_SERVERMOVE = 0x0a4c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AIRSHIP_SERVERMOVE = 0x0a4c
#else
ID_ZC_AIRSHIP_SERVERMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AIRSHIP_SERVERMOVE
 *
 */ 
class ZC_AIRSHIP_SERVERMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AIRSHIP_SERVERMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AIRSHIP_SERVERMOVE, s)
	{}
	virtual ~ZC_AIRSHIP_SERVERMOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_ALCHEMIST_POINT = 0x021c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041108)
ID_ZC_ALCHEMIST_POINT = 0x021c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ALCHEMIST_POINT = 0x021c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_ALCHEMIST_POINT = 0x021c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALCHEMIST_POINT = 0x021c
#else
ID_ZC_ALCHEMIST_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALCHEMIST_POINT
 *
 */ 
class ZC_ALCHEMIST_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALCHEMIST_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALCHEMIST_POINT, s)
	{}
	virtual ~ZC_ALCHEMIST_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_ALCHEMIST_RANK = 0x021a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041108)
ID_ZC_ALCHEMIST_RANK = 0x021a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ALCHEMIST_RANK = 0x021a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_ALCHEMIST_RANK = 0x021a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALCHEMIST_RANK = 0x021a
#else
ID_ZC_ALCHEMIST_RANK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALCHEMIST_RANK
 *
 */ 
class ZC_ALCHEMIST_RANK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALCHEMIST_RANK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALCHEMIST_RANK, s)
	{}
	virtual ~ZC_ALCHEMIST_RANK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ALL_ACH_LIST = 0x0a23
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_ALL_ACH_LIST = 0x0a23
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_ACH_LIST = 0x0a23
#else
ID_ZC_ALL_ACH_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_ACH_LIST
 *
 */ 
class ZC_ALL_ACH_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_ACH_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_ACH_LIST, s)
	{}
	virtual ~ZC_ALL_ACH_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070724
ID_ZC_ALL_QUEST_LIST = 0x02b1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070724)
ID_ZC_ALL_QUEST_LIST = 0x02b1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_LIST = 0x02b1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070724
ID_ZC_ALL_QUEST_LIST = 0x02b1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_LIST = 0x02b1
#else
ID_ZC_ALL_QUEST_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_QUEST_LIST
 *
 */ 
class ZC_ALL_QUEST_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_QUEST_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_QUEST_LIST, s)
	{}
	virtual ~ZC_ALL_QUEST_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120410)
ID_ZC_ALL_QUEST_LIST2 = 0x097a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120410)
ID_ZC_ALL_QUEST_LIST2 = 0x097a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_LIST2 = 0x097a
#else
ID_ZC_ALL_QUEST_LIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_QUEST_LIST2
 *
 */ 
class ZC_ALL_QUEST_LIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_QUEST_LIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_QUEST_LIST2, s)
	{}
	virtual ~ZC_ALL_QUEST_LIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140115)
ID_ZC_ALL_QUEST_LIST3 = 0x09f8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140115)
ID_ZC_ALL_QUEST_LIST3 = 0x09f8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_LIST3 = 0x09f8
#else
ID_ZC_ALL_QUEST_LIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_QUEST_LIST3
 *
 */ 
class ZC_ALL_QUEST_LIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_QUEST_LIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_QUEST_LIST3, s)
	{}
	virtual ~ZC_ALL_QUEST_LIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_ALL_QUEST_LIST4 = 0x0aff
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_ALL_QUEST_LIST4 = 0x0aff
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_ALL_QUEST_LIST4 = 0x0aff
#else
ID_ZC_ALL_QUEST_LIST4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_QUEST_LIST4
 *
 */ 
class ZC_ALL_QUEST_LIST4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_QUEST_LIST4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_QUEST_LIST4, s)
	{}
	virtual ~ZC_ALL_QUEST_LIST4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_ALL_QUEST_MISSION = 0x02b2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070807)
ID_ZC_ALL_QUEST_MISSION = 0x02b2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_MISSION = 0x02b2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_ALL_QUEST_MISSION = 0x02b2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALL_QUEST_MISSION = 0x02b2
#else
ID_ZC_ALL_QUEST_MISSION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALL_QUEST_MISSION
 *
 */ 
class ZC_ALL_QUEST_MISSION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALL_QUEST_MISSION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALL_QUEST_MISSION, s)
	{}
	virtual ~ZC_ALL_QUEST_MISSION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_EQUIP = 0x0a98
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_EQUIP = 0x0a98
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_EQUIP = 0x0a98
#else
ID_ZC_ALT_EQUIPMENT_EQUIP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALT_EQUIPMENT_EQUIP
 *
 */ 
class ZC_ALT_EQUIPMENT_EQUIP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALT_EQUIPMENT_EQUIP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALT_EQUIPMENT_EQUIP, s)
	{}
	virtual ~ZC_ALT_EQUIPMENT_EQUIP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_ITEMS = 0x0a9b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_ITEMS = 0x0a9b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_ITEMS = 0x0a9b
#else
ID_ZC_ALT_EQUIPMENT_ITEMS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALT_EQUIPMENT_ITEMS
 *
 */ 
class ZC_ALT_EQUIPMENT_ITEMS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALT_EQUIPMENT_ITEMS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALT_EQUIPMENT_ITEMS, s)
	{}
	virtual ~ZC_ALT_EQUIPMENT_ITEMS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_REMOVE = 0x0a9a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160928)
ID_ZC_ALT_EQUIPMENT_REMOVE = 0x0a9a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_REMOVE = 0x0a9a
#else
ID_ZC_ALT_EQUIPMENT_REMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALT_EQUIPMENT_REMOVE
 *
 */ 
class ZC_ALT_EQUIPMENT_REMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALT_EQUIPMENT_REMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALT_EQUIPMENT_REMOVE, s)
	{}
	virtual ~ZC_ALT_EQUIPMENT_REMOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_SWITCH_ACK = 0x0a9d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_SWITCH_ACK = 0x0a9d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_ALT_EQUIPMENT_SWITCH_ACK = 0x0a9d
#else
ID_ZC_ALT_EQUIPMENT_SWITCH_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALT_EQUIPMENT_SWITCH_ACK
 *
 */ 
class ZC_ALT_EQUIPMENT_SWITCH_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALT_EQUIPMENT_SWITCH_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALT_EQUIPMENT_SWITCH_ACK, s)
	{}
	virtual ~ZC_ALT_EQUIPMENT_SWITCH_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190213)
ID_ZC_ALT_PING = 0x0b1b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190213)
ID_ZC_ALT_PING = 0x0b1b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190130)
ID_ZC_ALT_PING = 0x0b1b
#else
ID_ZC_ALT_PING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ALT_PING
 *
 */ 
class ZC_ALT_PING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ALT_PING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ALT_PING, s)
	{}
	virtual ~ZC_ALT_PING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20150909)
ID_ZC_AOE_EFFECT_SKILL = 0x0a41
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20150909)
ID_ZC_AOE_EFFECT_SKILL = 0x0a41
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AOE_EFFECT_SKILL = 0x0a41
#else
ID_ZC_AOE_EFFECT_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AOE_EFFECT_SKILL
 *
 */ 
class ZC_AOE_EFFECT_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AOE_EFFECT_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AOE_EFFECT_SKILL, s)
	{}
	virtual ~ZC_AOE_EFFECT_SKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR = 0x0a58
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR = 0x0a58
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR = 0x0a58
#else
ID_ZC_APPLY_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_APPLY_MACRO_DETECTOR
 *
 */ 
class ZC_APPLY_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_APPLY_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_APPLY_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_APPLY_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR_CAPTCHA = 0x0a59
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR_CAPTCHA = 0x0a59
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_APPLY_MACRO_DETECTOR_CAPTCHA = 0x0a59
#else
ID_ZC_APPLY_MACRO_DETECTOR_CAPTCHA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_APPLY_MACRO_DETECTOR_CAPTCHA
 *
 */ 
class ZC_APPLY_MACRO_DETECTOR_CAPTCHA : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_APPLY_MACRO_DETECTOR_CAPTCHA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_APPLY_MACRO_DETECTOR_CAPTCHA, s)
	{}
	virtual ~ZC_APPLY_MACRO_DETECTOR_CAPTCHA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0139
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0139
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0139
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0139
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0139
#else
ID_ZC_ATTACK_FAILURE_FOR_DISTANCE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ATTACK_FAILURE_FOR_DISTANCE
 *
 */ 
class ZC_ATTACK_FAILURE_FOR_DISTANCE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ATTACK_FAILURE_FOR_DISTANCE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ATTACK_FAILURE_FOR_DISTANCE, s)
	{}
	virtual ~ZC_ATTACK_FAILURE_FOR_DISTANCE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ATTACK_RANGE = 0x013a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_RANGE = 0x013a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_RANGE = 0x013a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ATTACK_RANGE = 0x013a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ATTACK_RANGE = 0x013a
#else
ID_ZC_ATTACK_RANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ATTACK_RANGE
 *
 */ 
class ZC_ATTACK_RANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ATTACK_RANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ATTACK_RANGE, s)
	{}
	virtual ~ZC_ATTACK_RANGE() {}

	void deliver(int16_t range);
	ByteBuffer &serialize();

/* Structure */
	int16_t _range;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20051017
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x025e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20051017)
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x025e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x025e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20051017
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x025e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x025e
#else
ID_ZC_AUCTION_ACK_MY_SELL_STOP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUCTION_ACK_MY_SELL_STOP
 *
 */ 
class ZC_AUCTION_ACK_MY_SELL_STOP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUCTION_ACK_MY_SELL_STOP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUCTION_ACK_MY_SELL_STOP, s)
	{}
	virtual ~ZC_AUCTION_ACK_MY_SELL_STOP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0252
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050718)
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0252
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0252
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0252
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0252
#else
ID_ZC_AUCTION_ITEM_REQ_SEARCH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUCTION_ITEM_REQ_SEARCH
 *
 */ 
class ZC_AUCTION_ITEM_REQ_SEARCH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUCTION_ITEM_REQ_SEARCH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUCTION_ITEM_REQ_SEARCH, s)
	{}
	virtual ~ZC_AUCTION_ITEM_REQ_SEARCH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_AUCTION_RESULT = 0x0250
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050718)
ID_ZC_AUCTION_RESULT = 0x0250
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_RESULT = 0x0250
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_AUCTION_RESULT = 0x0250
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_RESULT = 0x0250
#else
ID_ZC_AUCTION_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUCTION_RESULT
 *
 */ 
class ZC_AUCTION_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUCTION_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUCTION_RESULT, s)
	{}
	virtual ~ZC_AUCTION_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20051024
ID_ZC_AUCTION_WINDOWS = 0x025f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20051024)
ID_ZC_AUCTION_WINDOWS = 0x025f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_WINDOWS = 0x025f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20051024
ID_ZC_AUCTION_WINDOWS = 0x025f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AUCTION_WINDOWS = 0x025f
#else
ID_ZC_AUCTION_WINDOWS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUCTION_WINDOWS
 *
 */ 
class ZC_AUCTION_WINDOWS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUCTION_WINDOWS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUCTION_WINDOWS, s)
	{}
	virtual ~ZC_AUCTION_WINDOWS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_AUTORUN_SKILL = 0x0147
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_AUTORUN_SKILL = 0x0147
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_AUTORUN_SKILL = 0x0147
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_AUTORUN_SKILL = 0x0147
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_AUTORUN_SKILL = 0x0147
#else
ID_ZC_AUTORUN_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUTORUN_SKILL
 *
 */ 
class ZC_AUTORUN_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUTORUN_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUTORUN_SKILL, s)
	{}
	virtual ~ZC_AUTORUN_SKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_AUTOSPELLLIST = 0x01cd
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_AUTOSPELLLIST = 0x01cd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180418)
ID_ZC_AUTOSPELLLIST = 0x0afb
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_AUTOSPELLLIST = 0x01cd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180418)
ID_ZC_AUTOSPELLLIST = 0x0afb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_AUTOSPELLLIST = 0x01cd
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_AUTOSPELLLIST = 0x01cd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180425)
ID_ZC_AUTOSPELLLIST = 0x0afb
#else
ID_ZC_AUTOSPELLLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_AUTOSPELLLIST
 *
 */ 
class ZC_AUTOSPELLLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_AUTOSPELLLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_AUTOSPELLLIST, s)
	{}
	virtual ~ZC_AUTOSPELLLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BABYMSG = 0x0216
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041108)
ID_ZC_BABYMSG = 0x0216
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BABYMSG = 0x0216
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BABYMSG = 0x0216
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BABYMSG = 0x0216
#else
ID_ZC_BABYMSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BABYMSG
 *
 */ 
class ZC_BABYMSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BABYMSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BABYMSG, s)
	{}
	virtual ~ZC_BABYMSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130306)
ID_ZC_BANKING_CHECK = 0x09a6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130306)
ID_ZC_BANKING_CHECK = 0x09a6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BANKING_CHECK = 0x09a6
#else
ID_ZC_BANKING_CHECK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BANKING_CHECK
 *
 */ 
class ZC_BANKING_CHECK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BANKING_CHECK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BANKING_CHECK, s)
	{}
	virtual ~ZC_BANKING_CHECK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_BAN_LIST = 0x0163
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_BAN_LIST = 0x0163
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_BAN_LIST = 0x0a87
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_BAN_LIST = 0x0b7c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_BAN_LIST = 0x0b7c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_BAN_LIST = 0x0a87
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_BAN_LIST = 0x0163
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_BAN_LIST = 0x0163
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_BAN_LIST = 0x0163
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_BAN_LIST = 0x0a87
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_BAN_LIST = 0x0b7c
#else
ID_ZC_BAN_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BAN_LIST
 *
 */ 
class ZC_BAN_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BAN_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BAN_LIST, s)
	{}
	virtual ~ZC_BAN_LIST() {}

	void deliver(std::vector<s_zc_ban_list> list);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zc_ban_list> _list;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_CHAT = 0x02dc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071002)
ID_ZC_BATTLEFIELD_CHAT = 0x02dc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_CHAT = 0x02dc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_CHAT = 0x02dc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_CHAT = 0x02dc
#else
ID_ZC_BATTLEFIELD_CHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_CHAT
 *
 */ 
class ZC_BATTLEFIELD_CHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_CHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_CHAT, s)
	{}
	virtual ~ZC_BATTLEFIELD_CHAT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x02dd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071002)
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x02dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x02dd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x02dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x02dd
#else
ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_NOTIFY_CAMPINFO
 *
 */ 
class ZC_BATTLEFIELD_NOTIFY_CAMPINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_NOTIFY_CAMPINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_NOTIFY_CAMPINFO, s)
	{}
	virtual ~ZC_BATTLEFIELD_NOTIFY_CAMPINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x02e0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071002)
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x02e0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210407 \
	|| PACKET_VERSION == 20210317)
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x0baa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x02e0
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x0baa
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x02e0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x02e0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210401 \
	|| PACKET_VERSION == 20210317)
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x0baa
#else
ID_ZC_BATTLEFIELD_NOTIFY_HP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_NOTIFY_HP
 *
 */ 
class ZC_BATTLEFIELD_NOTIFY_HP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_NOTIFY_HP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_NOTIFY_HP, s)
	{}
	virtual ~ZC_BATTLEFIELD_NOTIFY_HP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_BATTLEFIELD_NOTIFY_HP2 = 0x0a0e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_BATTLEFIELD_NOTIFY_HP2 = 0x0a0e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_HP2 = 0x0a0e
#else
ID_ZC_BATTLEFIELD_NOTIFY_HP2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_NOTIFY_HP2
 *
 */ 
class ZC_BATTLEFIELD_NOTIFY_HP2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_NOTIFY_HP2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_NOTIFY_HP2, s)
	{}
	virtual ~ZC_BATTLEFIELD_NOTIFY_HP2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x02de
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071002)
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x02de
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x02de
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x02de
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x02de
#else
ID_ZC_BATTLEFIELD_NOTIFY_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_NOTIFY_POINT
 *
 */ 
class ZC_BATTLEFIELD_NOTIFY_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_NOTIFY_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_NOTIFY_POINT, s)
	{}
	virtual ~ZC_BATTLEFIELD_NOTIFY_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x02df
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071002)
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x02df
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x02df
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071002
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x02df
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x02df
#else
ID_ZC_BATTLEFIELD_NOTIFY_POSITION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLEFIELD_NOTIFY_POSITION
 *
 */ 
class ZC_BATTLEFIELD_NOTIFY_POSITION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLEFIELD_NOTIFY_POSITION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLEFIELD_NOTIFY_POSITION, s)
	{}
	virtual ~ZC_BATTLEFIELD_NOTIFY_POSITION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_BATTLE_FIELD_LIST = 0x07eb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_BATTLE_FIELD_LIST = 0x07eb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLE_FIELD_LIST = 0x07eb
#else
ID_ZC_BATTLE_FIELD_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLE_FIELD_LIST
 *
 */ 
class ZC_BATTLE_FIELD_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLE_FIELD_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLE_FIELD_LIST, s)
	{}
	virtual ~ZC_BATTLE_FIELD_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_JOIN_DISABLE_STATE = 0x07f4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_JOIN_DISABLE_STATE = 0x07f4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLE_JOIN_DISABLE_STATE = 0x07f4
#else
ID_ZC_BATTLE_JOIN_DISABLE_STATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLE_JOIN_DISABLE_STATE
 *
 */ 
class ZC_BATTLE_JOIN_DISABLE_STATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLE_JOIN_DISABLE_STATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLE_JOIN_DISABLE_STATE, s)
	{}
	virtual ~ZC_BATTLE_JOIN_DISABLE_STATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_JOIN_NOTI_DEFER = 0x07f3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_JOIN_NOTI_DEFER = 0x07f3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLE_JOIN_NOTI_DEFER = 0x07f3
#else
ID_ZC_BATTLE_JOIN_NOTI_DEFER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLE_JOIN_NOTI_DEFER
 *
 */ 
class ZC_BATTLE_JOIN_NOTI_DEFER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLE_JOIN_NOTI_DEFER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLE_JOIN_NOTI_DEFER, s)
	{}
	virtual ~ZC_BATTLE_JOIN_NOTI_DEFER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_NOTI_START_STEP = 0x07f2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_BATTLE_NOTI_START_STEP = 0x07f2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BATTLE_NOTI_START_STEP = 0x07f2
#else
ID_ZC_BATTLE_NOTI_START_STEP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BATTLE_NOTI_START_STEP
 *
 */ 
class ZC_BATTLE_NOTI_START_STEP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BATTLE_NOTI_START_STEP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BATTLE_NOTI_START_STEP, s)
	{}
	virtual ~ZC_BATTLE_NOTI_START_STEP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BLACKSMITH_POINT = 0x021b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041108)
ID_ZC_BLACKSMITH_POINT = 0x021b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BLACKSMITH_POINT = 0x021b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BLACKSMITH_POINT = 0x021b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BLACKSMITH_POINT = 0x021b
#else
ID_ZC_BLACKSMITH_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BLACKSMITH_POINT
 *
 */ 
class ZC_BLACKSMITH_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BLACKSMITH_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BLACKSMITH_POINT, s)
	{}
	virtual ~ZC_BLACKSMITH_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BLACKSMITH_RANK = 0x0219
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041108)
ID_ZC_BLACKSMITH_RANK = 0x0219
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BLACKSMITH_RANK = 0x0219
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041108
ID_ZC_BLACKSMITH_RANK = 0x0219
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BLACKSMITH_RANK = 0x0219
#else
ID_ZC_BLACKSMITH_RANK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BLACKSMITH_RANK
 *
 */ 
class ZC_BLACKSMITH_RANK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BLACKSMITH_RANK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BLACKSMITH_RANK, s)
	{}
	virtual ~ZC_BLACKSMITH_RANK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_BLADESTOP = 0x01d1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_BLADESTOP = 0x01d1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BLADESTOP = 0x01d1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_BLADESTOP = 0x01d1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BLADESTOP = 0x01d1
#else
ID_ZC_BLADESTOP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BLADESTOP
 *
 */ 
class ZC_BLADESTOP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BLADESTOP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BLADESTOP, s)
	{}
	virtual ~ZC_BLADESTOP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_BOSS_INFO = 0x0293
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061204)
ID_ZC_BOSS_INFO = 0x0293
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BOSS_INFO = 0x0293
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_BOSS_INFO = 0x0293
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BOSS_INFO = 0x0293
#else
ID_ZC_BOSS_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BOSS_INFO
 *
 */ 
class ZC_BOSS_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BOSS_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BOSS_INFO, s)
	{}
	virtual ~ZC_BOSS_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_BROADCAST = 0x009a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST = 0x009a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST = 0x009a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_BROADCAST = 0x009a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST = 0x009a
#else
ID_ZC_BROADCAST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BROADCAST
 *
 */ 
class ZC_BROADCAST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BROADCAST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BROADCAST, s)
	{}
	virtual ~ZC_BROADCAST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_BROADCAST2 = 0x01c3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST2 = 0x01c3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST2 = 0x01c3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_BROADCAST2 = 0x01c3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST2 = 0x01c3
#else
ID_ZC_BROADCAST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BROADCAST2
 *
 */ 
class ZC_BROADCAST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BROADCAST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BROADCAST2, s)
	{}
	virtual ~ZC_BROADCAST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100323)
ID_ZC_BROADCAST4 = 0x081f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100323)
ID_ZC_BROADCAST4 = 0x081f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCAST4 = 0x081f
#else
ID_ZC_BROADCAST4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BROADCAST4
 *
 */ 
class ZC_BROADCAST4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BROADCAST4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BROADCAST4, s)
	{}
	virtual ~ZC_BROADCAST4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN = 0x07fd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN = 0x07fd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN = 0x07fd
#else
ID_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN
 *
 */ 
class ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN, s)
	{}
	virtual ~ZC_BROADCASTING_SPECIAL_ITEM_OBTAIN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_BUYING_STORE_ENTRY = 0x0814
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_BUYING_STORE_ENTRY = 0x0814
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_BUYING_STORE_ENTRY = 0x0814
#else
ID_ZC_BUYING_STORE_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_BUYING_STORE_ENTRY
 *
 */ 
class ZC_BUYING_STORE_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_BUYING_STORE_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_BUYING_STORE_ENTRY, s)
	{}
	virtual ~ZC_BUYING_STORE_ENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_CANCEL_BATTLE_FIELD = 0x07ef
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090929)
ID_ZC_CANCEL_BATTLE_FIELD = 0x07ef
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CANCEL_BATTLE_FIELD = 0x07ef
#else
ID_ZC_CANCEL_BATTLE_FIELD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CANCEL_BATTLE_FIELD
 *
 */ 
class ZC_CANCEL_BATTLE_FIELD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CANCEL_BATTLE_FIELD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CANCEL_BATTLE_FIELD, s)
	{}
	virtual ~ZC_CANCEL_BATTLE_FIELD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x00ee
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x00ee
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x00ee
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x00ee
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x00ee
#else
ID_ZC_CANCEL_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CANCEL_EXCHANGE_ITEM
 *
 */ 
class ZC_CANCEL_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CANCEL_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CANCEL_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_CANCEL_EXCHANGE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CARTOFF = 0x012b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CARTOFF = 0x012b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CARTOFF = 0x012b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CARTOFF = 0x012b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CARTOFF = 0x012b
#else
ID_ZC_CARTOFF = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CARTOFF
 *
 */ 
class ZC_CARTOFF : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CARTOFF(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CARTOFF, s)
	{}
	virtual ~ZC_CARTOFF() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0122
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0122
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0122
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0122
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0122
#else
ID_ZC_CART_EQUIPMENT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_EQUIPMENT_ITEMLIST
 *
 */ 
class ZC_CART_EQUIPMENT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_EQUIPMENT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_EQUIPMENT_ITEMLIST, s)
	{}
	virtual ~ZC_CART_EQUIPMENT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0297
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061218)
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0297
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0297
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0297
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0297
#else
ID_ZC_CART_EQUIPMENT_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_EQUIPMENT_ITEMLIST2
 *
 */ 
class ZC_CART_EQUIPMENT_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_EQUIPMENT_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_EQUIPMENT_ITEMLIST2, s)
	{}
	virtual ~ZC_CART_EQUIPMENT_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x02d2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070904)
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x02d2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x02d2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x02d2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x02d2
#else
ID_ZC_CART_EQUIPMENT_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_EQUIPMENT_ITEMLIST3
 *
 */ 
class ZC_CART_EQUIPMENT_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_EQUIPMENT_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_EQUIPMENT_ITEMLIST3, s)
	{}
	virtual ~ZC_CART_EQUIPMENT_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_CART_ITEMLIST_EQUIP = 0x0903
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_CART_ITEMLIST_EQUIP = 0x0903
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_ITEMLIST_EQUIP = 0x0903
#else
ID_ZC_CART_ITEMLIST_EQUIP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_ITEMLIST_EQUIP
 *
 */ 
class ZC_CART_ITEMLIST_EQUIP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_ITEMLIST_EQUIP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_ITEMLIST_EQUIP, s)
	{}
	virtual ~ZC_CART_ITEMLIST_EQUIP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_CART_ITEMLIST_EQUIP_V5 = 0x0994
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_CART_ITEMLIST_EQUIP_V5 = 0x0994
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_ITEMLIST_EQUIP_V5 = 0x0994
#else
ID_ZC_CART_ITEMLIST_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_ITEMLIST_EQUIP_V5
 *
 */ 
class ZC_CART_ITEMLIST_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_ITEMLIST_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_ITEMLIST_EQUIP_V5, s)
	{}
	virtual ~ZC_CART_ITEMLIST_EQUIP_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140402)
ID_ZC_CART_ITEMLIST_EQUIP_V6 = 0x0a0f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140402)
ID_ZC_CART_ITEMLIST_EQUIP_V6 = 0x0a0f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_ITEMLIST_EQUIP_V6 = 0x0a0f
#else
ID_ZC_CART_ITEMLIST_EQUIP_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_ITEMLIST_EQUIP_V6
 *
 */ 
class ZC_CART_ITEMLIST_EQUIP_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_ITEMLIST_EQUIP_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_ITEMLIST_EQUIP_V6, s)
	{}
	virtual ~ZC_CART_ITEMLIST_EQUIP_V6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_CART_ITEMLIST_NORMAL = 0x0902
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_CART_ITEMLIST_NORMAL = 0x0902
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_ITEMLIST_NORMAL = 0x0902
#else
ID_ZC_CART_ITEMLIST_NORMAL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_ITEMLIST_NORMAL
 *
 */ 
class ZC_CART_ITEMLIST_NORMAL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_ITEMLIST_NORMAL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_ITEMLIST_NORMAL, s)
	{}
	virtual ~ZC_CART_ITEMLIST_NORMAL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_CART_ITEMLIST_NORMAL_V5 = 0x0993
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_CART_ITEMLIST_NORMAL_V5 = 0x0993
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_ITEMLIST_NORMAL_V5 = 0x0993
#else
ID_ZC_CART_ITEMLIST_NORMAL_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_ITEMLIST_NORMAL_V5
 *
 */ 
class ZC_CART_ITEMLIST_NORMAL_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_ITEMLIST_NORMAL_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_ITEMLIST_NORMAL_V5, s)
	{}
	virtual ~ZC_CART_ITEMLIST_NORMAL_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CART_NORMAL_ITEMLIST = 0x0123
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST = 0x0123
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST = 0x0123
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CART_NORMAL_ITEMLIST = 0x0123
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST = 0x0123
#else
ID_ZC_CART_NORMAL_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_NORMAL_ITEMLIST
 *
 */ 
class ZC_CART_NORMAL_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_NORMAL_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_NORMAL_ITEMLIST, s)
	{}
	virtual ~ZC_CART_NORMAL_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x01ef
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031218)
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x01ef
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x01ef
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031218
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x01ef
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x01ef
#else
ID_ZC_CART_NORMAL_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_NORMAL_ITEMLIST2
 *
 */ 
class ZC_CART_NORMAL_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_NORMAL_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_NORMAL_ITEMLIST2, s)
	{}
	virtual ~ZC_CART_NORMAL_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x02e9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x02e9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x02e9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x02e9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x02e9
#else
ID_ZC_CART_NORMAL_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CART_NORMAL_ITEMLIST3
 *
 */ 
class ZC_CART_NORMAL_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CART_NORMAL_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CART_NORMAL_ITEMLIST3, s)
	{}
	virtual ~ZC_CART_NORMAL_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061211
ID_ZC_CASH_ITEM_DELETE = 0x0299
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061211)
ID_ZC_CASH_ITEM_DELETE = 0x0299
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CASH_ITEM_DELETE = 0x0299
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061211
ID_ZC_CASH_ITEM_DELETE = 0x0299
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CASH_ITEM_DELETE = 0x0299
#else
ID_ZC_CASH_ITEM_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CASH_ITEM_DELETE
 *
 */ 
class ZC_CASH_ITEM_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CASH_ITEM_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CASH_ITEM_DELETE, s)
	{}
	virtual ~ZC_CASH_ITEM_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061211
ID_ZC_CASH_TIME_COUNTER = 0x0298
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061211)
ID_ZC_CASH_TIME_COUNTER = 0x0298
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CASH_TIME_COUNTER = 0x0298
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061211
ID_ZC_CASH_TIME_COUNTER = 0x0298
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CASH_TIME_COUNTER = 0x0298
#else
ID_ZC_CASH_TIME_COUNTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CASH_TIME_COUNTER
 *
 */ 
class ZC_CASH_TIME_COUNTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CASH_TIME_COUNTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CASH_TIME_COUNTER, s)
	{}
	virtual ~ZC_CASH_TIME_COUNTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050523
ID_ZC_CHANGESTATE_MER = 0x0230
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050523)
ID_ZC_CHANGESTATE_MER = 0x0230
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGESTATE_MER = 0x0230
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050523
ID_ZC_CHANGESTATE_MER = 0x0230
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGESTATE_MER = 0x0230
#else
ID_ZC_CHANGESTATE_MER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGESTATE_MER
 *
 */ 
class ZC_CHANGESTATE_MER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGESTATE_MER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGESTATE_MER, s)
	{}
	virtual ~ZC_CHANGESTATE_MER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CHANGESTATE_PET = 0x01a4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGESTATE_PET = 0x01a4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGESTATE_PET = 0x01a4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CHANGESTATE_PET = 0x01a4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGESTATE_PET = 0x01a4
#else
ID_ZC_CHANGESTATE_PET = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGESTATE_PET
 *
 */ 
class ZC_CHANGESTATE_PET : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGESTATE_PET(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGESTATE_PET, s)
	{}
	virtual ~ZC_CHANGESTATE_PET() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CHANGE_CHATROOM = 0x00df
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_CHATROOM = 0x00df
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_CHATROOM = 0x00df
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CHANGE_CHATROOM = 0x00df
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_CHATROOM = 0x00df
#else
ID_ZC_CHANGE_CHATROOM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGE_CHATROOM
 *
 */ 
class ZC_CHANGE_CHATROOM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGE_CHATROOM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGE_CHATROOM, s)
	{}
	virtual ~ZC_CHANGE_CHATROOM() {}

	void deliver(int owner_id, int chat_id, int limit, int users, zc_change_chatroom_type type, std::string title);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int _owner_id; 
	int _chat_id; 
	int16_t _limit;
	int16_t _users;
	int8_t _type;
	char _title[CHATROOM_TITLE_SIZE];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CHANGE_DIRECTION = 0x009c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_DIRECTION = 0x009c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_DIRECTION = 0x009c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CHANGE_DIRECTION = 0x009c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_DIRECTION = 0x009c
#else
ID_ZC_CHANGE_DIRECTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGE_DIRECTION
 *
 */ 
class ZC_CHANGE_DIRECTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGE_DIRECTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGE_DIRECTION, s)
	{}
	virtual ~ZC_CHANGE_DIRECTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_CHANGE_GROUP_MASTER = 0x07fc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_CHANGE_GROUP_MASTER = 0x07fc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHANGE_GROUP_MASTER = 0x07fc
#else
ID_ZC_CHANGE_GROUP_MASTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGE_GROUP_MASTER
 *
 */ 
class ZC_CHANGE_GROUP_MASTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGE_GROUP_MASTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGE_GROUP_MASTER, s)
	{}
	virtual ~ZC_CHANGE_GROUP_MASTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CHANGE_GUILD = 0x01b4
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CHANGE_GUILD = 0x01b4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_GUILD = 0x0b47
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_CHANGE_GUILD = 0x01b4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_GUILD = 0x0b47
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CHANGE_GUILD = 0x01b4
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_CHANGE_GUILD = 0x01b4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_GUILD = 0x0b47
#else
ID_ZC_CHANGE_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGE_GUILD
 *
 */ 
class ZC_CHANGE_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGE_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGE_GUILD, s)
	{}
	virtual ~ZC_CHANGE_GUILD() {}

	void deliver(int account_id, int guild_id, int16_t emblem_id);
	ByteBuffer &serialize();

/* Structure */
	int _account_id{ 0 };
	int _guild_id{ 0 };
	int16_t _emblem_id{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_ITEM_OPTION = 0x0b43
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_ITEM_OPTION = 0x0b43
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CHANGE_ITEM_OPTION = 0x0b43
#else
ID_ZC_CHANGE_ITEM_OPTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHANGE_ITEM_OPTION
 *
 */ 
class ZC_CHANGE_ITEM_OPTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHANGE_ITEM_OPTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHANGE_ITEM_OPTION, s)
	{}
	virtual ~ZC_CHANGE_ITEM_OPTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20140521
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a14
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160302)
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a51
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20140521
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a14
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160302)
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a51
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a51
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0a14
#else
ID_ZC_CHECK_RECEIVE_CHARACTER_NAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CHECK_RECEIVE_CHARACTER_NAME
 *
 */ 
class ZC_CHECK_RECEIVE_CHARACTER_NAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CHECK_RECEIVE_CHARACTER_NAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CHECK_RECEIVE_CHARACTER_NAME, s)
	{}
	virtual ~ZC_CHECK_RECEIVE_CHARACTER_NAME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120702)
ID_ZC_CLANINFO = 0x098a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120702)
ID_ZC_CLANINFO = 0x098a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CLANINFO = 0x098a
#else
ID_ZC_CLANINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLANINFO
 *
 */ 
class ZC_CLANINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLANINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLANINFO, s)
	{}
	virtual ~ZC_CLANINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110928)
ID_ZC_CLEAR_DIALOG = 0x08d6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110928)
ID_ZC_CLEAR_DIALOG = 0x08d6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CLEAR_DIALOG = 0x08d6
#else
ID_ZC_CLEAR_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLEAR_DIALOG
 *
 */ 
class ZC_CLEAR_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLEAR_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLEAR_DIALOG, s)
	{}
	virtual ~ZC_CLEAR_DIALOG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130424)
ID_ZC_CLOSE_BARGAIN_SALE_TOOL = 0x09bd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130424)
ID_ZC_CLOSE_BARGAIN_SALE_TOOL = 0x09bd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_BARGAIN_SALE_TOOL = 0x09bd
#else
ID_ZC_CLOSE_BARGAIN_SALE_TOOL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLOSE_BARGAIN_SALE_TOOL
 *
 */ 
class ZC_CLOSE_BARGAIN_SALE_TOOL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLOSE_BARGAIN_SALE_TOOL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLOSE_BARGAIN_SALE_TOOL, s)
	{}
	virtual ~ZC_CLOSE_BARGAIN_SALE_TOOL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CLOSE_DIALOG = 0x00b6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_DIALOG = 0x00b6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_DIALOG = 0x00b6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CLOSE_DIALOG = 0x00b6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_DIALOG = 0x00b6
#else
ID_ZC_CLOSE_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLOSE_DIALOG
 *
 */ 
class ZC_CLOSE_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLOSE_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLOSE_DIALOG, s)
	{}
	virtual ~ZC_CLOSE_DIALOG() {}

	void deliver(int32_t guid);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CLOSE_MACRO_DETECTOR = 0x0a5d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CLOSE_MACRO_DETECTOR = 0x0a5d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_CLOSE_MACRO_DETECTOR = 0x0a5d
#else
ID_ZC_CLOSE_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLOSE_MACRO_DETECTOR
 *
 */ 
class ZC_CLOSE_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLOSE_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLOSE_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_CLOSE_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CLOSE_STORE = 0x00f8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_STORE = 0x00f8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_STORE = 0x00f8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CLOSE_STORE = 0x00f8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CLOSE_STORE = 0x00f8
#else
ID_ZC_CLOSE_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CLOSE_STORE
 *
 */ 
class ZC_CLOSE_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CLOSE_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CLOSE_STORE, s)
	{}
	virtual ~ZC_CLOSE_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_COMBODELAY = 0x01d2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_COMBODELAY = 0x01d2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_COMBODELAY = 0x01d2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_COMBODELAY = 0x01d2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_COMBODELAY = 0x01d2
#else
ID_ZC_COMBODELAY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COMBODELAY
 *
 */ 
class ZC_COMBODELAY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COMBODELAY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COMBODELAY, s)
	{}
	virtual ~ZC_COMBODELAY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_COMPASS = 0x0144
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_COMPASS = 0x0144
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_COMPASS = 0x0144
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_COMPASS = 0x0144
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_COMPASS = 0x0144
#else
ID_ZC_COMPASS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COMPASS
 *
 */ 
class ZC_COMPASS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COMPASS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COMPASS, s)
	{}
	virtual ~ZC_COMPASS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA = 0x0a55
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA = 0x0a55
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA = 0x0a55
#else
ID_ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA
 *
 */ 
class ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA, s)
	{}
	virtual ~ZC_COMPLETE_UPLOAD_MACRO_DETECTOR_CAPTCHA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x00ec
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x00ec
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x00ec
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x00ec
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x00ec
#else
ID_ZC_CONCLUDE_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CONCLUDE_EXCHANGE_ITEM
 *
 */ 
class ZC_CONCLUDE_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CONCLUDE_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CONCLUDE_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_CONCLUDE_EXCHANGE_ITEM() {}

	void deliver(zc_conclude_exchange_item_type type);
	ByteBuffer &serialize();

/* Structure */
	int8_t _type{ 0 }; // 0 - self, 1 - other player.
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_CONFIG = 0x02d9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070918)
ID_ZC_CONFIG = 0x02d9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CONFIG = 0x02d9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_CONFIG = 0x02d9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CONFIG = 0x02d9
#else
ID_ZC_CONFIG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CONFIG
 *
 */ 
class ZC_CONFIG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CONFIG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CONFIG, s)
	{}
	virtual ~ZC_CONFIG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_CONFIG_NOTIFY = 0x02da
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070918)
ID_ZC_CONFIG_NOTIFY = 0x02da
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CONFIG_NOTIFY = 0x02da
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_CONFIG_NOTIFY = 0x02da
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CONFIG_NOTIFY = 0x02da
#else
ID_ZC_CONFIG_NOTIFY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CONFIG_NOTIFY
 *
 */ 
class ZC_CONFIG_NOTIFY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CONFIG_NOTIFY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CONFIG_NOTIFY, s)
	{}
	virtual ~ZC_CONFIG_NOTIFY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_CONGRATULATION = 0x01ea
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031117)
ID_ZC_CONGRATULATION = 0x01ea
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_CONGRATULATION = 0x01ea
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031117
ID_ZC_CONGRATULATION = 0x01ea
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CONGRATULATION = 0x01ea
#else
ID_ZC_CONGRATULATION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CONGRATULATION
 *
 */ 
class ZC_CONGRATULATION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CONGRATULATION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CONGRATULATION, s)
	{}
	virtual ~ZC_CONGRATULATION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100413)
ID_ZC_COSTUME_SPRITE_CHANGE = 0x0820
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100413)
ID_ZC_COSTUME_SPRITE_CHANGE = 0x0820
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_COSTUME_SPRITE_CHANGE = 0x0820
#else
ID_ZC_COSTUME_SPRITE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COSTUME_SPRITE_CHANGE
 *
 */ 
class ZC_COSTUME_SPRITE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COSTUME_SPRITE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COSTUME_SPRITE_CHANGE, s)
	{}
	virtual ~ZC_COSTUME_SPRITE_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_COUPLENAME = 0x01e6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031110)
ID_ZC_COUPLENAME = 0x01e6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_COUPLENAME = 0x01e6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031110
ID_ZC_COUPLENAME = 0x01e6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_COUPLENAME = 0x01e6
#else
ID_ZC_COUPLENAME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COUPLENAME
 *
 */ 
class ZC_COUPLENAME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COUPLENAME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COUPLENAME, s)
	{}
	virtual ~ZC_COUPLENAME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_COUPLESTATUS = 0x0141
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_COUPLESTATUS = 0x0141
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_COUPLESTATUS = 0x0141
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_COUPLESTATUS = 0x0141
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_COUPLESTATUS = 0x0141
#else
ID_ZC_COUPLESTATUS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_COUPLESTATUS
 *
 */ 
class ZC_COUPLESTATUS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_COUPLESTATUS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_COUPLESTATUS, s)
	{}
	virtual ~ZC_COUPLESTATUS() {}

	void deliver(status_point_type type, int value, int value2);
	ByteBuffer &serialize();

/* Structure */
	int32_t _status_point_type{ 0 };
	int32_t _value{ 0 };
	int32_t _value2{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20150422)
ID_ZC_CUSTOM_HAT_EFFECT = 0x0a3b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20150422)
ID_ZC_CUSTOM_HAT_EFFECT = 0x0a3b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_CUSTOM_HAT_EFFECT = 0x0a3b
#else
ID_ZC_CUSTOM_HAT_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_CUSTOM_HAT_EFFECT
 *
 */ 
class ZC_CUSTOM_HAT_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_CUSTOM_HAT_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_CUSTOM_HAT_EFFECT, s)
	{}
	virtual ~ZC_CUSTOM_HAT_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_C_MARKERINFO = 0x09c1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_C_MARKERINFO = 0x09c1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_C_MARKERINFO = 0x09c1
#else
ID_ZC_C_MARKERINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_C_MARKERINFO
 *
 */ 
class ZC_C_MARKERINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_C_MARKERINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_C_MARKERINFO, s)
	{}
	virtual ~ZC_C_MARKERINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_DEATH_QUESTION = 0x0285
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060918)
ID_ZC_DEATH_QUESTION = 0x0285
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DEATH_QUESTION = 0x0285
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_DEATH_QUESTION = 0x0285
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DEATH_QUESTION = 0x0285
#else
ID_ZC_DEATH_QUESTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DEATH_QUESTION
 *
 */ 
class ZC_DEATH_QUESTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DEATH_QUESTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DEATH_QUESTION, s)
	{}
	virtual ~ZC_DEATH_QUESTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_DEBUGMSG = 0x0adb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_DEBUGMSG = 0x0adb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_DEBUGMSG = 0x0adb
#else
ID_ZC_DEBUGMSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DEBUGMSG
 *
 */ 
class ZC_DEBUGMSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DEBUGMSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DEBUGMSG, s)
	{}
	virtual ~ZC_DEBUGMSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20091201
ID_ZC_DEFINE_CHECK = 0x07ff
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20091201
ID_ZC_DEFINE_CHECK = 0x07ff
#else
ID_ZC_DEFINE_CHECK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DEFINE_CHECK
 *
 */ 
class ZC_DEFINE_CHECK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DEFINE_CHECK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DEFINE_CHECK, s)
	{}
	virtual ~ZC_DEFINE_CHECK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0137
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0137
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0137
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0137
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0137
#else
ID_ZC_DELETEITEM_FROM_MCSTORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETEITEM_FROM_MCSTORE
 *
 */ 
class ZC_DELETEITEM_FROM_MCSTORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETEITEM_FROM_MCSTORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETEITEM_FROM_MCSTORE, s)
	{}
	virtual ~ZC_DELETEITEM_FROM_MCSTORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131127)
ID_ZC_DELETEITEM_FROM_MCSTORE2 = 0x09e5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131127)
ID_ZC_DELETEITEM_FROM_MCSTORE2 = 0x09e5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETEITEM_FROM_MCSTORE2 = 0x09e5
#else
ID_ZC_DELETEITEM_FROM_MCSTORE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETEITEM_FROM_MCSTORE2
 *
 */ 
class ZC_DELETEITEM_FROM_MCSTORE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETEITEM_FROM_MCSTORE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETEITEM_FROM_MCSTORE2, s)
	{}
	virtual ~ZC_DELETEITEM_FROM_MCSTORE2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETE_FRIENDS = 0x020a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_DELETE_FRIENDS = 0x020a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_FRIENDS = 0x020a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_DELETE_FRIENDS = 0x020a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_FRIENDS = 0x020a
#else
ID_ZC_DELETE_FRIENDS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_FRIENDS
 *
 */ 
class ZC_DELETE_FRIENDS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_FRIENDS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_FRIENDS, s)
	{}
	virtual ~ZC_DELETE_FRIENDS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091117)
ID_ZC_DELETE_ITEM_FROM_BODY = 0x07fa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091117)
ID_ZC_DELETE_ITEM_FROM_BODY = 0x07fa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_BODY = 0x07fa
#else
ID_ZC_DELETE_ITEM_FROM_BODY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_ITEM_FROM_BODY
 *
 */ 
class ZC_DELETE_ITEM_FROM_BODY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_ITEM_FROM_BODY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_ITEM_FROM_BODY, s)
	{}
	virtual ~ZC_DELETE_ITEM_FROM_BODY() {}

	void deliver(int16_t index, int16_t amount, item_deletion_reason_type reason);
	ByteBuffer &serialize();

/* Structure */
	item_deletion_reason_type _reason;
	int16_t _index;
	int16_t _amount;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETE_ITEM_FROM_CART = 0x0125
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_CART = 0x0125
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_CART = 0x0125
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DELETE_ITEM_FROM_CART = 0x0125
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_CART = 0x0125
#else
ID_ZC_DELETE_ITEM_FROM_CART = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_ITEM_FROM_CART
 *
 */ 
class ZC_DELETE_ITEM_FROM_CART : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_ITEM_FROM_CART(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_ITEM_FROM_CART, s)
	{}
	virtual ~ZC_DELETE_ITEM_FROM_CART() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETE_ITEM_FROM_STORE = 0x00f6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_STORE = 0x00f6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_STORE = 0x00f6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DELETE_ITEM_FROM_STORE = 0x00f6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_ITEM_FROM_STORE = 0x00f6
#else
ID_ZC_DELETE_ITEM_FROM_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_ITEM_FROM_STORE
 *
 */ 
class ZC_DELETE_ITEM_FROM_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_ITEM_FROM_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_ITEM_FROM_STORE, s)
	{}
	virtual ~ZC_DELETE_ITEM_FROM_STORE() {}

	void deliver(int16_t storage_index, int amount);
	ByteBuffer &serialize();

/* Structure */
	int16_t _storage_index{ 0 };
	int _amount{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0105
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0105
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0105
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0105
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0105
#else
ID_ZC_DELETE_MEMBER_FROM_GROUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_MEMBER_FROM_GROUP
 *
 */ 
class ZC_DELETE_MEMBER_FROM_GROUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_MEMBER_FROM_GROUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_MEMBER_FROM_GROUP, s)
	{}
	virtual ~ZC_DELETE_MEMBER_FROM_GROUP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DELETE_RELATED_GUILD = 0x0184
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_RELATED_GUILD = 0x0184
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_RELATED_GUILD = 0x0184
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DELETE_RELATED_GUILD = 0x0184
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DELETE_RELATED_GUILD = 0x0184
#else
ID_ZC_DELETE_RELATED_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DELETE_RELATED_GUILD
 *
 */ 
class ZC_DELETE_RELATED_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DELETE_RELATED_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DELETE_RELATED_GUILD, s)
	{}
	virtual ~ZC_DELETE_RELATED_GUILD() {}

	void deliver(int guild_id, int relation);
	ByteBuffer &serialize();

/* Structure */
	int _guild_id{ 0 };
	int _relation{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_DEL_QUEST = 0x02b4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070622)
ID_ZC_DEL_QUEST = 0x02b4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DEL_QUEST = 0x02b4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_DEL_QUEST = 0x02b4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DEL_QUEST = 0x02b4
#else
ID_ZC_DEL_QUEST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DEL_QUEST
 *
 */ 
class ZC_DEL_QUEST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DEL_QUEST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DEL_QUEST, s)
	{}
	virtual ~ZC_DEL_QUEST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DESTROY_ROOM = 0x00d8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DESTROY_ROOM = 0x00d8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DESTROY_ROOM = 0x00d8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DESTROY_ROOM = 0x00d8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DESTROY_ROOM = 0x00d8
#else
ID_ZC_DESTROY_ROOM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DESTROY_ROOM
 *
 */ 
class ZC_DESTROY_ROOM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DESTROY_ROOM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DESTROY_ROOM, s)
	{}
	virtual ~ZC_DESTROY_ROOM() {}

	void deliver(int chat_id);
	ByteBuffer &serialize();

/* Structure */
	int _chat_id{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DEVOTIONLIST = 0x01cf
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DEVOTIONLIST = 0x01cf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DEVOTIONLIST = 0x01cf
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DEVOTIONLIST = 0x01cf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DEVOTIONLIST = 0x01cf
#else
ID_ZC_DEVOTIONLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DEVOTIONLIST
 *
 */ 
class ZC_DEVOTIONLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DEVOTIONLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DEVOTIONLIST, s)
	{}
	virtual ~ZC_DEVOTIONLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201223)
ID_ZC_DIALOG_TEXT_ALIGN = 0x0ba1
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_DIALOG_TEXT_ALIGN = 0x0ba1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_ZC_DIALOG_TEXT_ALIGN = 0x0ba1
#else
ID_ZC_DIALOG_TEXT_ALIGN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DIALOG_TEXT_ALIGN
 *
 */ 
class ZC_DIALOG_TEXT_ALIGN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DIALOG_TEXT_ALIGN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DIALOG_TEXT_ALIGN, s)
	{}
	virtual ~ZC_DIALOG_TEXT_ALIGN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_DISAPPEAR_BUYING_STORE_ENTRY = 0x0816
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_DISAPPEAR_BUYING_STORE_ENTRY = 0x0816
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DISAPPEAR_BUYING_STORE_ENTRY = 0x0816
#else
ID_ZC_DISAPPEAR_BUYING_STORE_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DISAPPEAR_BUYING_STORE_ENTRY
 *
 */ 
class ZC_DISAPPEAR_BUYING_STORE_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DISAPPEAR_BUYING_STORE_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DISAPPEAR_BUYING_STORE_ENTRY, s)
	{}
	virtual ~ZC_DISAPPEAR_BUYING_STORE_ENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DISAPPEAR_ENTRY = 0x0132
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DISAPPEAR_ENTRY = 0x0132
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DISAPPEAR_ENTRY = 0x0132
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DISAPPEAR_ENTRY = 0x0132
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DISAPPEAR_ENTRY = 0x0132
#else
ID_ZC_DISAPPEAR_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DISAPPEAR_ENTRY
 *
 */ 
class ZC_DISAPPEAR_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DISAPPEAR_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DISAPPEAR_ENTRY, s)
	{}
	virtual ~ZC_DISAPPEAR_ENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130206)
ID_ZC_DISPATCH_TIMING_INFO_CHN = 0x09a4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130206)
ID_ZC_DISPATCH_TIMING_INFO_CHN = 0x09a4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DISPATCH_TIMING_INFO_CHN = 0x09a4
#else
ID_ZC_DISPATCH_TIMING_INFO_CHN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DISPATCH_TIMING_INFO_CHN
 *
 */ 
class ZC_DISPATCH_TIMING_INFO_CHN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DISPATCH_TIMING_INFO_CHN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DISPATCH_TIMING_INFO_CHN, s)
	{}
	virtual ~ZC_DISPATCH_TIMING_INFO_CHN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DISPEL = 0x01b9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_DISPEL = 0x01b9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DISPEL = 0x01b9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_DISPEL = 0x01b9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DISPEL = 0x01b9
#else
ID_ZC_DISPEL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DISPEL
 *
 */ 
class ZC_DISPEL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DISPEL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DISPEL, s)
	{}
	virtual ~ZC_DISPEL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_DIVORCE = 0x0205
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040628)
ID_ZC_DIVORCE = 0x0205
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_DIVORCE = 0x0205
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_DIVORCE = 0x0205
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DIVORCE = 0x0205
#else
ID_ZC_DIVORCE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DIVORCE
 *
 */ 
class ZC_DIVORCE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DIVORCE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DIVORCE, s)
	{}
	virtual ~ZC_DIVORCE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140212)
ID_ZC_DRESSROOM_OPEN = 0x0a02
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140212)
ID_ZC_DRESSROOM_OPEN = 0x0a02
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DRESSROOM_OPEN = 0x0a02
#else
ID_ZC_DRESSROOM_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DRESSROOM_OPEN
 *
 */ 
class ZC_DRESSROOM_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DRESSROOM_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DRESSROOM_OPEN, s)
	{}
	virtual ~ZC_DRESSROOM_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140430)
ID_ZC_DYNAMICNPC_CREATE_RESULT = 0x0a17
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140430)
ID_ZC_DYNAMICNPC_CREATE_RESULT = 0x0a17
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_DYNAMICNPC_CREATE_RESULT = 0x0a17
#else
ID_ZC_DYNAMICNPC_CREATE_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_DYNAMICNPC_CREATE_RESULT
 *
 */ 
class ZC_DYNAMICNPC_CREATE_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_DYNAMICNPC_CREATE_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_DYNAMICNPC_CREATE_RESULT, s)
	{}
	virtual ~ZC_DYNAMICNPC_CREATE_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111101)
ID_ZC_EFST_SET_ENTER = 0x08ff
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111101)
ID_ZC_EFST_SET_ENTER = 0x08ff
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EFST_SET_ENTER = 0x08ff
#else
ID_ZC_EFST_SET_ENTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EFST_SET_ENTER
 *
 */ 
class ZC_EFST_SET_ENTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EFST_SET_ENTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EFST_SET_ENTER, s)
	{}
	virtual ~ZC_EFST_SET_ENTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120529)
ID_ZC_EFST_SET_ENTER2 = 0x0984
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120529)
ID_ZC_EFST_SET_ENTER2 = 0x0984
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EFST_SET_ENTER2 = 0x0984
#else
ID_ZC_EFST_SET_ENTER2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EFST_SET_ENTER2
 *
 */ 
class ZC_EFST_SET_ENTER2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EFST_SET_ENTER2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EFST_SET_ENTER2, s)
	{}
	virtual ~ZC_EFST_SET_ENTER2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_EL_INIT = 0x081d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_EL_INIT = 0x081d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EL_INIT = 0x081d
#else
ID_ZC_EL_INIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EL_INIT
 *
 */ 
class ZC_EL_INIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EL_INIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EL_INIT, s)
	{}
	virtual ~ZC_EL_INIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_EL_PAR_CHANGE = 0x081e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_EL_PAR_CHANGE = 0x081e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EL_PAR_CHANGE = 0x081e
#else
ID_ZC_EL_PAR_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EL_PAR_CHANGE
 *
 */ 
class ZC_EL_PAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EL_PAR_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EL_PAR_CHANGE, s)
	{}
	virtual ~ZC_EL_PAR_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_EMOTION = 0x00c0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_EMOTION = 0x00c0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EMOTION = 0x00c0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_EMOTION = 0x00c0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EMOTION = 0x00c0
#else
ID_ZC_EMOTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EMOTION
 *
 */ 
class ZC_EMOTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EMOTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EMOTION, s)
	{}
	virtual ~ZC_EMOTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ENTER_ROOM = 0x00db
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ENTER_ROOM = 0x00db
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ENTER_ROOM = 0x00db
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ENTER_ROOM = 0x00db
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ENTER_ROOM = 0x00db
#else
ID_ZC_ENTER_ROOM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ENTER_ROOM
 *
 */ 
class ZC_ENTER_ROOM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ENTER_ROOM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ENTER_ROOM, s)
	{}
	virtual ~ZC_ENTER_ROOM() {}

	void deliver(int chat_id, std::vector<chatroom_user> users);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int _chat_id{ 0 };
	std::vector<chatroom_user> _users;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111227)
ID_ZC_ENTRY_QUEUE_INIT = 0x090e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111227)
ID_ZC_ENTRY_QUEUE_INIT = 0x090e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ENTRY_QUEUE_INIT = 0x090e
#else
ID_ZC_ENTRY_QUEUE_INIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ENTRY_QUEUE_INIT
 *
 */ 
class ZC_ENTRY_QUEUE_INIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ENTRY_QUEUE_INIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ENTRY_QUEUE_INIT, s)
	{}
	virtual ~ZC_ENTRY_QUEUE_INIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_EQUIPITEM_DAMAGED = 0x02bb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070622)
ID_ZC_EQUIPITEM_DAMAGED = 0x02bb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPITEM_DAMAGED = 0x02bb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_EQUIPITEM_DAMAGED = 0x02bb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPITEM_DAMAGED = 0x02bb
#else
ID_ZC_EQUIPITEM_DAMAGED = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPITEM_DAMAGED
 *
 */ 
class ZC_EQUIPITEM_DAMAGED : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPITEM_DAMAGED(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPITEM_DAMAGED, s)
	{}
	virtual ~ZC_EQUIPITEM_DAMAGED() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_EQUIPMENT_ITEMLIST = 0x00a4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST = 0x00a4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST = 0x00a4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_EQUIPMENT_ITEMLIST = 0x00a4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST = 0x00a4
#else
ID_ZC_EQUIPMENT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPMENT_ITEMLIST
 *
 */ 
class ZC_EQUIPMENT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPMENT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPMENT_ITEMLIST, s)
	{}
	virtual ~ZC_EQUIPMENT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0295
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061218)
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0295
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0295
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0295
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0295
#else
ID_ZC_EQUIPMENT_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPMENT_ITEMLIST2
 *
 */ 
class ZC_EQUIPMENT_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPMENT_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPMENT_ITEMLIST2, s)
	{}
	virtual ~ZC_EQUIPMENT_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x02d0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070904)
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x02d0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x02d0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x02d0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x02d0
#else
ID_ZC_EQUIPMENT_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPMENT_ITEMLIST3
 *
 */ 
class ZC_EQUIPMENT_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPMENT_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPMENT_ITEMLIST3, s)
	{}
	virtual ~ZC_EQUIPMENT_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_EQUIPWIN_MICROSCOPE = 0x02d7
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_EQUIPWIN_MICROSCOPE = 0x02d7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_EQUIPWIN_MICROSCOPE = 0x0b37
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_EQUIPWIN_MICROSCOPE = 0x02d7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_EQUIPWIN_MICROSCOPE = 0x0b37
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070918
ID_ZC_EQUIPWIN_MICROSCOPE = 0x02d7
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_EQUIPWIN_MICROSCOPE = 0x02d7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_EQUIPWIN_MICROSCOPE = 0x0b37
#else
ID_ZC_EQUIPWIN_MICROSCOPE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_MICROSCOPE
 *
 */ 
class ZC_EQUIPWIN_MICROSCOPE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_MICROSCOPE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_MICROSCOPE, s)
	{}
	virtual ~ZC_EQUIPWIN_MICROSCOPE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_EQUIPWIN_MICROSCOPE2 = 0x0859
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_EQUIPWIN_MICROSCOPE2 = 0x0859
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPWIN_MICROSCOPE2 = 0x0859
#else
ID_ZC_EQUIPWIN_MICROSCOPE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_MICROSCOPE2
 *
 */ 
class ZC_EQUIPWIN_MICROSCOPE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_MICROSCOPE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_MICROSCOPE2, s)
	{}
	virtual ~ZC_EQUIPWIN_MICROSCOPE2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_EQUIPWIN_MICROSCOPE_V5 = 0x0997
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_EQUIPWIN_MICROSCOPE_V5 = 0x0997
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPWIN_MICROSCOPE_V5 = 0x0997
#else
ID_ZC_EQUIPWIN_MICROSCOPE_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_MICROSCOPE_V5
 *
 */ 
class ZC_EQUIPWIN_MICROSCOPE_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_MICROSCOPE_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_MICROSCOPE_V5, s)
	{}
	virtual ~ZC_EQUIPWIN_MICROSCOPE_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140820)
ID_ZC_EQUIPWIN_MICROSCOPE_V6 = 0x0a2d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140820)
ID_ZC_EQUIPWIN_MICROSCOPE_V6 = 0x0a2d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPWIN_MICROSCOPE_V6 = 0x0a2d
#else
ID_ZC_EQUIPWIN_MICROSCOPE_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_MICROSCOPE_V6
 *
 */ 
class ZC_EQUIPWIN_MICROSCOPE_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_MICROSCOPE_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_MICROSCOPE_V6, s)
	{}
	virtual ~ZC_EQUIPWIN_MICROSCOPE_V6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180801)
ID_ZC_EQUIPWIN_MICROSCOPE_V7 = 0x0b03
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180801)
ID_ZC_EQUIPWIN_MICROSCOPE_V7 = 0x0b03
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180725)
ID_ZC_EQUIPWIN_MICROSCOPE_V7 = 0x0b03
#else
ID_ZC_EQUIPWIN_MICROSCOPE_V7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_MICROSCOPE_V7
 *
 */ 
class ZC_EQUIPWIN_MICROSCOPE_V7 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_MICROSCOPE_V7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_MICROSCOPE_V7, s)
	{}
	virtual ~ZC_EQUIPWIN_MICROSCOPE_V7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170906)
ID_ZC_EQUIPWIN_OTHER = 0x0adc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170906)
ID_ZC_EQUIPWIN_OTHER = 0x0adc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIPWIN_OTHER = 0x0adc
#else
ID_ZC_EQUIPWIN_OTHER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIPWIN_OTHER
 *
 */ 
class ZC_EQUIPWIN_OTHER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIPWIN_OTHER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIPWIN_OTHER, s)
	{}
	virtual ~ZC_EQUIPWIN_OTHER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_EQUIP_ARROW = 0x013c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIP_ARROW = 0x013c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIP_ARROW = 0x013c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_EQUIP_ARROW = 0x013c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EQUIP_ARROW = 0x013c
#else
ID_ZC_EQUIP_ARROW = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EQUIP_ARROW
 *
 */ 
class ZC_EQUIP_ARROW : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EQUIP_ARROW(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EQUIP_ARROW, s)
	{}
	virtual ~ZC_EQUIP_ARROW() {}

	void deliver(int16_t inventory_index);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index;
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_GOTO = 0x07d6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_GOTO = 0x07d6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_GOTO = 0x07d6
#else
ID_ZC_ES_GOTO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ES_GOTO
 *
 */ 
class ZC_ES_GOTO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ES_GOTO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ES_GOTO, s)
	{}
	virtual ~ZC_ES_GOTO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_LIST = 0x07d2
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_LIST = 0x07d2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_LIST = 0x07d2
#else
ID_ZC_ES_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ES_LIST
 *
 */ 
class ZC_ES_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ES_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ES_LIST, s)
	{}
	virtual ~ZC_ES_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090708)
ID_ZC_ES_NOTI_MYINFO = 0x07e0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090708)
ID_ZC_ES_NOTI_MYINFO = 0x07e0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ES_NOTI_MYINFO = 0x07e0
#else
ID_ZC_ES_NOTI_MYINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ES_NOTI_MYINFO
 *
 */ 
class ZC_ES_NOTI_MYINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ES_NOTI_MYINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ES_NOTI_MYINFO, s)
	{}
	virtual ~ZC_ES_NOTI_MYINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_READY = 0x07d5
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_READY = 0x07d5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_READY = 0x07d5
#else
ID_ZC_ES_READY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ES_READY
 *
 */ 
class ZC_ES_READY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ES_READY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ES_READY, s)
	{}
	virtual ~ZC_ES_READY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_RESULT = 0x07d0
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_RESULT = 0x07d0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090520
ID_ZC_ES_RESULT = 0x07d0
#else
ID_ZC_ES_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ES_RESULT
 *
 */ 
class ZC_ES_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ES_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ES_RESULT, s)
	{}
	virtual ~ZC_ES_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_EXCHANGEITEM_UNDO = 0x00f1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_EXCHANGEITEM_UNDO = 0x00f1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EXCHANGEITEM_UNDO = 0x00f1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_EXCHANGEITEM_UNDO = 0x00f1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EXCHANGEITEM_UNDO = 0x00f1
#else
ID_ZC_EXCHANGEITEM_UNDO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EXCHANGEITEM_UNDO
 *
 */ 
class ZC_EXCHANGEITEM_UNDO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EXCHANGEITEM_UNDO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EXCHANGEITEM_UNDO, s)
	{}
	virtual ~ZC_EXCHANGEITEM_UNDO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_EXEC_EXCHANGE_ITEM = 0x00f0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_EXEC_EXCHANGE_ITEM = 0x00f0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_EXEC_EXCHANGE_ITEM = 0x00f0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_EXEC_EXCHANGE_ITEM = 0x00f0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_EXEC_EXCHANGE_ITEM = 0x00f0
#else
ID_ZC_EXEC_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_EXEC_EXCHANGE_ITEM
 *
 */ 
class ZC_EXEC_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_EXEC_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_EXEC_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_EXEC_EXCHANGE_ITEM() {}

	void deliver(zc_exec_exchange_item_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110809)
ID_ZC_FAILED_GET_ITEM_FROM_ZONEDA = 0x08ce
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110810)
ID_ZC_FAILED_GET_ITEM_FROM_ZONEDA = 0x08ce
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FAILED_GET_ITEM_FROM_ZONEDA = 0x08ce
#else
ID_ZC_FAILED_GET_ITEM_FROM_ZONEDA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FAILED_GET_ITEM_FROM_ZONEDA
 *
 */ 
class ZC_FAILED_GET_ITEM_FROM_ZONEDA : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FAILED_GET_ITEM_FROM_ZONEDA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FAILED_GET_ITEM_FROM_ZONEDA, s)
	{}
	virtual ~ZC_FAILED_GET_ITEM_FROM_ZONEDA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER = 0x0812
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER = 0x0812
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER = 0x0812
#else
ID_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER
 *
 */ 
class ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER, s)
	{}
	virtual ~ZC_FAILED_OPEN_BUYING_STORE_TO_BUYER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER = 0x081a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER = 0x081a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER = 0x081a
#else
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER
 *
 */ 
class ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER, s)
	{}
	virtual ~ZC_FAILED_TRADE_BUYING_STORE_TO_BUYER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER = 0x0824
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER = 0x0824
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER = 0x0824
#else
ID_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER
 *
 */ 
class ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER, s)
	{}
	virtual ~ZC_FAILED_TRADE_BUYING_STORE_TO_SELLER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110809)
ID_ZC_FASTMOVE = 0x08d2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110810)
ID_ZC_FASTMOVE = 0x08d2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FASTMOVE = 0x08d2
#else
ID_ZC_FASTMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FASTMOVE
 *
 */ 
class ZC_FASTMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FASTMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FASTMOVE, s)
	{}
	virtual ~ZC_FASTMOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120522)
ID_ZC_FATIGUE_CHN = 0x0982
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120523)
ID_ZC_FATIGUE_CHN = 0x0982
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FATIGUE_CHN = 0x0982
#else
ID_ZC_FATIGUE_CHN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FATIGUE_CHN
 *
 */ 
class ZC_FATIGUE_CHN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FATIGUE_CHN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FATIGUE_CHN, s)
	{}
	virtual ~ZC_FATIGUE_CHN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_FEED_MER = 0x022f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050608)
ID_ZC_FEED_MER = 0x022f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_FEED_MER = 0x022f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_FEED_MER = 0x022f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FEED_MER = 0x022f
#else
ID_ZC_FEED_MER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FEED_MER
 *
 */ 
class ZC_FEED_MER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FEED_MER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FEED_MER, s)
	{}
	virtual ~ZC_FEED_MER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_FEED_PET = 0x01a3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_FEED_PET = 0x01a3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_FEED_PET = 0x01a3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_FEED_PET = 0x01a3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FEED_PET = 0x01a3
#else
ID_ZC_FEED_PET = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FEED_PET
 *
 */ 
class ZC_FEED_PET : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FEED_PET(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FEED_PET, s)
	{}
	virtual ~ZC_FEED_PET() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_FORMATSTRING_MSG = 0x02c2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070821)
ID_ZC_FORMATSTRING_MSG = 0x02c2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_FORMATSTRING_MSG = 0x02c2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_FORMATSTRING_MSG = 0x02c2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FORMATSTRING_MSG = 0x02c2
#else
ID_ZC_FORMATSTRING_MSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FORMATSTRING_MSG
 *
 */ 
class ZC_FORMATSTRING_MSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FORMATSTRING_MSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FORMATSTRING_MSG, s)
	{}
	virtual ~ZC_FORMATSTRING_MSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160330)
ID_ZC_FORMATSTRING_MSG_COLOR = 0x0a6f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160330)
ID_ZC_FORMATSTRING_MSG_COLOR = 0x0a6f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FORMATSTRING_MSG_COLOR = 0x0a6f
#else
ID_ZC_FORMATSTRING_MSG_COLOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FORMATSTRING_MSG_COLOR
 *
 */ 
class ZC_FORMATSTRING_MSG_COLOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FORMATSTRING_MSG_COLOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FORMATSTRING_MSG_COLOR, s)
	{}
	virtual ~ZC_FORMATSTRING_MSG_COLOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_FRIENDS_LIST = 0x0201
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_FRIENDS_LIST = 0x0201
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_FRIENDS_LIST = 0x0201
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_FRIENDS_LIST = 0x0201
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FRIENDS_LIST = 0x0201
#else
ID_ZC_FRIENDS_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FRIENDS_LIST
 *
 */ 
class ZC_FRIENDS_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FRIENDS_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FRIENDS_LIST, s)
	{}
	virtual ~ZC_FRIENDS_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_FRIENDS_STATE = 0x0206
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_FRIENDS_STATE = 0x0206
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_FRIENDS_STATE = 0x0206
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_FRIENDS_STATE = 0x0206
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_FRIENDS_STATE = 0x0206
#else
ID_ZC_FRIENDS_STATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_FRIENDS_STATE
 *
 */ 
class ZC_FRIENDS_STATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_FRIENDS_STATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_FRIENDS_STATE, s)
	{}
	virtual ~ZC_FRIENDS_STATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070122
ID_ZC_GAMEGUARD_LINGO_KEY = 0x02a3
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070122
ID_ZC_GAMEGUARD_LINGO_KEY = 0x02a3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070122
ID_ZC_GAMEGUARD_LINGO_KEY = 0x02a3
#else
ID_ZC_GAMEGUARD_LINGO_KEY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GAMEGUARD_LINGO_KEY
 *
 */ 
class ZC_GAMEGUARD_LINGO_KEY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GAMEGUARD_LINGO_KEY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GAMEGUARD_LINGO_KEY, s)
	{}
	virtual ~ZC_GAMEGUARD_LINGO_KEY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050404
ID_ZC_GAME_GUARD = 0x0227
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050404)
ID_ZC_GAME_GUARD = 0x0227
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GAME_GUARD = 0x0227
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050404
ID_ZC_GAME_GUARD = 0x0227
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GAME_GUARD = 0x0227
#else
ID_ZC_GAME_GUARD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GAME_GUARD
 *
 */ 
class ZC_GAME_GUARD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GAME_GUARD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GAME_GUARD, s)
	{}
	virtual ~ZC_GAME_GUARD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_GANGSI_POINT = 0x0280
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060918)
ID_ZC_GANGSI_POINT = 0x0280
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GANGSI_POINT = 0x0280
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_GANGSI_POINT = 0x0280
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GANGSI_POINT = 0x0280
#else
ID_ZC_GANGSI_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GANGSI_POINT
 *
 */ 
class ZC_GANGSI_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GANGSI_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GANGSI_POINT, s)
	{}
	virtual ~ZC_GANGSI_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_GANGSI_RANK = 0x0282
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060918)
ID_ZC_GANGSI_RANK = 0x0282
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GANGSI_RANK = 0x0282
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060918
ID_ZC_GANGSI_RANK = 0x0282
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GANGSI_RANK = 0x0282
#else
ID_ZC_GANGSI_RANK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GANGSI_RANK
 *
 */ 
class ZC_GANGSI_RANK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GANGSI_RANK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GANGSI_RANK, s)
	{}
	virtual ~ZC_GANGSI_RANK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140508)
ID_ZC_GOLDPCCAFE_POINT = 0x0a15
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140508)
ID_ZC_GOLDPCCAFE_POINT = 0x0a15
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GOLDPCCAFE_POINT = 0x0a15
#else
ID_ZC_GOLDPCCAFE_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GOLDPCCAFE_POINT
 *
 */ 
class ZC_GOLDPCCAFE_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GOLDPCCAFE_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GOLDPCCAFE_POINT, s)
	{}
	virtual ~ZC_GOLDPCCAFE_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_GPK_AUTH = 0x0853
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_GPK_AUTH = 0x0853
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GPK_AUTH = 0x0853
#else
ID_ZC_GPK_AUTH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GPK_AUTH
 *
 */ 
class ZC_GPK_AUTH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GPK_AUTH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GPK_AUTH, s)
	{}
	virtual ~ZC_GPK_AUTH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_GPK_DYNCODE = 0x0851
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_GPK_DYNCODE = 0x0851
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GPK_DYNCODE = 0x0851
#else
ID_ZC_GPK_DYNCODE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GPK_DYNCODE
 *
 */ 
class ZC_GPK_DYNCODE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GPK_DYNCODE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GPK_DYNCODE, s)
	{}
	virtual ~ZC_GPK_DYNCODE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_ACK = 0x0b5d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_ACK = 0x0b5d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_ACK = 0x0b5d
#else
ID_ZC_GRADE_ENCHANT_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GRADE_ENCHANT_ACK
 *
 */ 
class ZC_GRADE_ENCHANT_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GRADE_ENCHANT_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GRADE_ENCHANT_ACK, s)
	{}
	virtual ~ZC_GRADE_ENCHANT_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_BROADCAST_RESULT = 0x0b5e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_BROADCAST_RESULT = 0x0b5e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_BROADCAST_RESULT = 0x0b5e
#else
ID_ZC_GRADE_ENCHANT_BROADCAST_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GRADE_ENCHANT_BROADCAST_RESULT
 *
 */ 
class ZC_GRADE_ENCHANT_BROADCAST_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GRADE_ENCHANT_BROADCAST_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GRADE_ENCHANT_BROADCAST_RESULT, s)
	{}
	virtual ~ZC_GRADE_ENCHANT_BROADCAST_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_MATERIAL_LIST = 0x0b5a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_MATERIAL_LIST = 0x0b5a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GRADE_ENCHANT_MATERIAL_LIST = 0x0b5a
#else
ID_ZC_GRADE_ENCHANT_MATERIAL_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GRADE_ENCHANT_MATERIAL_LIST
 *
 */ 
class ZC_GRADE_ENCHANT_MATERIAL_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GRADE_ENCHANT_MATERIAL_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GRADE_ENCHANT_MATERIAL_LIST, s)
	{}
	virtual ~ZC_GRADE_ENCHANT_MATERIAL_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GROUPINFO_CHANGE = 0x0101
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GROUPINFO_CHANGE = 0x0101
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GROUPINFO_CHANGE = 0x0101
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GROUPINFO_CHANGE = 0x0101
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GROUPINFO_CHANGE = 0x0101
#else
ID_ZC_GROUPINFO_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GROUPINFO_CHANGE
 *
 */ 
class ZC_GROUPINFO_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GROUPINFO_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GROUPINFO_CHANGE, s)
	{}
	virtual ~ZC_GROUPINFO_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GROUP_ISALIVE = 0x0ab2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GROUP_ISALIVE = 0x0ab2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GROUP_ISALIVE = 0x0ab2
#else
ID_ZC_GROUP_ISALIVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GROUP_ISALIVE
 *
 */ 
class ZC_GROUP_ISALIVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GROUP_ISALIVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GROUP_ISALIVE, s)
	{}
	virtual ~ZC_GROUP_ISALIVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GROUP_LIST = 0x00fb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171206)
ID_ZC_GROUP_LIST = 0x0ae5
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20151007
ID_ZC_GROUP_LIST = 0x0a44
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GROUP_LIST = 0x00fb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171206)
ID_ZC_GROUP_LIST = 0x0ae5
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20151007
ID_ZC_GROUP_LIST = 0x0a44
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_GROUP_LIST = 0x00fb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GROUP_LIST = 0x00fb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171130)
ID_ZC_GROUP_LIST = 0x0ae5
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_GROUP_LIST = 0x00fb
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_GROUP_LIST = 0x0a44
#else
ID_ZC_GROUP_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GROUP_LIST
 *
 */ 
class ZC_GROUP_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GROUP_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GROUP_LIST, s)
	{}
	virtual ~ZC_GROUP_LIST() {}

	void deliver(std::string party_name, std::vector<s_members> );
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_len{ 0 };
	char _party_name[MAX_PARTY_NAME_LENGTH];
	std::vector<s_members> _members;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5 = 0x09d3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5 = 0x09d3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5 = 0x09d3
#else
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5
 *
 */ 
class ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5, s)
	{}
	virtual ~ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140402)
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6 = 0x0a11
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140402)
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6 = 0x0a11
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6 = 0x0a11
#else
ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6
 *
 */ 
class ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6, s)
	{}
	virtual ~ZC_GUILDSTORAGE_ITEMLIST_EQUIP_V6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5 = 0x09d2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5 = 0x09d2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5 = 0x09d2
#else
ID_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5
 *
 */ 
class ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5, s)
	{}
	virtual ~ZC_GUILDSTORAGE_ITEMLIST_NORMAL_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_AGIT_INFO = 0x0b27
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_AGIT_INFO = 0x0b27
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_AGIT_INFO = 0x0b27
#else
ID_ZC_GUILD_AGIT_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_AGIT_INFO
 *
 */ 
class ZC_GUILD_AGIT_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_AGIT_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_AGIT_INFO, s)
	{}
	virtual ~ZC_GUILD_AGIT_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_CHAT = 0x017f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_CHAT = 0x017f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_CHAT = 0x017f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_CHAT = 0x017f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_CHAT = 0x017f
#else
ID_ZC_GUILD_CHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_CHAT
 *
 */ 
class ZC_GUILD_CHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_CHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_CHAT, s)
	{}
	virtual ~ZC_GUILD_CHAT() {}

	void deliver(std::string message);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	char _message[MAX_CHAT_STR_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_EMBLEM_IMG = 0x0152
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_EMBLEM_IMG = 0x0152
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_EMBLEM_IMG = 0x0b36
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_GUILD_EMBLEM_IMG = 0x0152
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_EMBLEM_IMG = 0x0b36
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_EMBLEM_IMG = 0x0152
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_GUILD_EMBLEM_IMG = 0x0152
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_GUILD_EMBLEM_IMG = 0x0b36
#else
ID_ZC_GUILD_EMBLEM_IMG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_EMBLEM_IMG
 *
 */ 
class ZC_GUILD_EMBLEM_IMG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_EMBLEM_IMG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_EMBLEM_IMG, s)
	{}
	virtual ~ZC_GUILD_EMBLEM_IMG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_INFO = 0x0150
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_INFO = 0x0150
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20160622)
ID_ZC_GUILD_INFO = 0x0a84
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_GUILD_INFO = 0x0b7b
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_GUILD_INFO = 0x0150
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20160622)
ID_ZC_GUILD_INFO = 0x0a84
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_GUILD_INFO = 0x0b7b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_INFO = 0x0150
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_INFO = 0x0a84
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_GUILD_INFO = 0x0150
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_GUILD_INFO = 0x0b7b
#else
ID_ZC_GUILD_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_INFO
 *
 */ 
class ZC_GUILD_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_INFO, s)
	{}
	virtual ~ZC_GUILD_INFO() {}

	void deliver(s_zc_guild_info s);
	ByteBuffer &serialize();

/* Structure */
	s_zc_guild_info _s;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_INFO2 = 0x01b6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_INFO2 = 0x01b6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_INFO2 = 0x01b6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_INFO2 = 0x01b6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_INFO2 = 0x01b6
#else
ID_ZC_GUILD_INFO2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_INFO2
 *
 */ 
class ZC_GUILD_INFO2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_INFO2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_INFO2, s)
	{}
	virtual ~ZC_GUILD_INFO2() {}

	void deliver(s_zc_guild_info2 s);
	ByteBuffer &serialize();

/* Structure */
	s_zc_guild_info2 _s;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x01ec
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031124)
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x01ec
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x01ec
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031124
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x01ec
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x01ec
#else
ID_ZC_GUILD_MEMBER_MAP_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_MEMBER_MAP_CHANGE
 *
 */ 
class ZC_GUILD_MEMBER_MAP_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_MEMBER_MAP_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_MEMBER_MAP_CHANGE, s)
	{}
	virtual ~ZC_GUILD_MEMBER_MAP_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_NOTICE = 0x016f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_NOTICE = 0x016f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_NOTICE = 0x016f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_NOTICE = 0x016f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_NOTICE = 0x016f
#else
ID_ZC_GUILD_NOTICE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_NOTICE
 *
 */ 
class ZC_GUILD_NOTICE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_NOTICE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_NOTICE, s)
	{}
	virtual ~ZC_GUILD_NOTICE() {}

	void deliver(std::string subject, std::string notice);
	ByteBuffer &serialize();

/* Structure */
	char _subject[MAX_GUILD_SUBJECT_STR_LENGTH];
	char _notice[MAX_GUILD_NOTICE_STR_LENGTH];
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_GUILD_POSITION = 0x0afd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_GUILD_POSITION = 0x0afd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_GUILD_POSITION = 0x0afd
#else
ID_ZC_GUILD_POSITION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_POSITION
 *
 */ 
class ZC_GUILD_POSITION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_POSITION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_POSITION, s)
	{}
	virtual ~ZC_GUILD_POSITION() {}

	void deliver(int account_id, std::string position);
	ByteBuffer &serialize();

/* Structure */
	int _account_id;
	char _position[MAX_GUILD_POSITION_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_SKILLINFO = 0x0162
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_SKILLINFO = 0x0162
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_SKILLINFO = 0x0162
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_SKILLINFO = 0x0162
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_SKILLINFO = 0x0162
#else
ID_ZC_GUILD_SKILLINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_SKILLINFO
 *
 */ 
class ZC_GUILD_SKILLINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_SKILLINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_SKILLINFO, s)
	{}
	virtual ~ZC_GUILD_SKILLINFO() {}

	void deliver(int skill_points, std::vector<s_zc_guild_skillinfo> skillinfo);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int16_t _skill_points{ 0 };
	std::vector<s_zc_guild_skillinfo> _skillinfo;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_GUILD_ZENY_ACK = 0x01b8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_ZENY_ACK = 0x01b8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_ZENY_ACK = 0x01b8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_GUILD_ZENY_ACK = 0x01b8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_GUILD_ZENY_ACK = 0x01b8
#else
ID_ZC_GUILD_ZENY_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_GUILD_ZENY_ACK
 *
 */ 
class ZC_GUILD_ZENY_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_GUILD_ZENY_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_GUILD_ZENY_ACK, s)
	{}
	virtual ~ZC_GUILD_ZENY_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_HACKSHIELD_CRC_MSG = 0x02a8
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_HACKSHIELD_CRC_MSG = 0x02a8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_HACKSHIELD_CRC_MSG = 0x02a8
#else
ID_ZC_HACKSHIELD_CRC_MSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HACKSHIELD_CRC_MSG
 *
 */ 
class ZC_HACKSHIELD_CRC_MSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HACKSHIELD_CRC_MSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HACKSHIELD_CRC_MSG, s)
	{}
	virtual ~ZC_HACKSHIELD_CRC_MSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_HACKSH_CPX_MSG = 0x02a6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070611)
ID_ZC_HACKSH_CPX_MSG = 0x02a6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090408)
ID_ZC_HACKSH_CPX_MSG = 0x02a6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_HACKSH_CPX_MSG = 0x02a6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HACKSH_CPX_MSG = 0x02a6
#else
ID_ZC_HACKSH_CPX_MSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HACKSH_CPX_MSG
 *
 */ 
class ZC_HACKSH_CPX_MSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HACKSH_CPX_MSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HACKSH_CPX_MSG, s)
	{}
	virtual ~ZC_HACKSH_CPX_MSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090401)
ID_ZC_HACKSH_ERROR_MSG = 0x0449
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090401)
ID_ZC_HACKSH_ERROR_MSG = 0x0449
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090330
ID_ZC_HACKSH_ERROR_MSG = 0x0449
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HACKSH_ERROR_MSG = 0x0449
#else
ID_ZC_HACKSH_ERROR_MSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HACKSH_ERROR_MSG
 *
 */ 
class ZC_HACKSH_ERROR_MSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HACKSH_ERROR_MSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HACKSH_ERROR_MSG, s)
	{}
	virtual ~ZC_HACKSH_ERROR_MSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_HAT_EFFECT = 0x0a3b
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_HAT_EFFECT = 0x0a3b
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20190000
ID_ZC_HAT_EFFECT = 0x0a3b
#else
ID_ZC_HAT_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HAT_EFFECT
 *
 */ 
class ZC_HAT_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HAT_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HAT_EFFECT, s)
	{}
	virtual ~ZC_HAT_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_HIGHJUMP = 0x01ff
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040422)
ID_ZC_HIGHJUMP = 0x01ff
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_HIGHJUMP = 0x01ff
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040422
ID_ZC_HIGHJUMP = 0x01ff
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HIGHJUMP = 0x01ff
#else
ID_ZC_HIGHJUMP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HIGHJUMP
 *
 */ 
class ZC_HIGHJUMP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HIGHJUMP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HIGHJUMP, s)
	{}
	virtual ~ZC_HIGHJUMP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_HOSKILLINFO_LIST = 0x0235
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050530)
ID_ZC_HOSKILLINFO_LIST = 0x0235
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_HOSKILLINFO_LIST = 0x0235
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_HOSKILLINFO_LIST = 0x0235
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HOSKILLINFO_LIST = 0x0235
#else
ID_ZC_HOSKILLINFO_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HOSKILLINFO_LIST
 *
 */ 
class ZC_HOSKILLINFO_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HOSKILLINFO_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HOSKILLINFO_LIST, s)
	{}
	virtual ~ZC_HOSKILLINFO_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_HOSKILLINFO_UPDATE = 0x0239
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050530)
ID_ZC_HOSKILLINFO_UPDATE = 0x0239
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_HOSKILLINFO_UPDATE = 0x0239
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050531
ID_ZC_HOSKILLINFO_UPDATE = 0x0239
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HOSKILLINFO_UPDATE = 0x0239
#else
ID_ZC_HOSKILLINFO_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HOSKILLINFO_UPDATE
 *
 */ 
class ZC_HOSKILLINFO_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HOSKILLINFO_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HOSKILLINFO_UPDATE, s)
	{}
	virtual ~ZC_HOSKILLINFO_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090610)
ID_ZC_HO_PAR_CHANGE = 0x07db
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090610)
ID_ZC_HO_PAR_CHANGE = 0x07db
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090610
ID_ZC_HO_PAR_CHANGE = 0x07db
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HO_PAR_CHANGE = 0x07db
#else
ID_ZC_HO_PAR_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HO_PAR_CHANGE
 *
 */ 
class ZC_HO_PAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HO_PAR_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HO_PAR_CHANGE, s)
	{}
	virtual ~ZC_HO_PAR_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120228)
ID_ZC_HP_INFO = 0x0977
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120228)
ID_ZC_HP_INFO = 0x0977
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HP_INFO = 0x0977
#else
ID_ZC_HP_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HP_INFO
 *
 */ 
class ZC_HP_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HP_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HP_INFO, s)
	{}
	virtual ~ZC_HP_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141126)
ID_ZC_HP_INFO_TINY = 0x0a36
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141126)
ID_ZC_HP_INFO_TINY = 0x0a36
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HP_INFO_TINY = 0x0a36
#else
ID_ZC_HP_INFO_TINY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HP_INFO_TINY
 *
 */ 
class ZC_HP_INFO_TINY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HP_INFO_TINY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HP_INFO_TINY, s)
	{}
	virtual ~ZC_HP_INFO_TINY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060607
ID_ZC_HUNTINGLIST = 0x027a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060607)
ID_ZC_HUNTINGLIST = 0x027a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_HUNTINGLIST = 0x027a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060607
ID_ZC_HUNTINGLIST = 0x027a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HUNTINGLIST = 0x027a
#else
ID_ZC_HUNTINGLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HUNTINGLIST
 *
 */ 
class ZC_HUNTINGLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HUNTINGLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HUNTINGLIST, s)
	{}
	virtual ~ZC_HUNTINGLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111101)
ID_ZC_HUNTING_QUEST_INFO = 0x08fe
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111101)
ID_ZC_HUNTING_QUEST_INFO = 0x08fe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_HUNTING_QUEST_INFO = 0x08fe
#else
ID_ZC_HUNTING_QUEST_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_HUNTING_QUEST_INFO
 *
 */ 
class ZC_HUNTING_QUEST_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_HUNTING_QUEST_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_HUNTING_QUEST_INFO, s)
	{}
	virtual ~ZC_HUNTING_QUEST_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_INFO_REMAINTIME = 0x01c2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_INFO_REMAINTIME = 0x01c2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_INFO_REMAINTIME = 0x01c2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_INFO_REMAINTIME = 0x01c2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INFO_REMAINTIME = 0x01c2
#else
ID_ZC_INFO_REMAINTIME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INFO_REMAINTIME
 *
 */ 
class ZC_INFO_REMAINTIME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INFO_REMAINTIME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INFO_REMAINTIME, s)
	{}
	virtual ~ZC_INFO_REMAINTIME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_INVENTORY_END = 0x0b0b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_INVENTORY_END = 0x0b0b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180905)
ID_ZC_INVENTORY_END = 0x0b0b
#else
ID_ZC_INVENTORY_END = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_END
 *
 */ 
class ZC_INVENTORY_END : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_END(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_END, s)
	{}
	virtual ~ZC_INVENTORY_END() {}

	void deliver(inventory_type type);
	ByteBuffer &serialize();

/* Structure */
	int8_t _inventory_type{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_INVENTORY_EXPANSION_INFO = 0x0b18
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181031)
ID_ZC_INVENTORY_EXPANSION_INFO = 0x0b18
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_EXPANSION_INFO = 0x0b18
#else
ID_ZC_INVENTORY_EXPANSION_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_EXPANSION_INFO
 *
 */ 
class ZC_INVENTORY_EXPANSION_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_EXPANSION_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_EXPANSION_INFO, s)
	{}
	virtual ~ZC_INVENTORY_EXPANSION_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_ITEMLIST_EQUIP = 0x0901
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_ITEMLIST_EQUIP = 0x0901
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_ITEMLIST_EQUIP = 0x0901
#else
ID_ZC_INVENTORY_ITEMLIST_EQUIP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_ITEMLIST_EQUIP
 *
 */ 
class ZC_INVENTORY_ITEMLIST_EQUIP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_ITEMLIST_EQUIP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_ITEMLIST_EQUIP, s)
	{}
	virtual ~ZC_INVENTORY_ITEMLIST_EQUIP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V5 = 0x0992
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V5 = 0x0992
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V5 = 0x0992
#else
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_ITEMLIST_EQUIP_V5
 *
 */ 
class ZC_INVENTORY_ITEMLIST_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_ITEMLIST_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_ITEMLIST_EQUIP_V5, s)
	{}
	virtual ~ZC_INVENTORY_ITEMLIST_EQUIP_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V6 = 0x0a0d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V6 = 0x0a0d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V6 = 0x0a0d
#else
ID_ZC_INVENTORY_ITEMLIST_EQUIP_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_ITEMLIST_EQUIP_V6
 *
 */ 
class ZC_INVENTORY_ITEMLIST_EQUIP_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_ITEMLIST_EQUIP_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_ITEMLIST_EQUIP_V6, s)
	{}
	virtual ~ZC_INVENTORY_ITEMLIST_EQUIP_V6() {}

	void deliver(std::vector<std::shared_ptr<const item_entry_data>> const &items);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
#if (CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180912) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20180919) || \
	(CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181002)
	int8_t _inventory_type{ 0 };
#endif
	std::vector<std::shared_ptr<const item_entry_data>> _items;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_ITEMLIST_NORMAL = 0x0900
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_ITEMLIST_NORMAL = 0x0900
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_ITEMLIST_NORMAL = 0x0900
#else
ID_ZC_INVENTORY_ITEMLIST_NORMAL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_ITEMLIST_NORMAL
 *
 */ 
class ZC_INVENTORY_ITEMLIST_NORMAL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_ITEMLIST_NORMAL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_ITEMLIST_NORMAL, s)
	{}
	virtual ~ZC_INVENTORY_ITEMLIST_NORMAL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_INVENTORY_ITEMLIST_NORMAL_V5 = 0x0991
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_INVENTORY_ITEMLIST_NORMAL_V5 = 0x0991
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_ITEMLIST_NORMAL_V5 = 0x0991
#else
ID_ZC_INVENTORY_ITEMLIST_NORMAL_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_ITEMLIST_NORMAL_V5
 *
 */ 
class ZC_INVENTORY_ITEMLIST_NORMAL_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_ITEMLIST_NORMAL_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_ITEMLIST_NORMAL_V5, s)
	{}
	virtual ~ZC_INVENTORY_ITEMLIST_NORMAL_V5() {}

	void deliver(std::vector<std::shared_ptr<const item_entry_data>> const &items);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{0};
#if (CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180912) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20180919) || \
	(CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181002)
	int8_t _inventory_type{ 0 };
#endif
	std::vector<std::shared_ptr<const item_entry_data>> _items;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161130)
ID_ZC_INVENTORY_MOVE_FAILED = 0x0aa7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161130)
ID_ZC_INVENTORY_MOVE_FAILED = 0x0aa7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_MOVE_FAILED = 0x0aa7
#else
ID_ZC_INVENTORY_MOVE_FAILED = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_MOVE_FAILED
 *
 */ 
class ZC_INVENTORY_MOVE_FAILED : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_MOVE_FAILED(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_MOVE_FAILED, s)
	{}
	virtual ~ZC_INVENTORY_MOVE_FAILED() {}

	void deliver(int16_t index, int16_t silent);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index;
	int16_t _silent;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181002)
ID_ZC_INVENTORY_START = 0x0b08
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180919)
ID_ZC_INVENTORY_START = 0x0b08
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180919)
ID_ZC_INVENTORY_START = 0x0b08
#else
ID_ZC_INVENTORY_START = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_START
 *
 */ 
class ZC_INVENTORY_START : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_START(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_START, s)
	{}
	virtual ~ZC_INVENTORY_START() {}

	void deliver(inventory_type type, std::string name);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int8_t _inventory_type{ 0 };
	char _name[MAX_UNIT_NAME_LENGTH]{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_TAB = 0x0908
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_INVENTORY_TAB = 0x0908
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_INVENTORY_TAB = 0x0908
#else
ID_ZC_INVENTORY_TAB = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_INVENTORY_TAB
 *
 */ 
class ZC_INVENTORY_TAB : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_INVENTORY_TAB(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_INVENTORY_TAB, s)
	{}
	virtual ~ZC_INVENTORY_TAB() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080701
ID_ZC_IRMAIL_NOTIFY = 0x02f5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081217)
ID_ZC_IRMAIL_NOTIFY = 0x02f5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_IRMAIL_NOTIFY = 0x02f5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080618
ID_ZC_IRMAIL_NOTIFY = 0x02f5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_IRMAIL_NOTIFY = 0x02f5
#else
ID_ZC_IRMAIL_NOTIFY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_IRMAIL_NOTIFY
 *
 */ 
class ZC_IRMAIL_NOTIFY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_IRMAIL_NOTIFY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_IRMAIL_NOTIFY, s)
	{}
	virtual ~ZC_IRMAIL_NOTIFY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080617
ID_ZC_IRMAIL_SEND_RES = 0x02f4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081217)
ID_ZC_IRMAIL_SEND_RES = 0x02f4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_IRMAIL_SEND_RES = 0x02f4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080618
ID_ZC_IRMAIL_SEND_RES = 0x02f4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_IRMAIL_SEND_RES = 0x02f4
#else
ID_ZC_IRMAIL_SEND_RES = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_IRMAIL_SEND_RES
 *
 */ 
class ZC_IRMAIL_SEND_RES : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_IRMAIL_SEND_RES(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_IRMAIL_SEND_RES, s)
	{}
	virtual ~ZC_IRMAIL_SEND_RES() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070911
ID_ZC_ISVR_DISCONNECT = 0x02d5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070911)
ID_ZC_ISVR_DISCONNECT = 0x02d5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ISVR_DISCONNECT = 0x02d5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070911
ID_ZC_ISVR_DISCONNECT = 0x02d5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ISVR_DISCONNECT = 0x02d5
#else
ID_ZC_ISVR_DISCONNECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ISVR_DISCONNECT
 *
 */ 
class ZC_ISVR_DISCONNECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ISVR_DISCONNECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ISVR_DISCONNECT, s)
	{}
	virtual ~ZC_ISVR_DISCONNECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEMCOMPOSITION_LIST = 0x017b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMCOMPOSITION_LIST = 0x017b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMCOMPOSITION_LIST = 0x017b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEMCOMPOSITION_LIST = 0x017b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMCOMPOSITION_LIST = 0x017b
#else
ID_ZC_ITEMCOMPOSITION_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEMCOMPOSITION_LIST
 *
 */ 
class ZC_ITEMCOMPOSITION_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEMCOMPOSITION_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEMCOMPOSITION_LIST, s)
	{}
	virtual ~ZC_ITEMCOMPOSITION_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEMIDENTIFY_LIST = 0x0177
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMIDENTIFY_LIST = 0x0177
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMIDENTIFY_LIST = 0x0177
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEMIDENTIFY_LIST = 0x0177
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMIDENTIFY_LIST = 0x0177
#else
ID_ZC_ITEMIDENTIFY_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEMIDENTIFY_LIST
 *
 */ 
class ZC_ITEMIDENTIFY_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEMIDENTIFY_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEMIDENTIFY_LIST, s)
	{}
	virtual ~ZC_ITEMIDENTIFY_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090818)
ID_ZC_ITEMLISTWIN_OPEN = 0x07e3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090818)
ID_ZC_ITEMLISTWIN_OPEN = 0x07e3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEMLISTWIN_OPEN = 0x07e3
#else
ID_ZC_ITEMLISTWIN_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEMLISTWIN_OPEN
 *
 */ 
class ZC_ITEMLISTWIN_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEMLISTWIN_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEMLISTWIN_OPEN, s)
	{}
	virtual ~ZC_ITEMLISTWIN_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_ITEM_DELETE_BUYING_STORE = 0x081c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_ITEM_DELETE_BUYING_STORE = 0x081c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_DELETE_BUYING_STORE = 0x081c
#else
ID_ZC_ITEM_DELETE_BUYING_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_DELETE_BUYING_STORE
 *
 */ 
class ZC_ITEM_DELETE_BUYING_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_DELETE_BUYING_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_DELETE_BUYING_STORE, s)
	{}
	virtual ~ZC_ITEM_DELETE_BUYING_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEM_DISAPPEAR = 0x00a1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_DISAPPEAR = 0x00a1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_DISAPPEAR = 0x00a1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_DISAPPEAR = 0x00a1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_DISAPPEAR = 0x00a1
#else
ID_ZC_ITEM_DISAPPEAR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_DISAPPEAR
 *
 */ 
class ZC_ITEM_DISAPPEAR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_DISAPPEAR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_DISAPPEAR, s)
	{}
	virtual ~ZC_ITEM_DISAPPEAR() {}

	void deliver(int32_t guid);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEM_ENTRY = 0x009d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_ENTRY = 0x009d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_ENTRY = 0x009d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_ENTRY = 0x009d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_ENTRY = 0x009d
#else
ID_ZC_ITEM_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_ENTRY
 *
 */ 
class ZC_ITEM_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_ENTRY, s)
	{}
	virtual ~ZC_ITEM_ENTRY() {}

	void deliver(item_viewport_entry entry);
	ByteBuffer &serialize();

/* Structure */
	item_viewport_entry _entry;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEM_FALL_ENTRY = 0x009e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170913)
ID_ZC_ITEM_FALL_ENTRY = 0x0add
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_FALL_ENTRY = 0x009e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170913)
ID_ZC_ITEM_FALL_ENTRY = 0x0add
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ITEM_FALL_ENTRY = 0x009e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_FALL_ENTRY = 0x009e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_FALL_ENTRY = 0x0add
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20181114
ID_ZC_ITEM_FALL_ENTRY = 0x009e
#else
ID_ZC_ITEM_FALL_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_FALL_ENTRY
 *
 */ 
class ZC_ITEM_FALL_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_FALL_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_FALL_ENTRY, s)
	{}
	virtual ~ZC_ITEM_FALL_ENTRY() {}

	void deliver(int guid, int item_id, int type, int identified, int x, int y, int x_area, int y_area, int amount);
	void deliver(int guid, int item_id, int type, int identified, int x, int y, int x_area, int y_area, int amount, int show_drop_effect, int drop_effect_mode);
	ByteBuffer &serialize();

/* Structure */
	uint32_t _guid{0};
#if (CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181121) || \
	(CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180704) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20181114)
	uint32_t _item_id{0};
#else
	uint16_t _item_id{0};
#endif
#if PACKET_VERSION >= 20130000 /* not sure of date */
	uint16_t _type{ 0 };
#endif
	uint8_t _is_identified{ 0 };
	int16_t _x{ 0 };
	int16_t _y{ 0 };
	uint8_t _x_area{ 0 };
	uint8_t _y_area{ 0 };
	int16_t _amount{ 0 };
#if (CLIENT_TYPE == 'Z') || (PACKET_VERSION >= 20180418)
	int8_t _show_drop_effect{ 0 };
	int16_t _drop_effect_mode{ 0 };
#endif
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101019)
ID_ZC_ITEM_FALL_ENTRY4 = 0x084b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101019)
ID_ZC_ITEM_FALL_ENTRY4 = 0x084b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_FALL_ENTRY4 = 0x084b
#else
ID_ZC_ITEM_FALL_ENTRY4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_FALL_ENTRY4
 *
 */ 
class ZC_ITEM_FALL_ENTRY4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_FALL_ENTRY4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_FALL_ENTRY4, s)
	{}
	virtual ~ZC_ITEM_FALL_ENTRY4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEM_PICKUP_ACK = 0x00a0
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_PICKUP_ACK = 0x00a0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_ACK = 0x0b41
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ITEM_PICKUP_ACK = 0x00a0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_ACK = 0x0b41
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_PICKUP_ACK = 0x00a0
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ITEM_PICKUP_ACK = 0x00a0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_ACK = 0x0b41
#else
ID_ZC_ITEM_PICKUP_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK
 *
 */ 
class ZC_ITEM_PICKUP_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_ITEM_PICKUP_ACK2 = 0x029a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061218)
ID_ZC_ITEM_PICKUP_ACK2 = 0x029a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK2 = 0x029a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_ITEM_PICKUP_ACK2 = 0x029a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK2 = 0x029a
#else
ID_ZC_ITEM_PICKUP_ACK2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK2
 *
 */ 
class ZC_ITEM_PICKUP_ACK2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK2, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_ITEM_PICKUP_ACK3 = 0x02d4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070904)
ID_ZC_ITEM_PICKUP_ACK3 = 0x02d4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK3 = 0x02d4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_ITEM_PICKUP_ACK3 = 0x02d4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK3 = 0x02d4
#else
ID_ZC_ITEM_PICKUP_ACK3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK3
 *
 */ 
class ZC_ITEM_PICKUP_ACK3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK3, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ITEM_PICKUP_ACK_V5 = 0x0990
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_ITEM_PICKUP_ACK_V5 = 0x0990
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK_V5 = 0x0990
#else
ID_ZC_ITEM_PICKUP_ACK_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK_V5
 *
 */ 
class ZC_ITEM_PICKUP_ACK_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK_V5, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ITEM_PICKUP_ACK_V6 = 0x0a0c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140312)
ID_ZC_ITEM_PICKUP_ACK_V6 = 0x0a0c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK_V6 = 0x0a0c
#else
ID_ZC_ITEM_PICKUP_ACK_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK_V6
 *
 */ 
class ZC_ITEM_PICKUP_ACK_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK_V6, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK_V6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141126)
ID_ZC_ITEM_PICKUP_ACK_V7 = 0x0a37
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20141126)
ID_ZC_ITEM_PICKUP_ACK_V7 = 0x0a37
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_PICKUP_ACK_V7 = 0x0a37
#else
ID_ZC_ITEM_PICKUP_ACK_V7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_ACK_V7
 *
 */ 
class ZC_ITEM_PICKUP_ACK_V7 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_ACK_V7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_ACK_V7, s)
	{}
	virtual ~ZC_ITEM_PICKUP_ACK_V7() {}

	void deliver(struct item_entry_data id, int16_t amount, item_inventory_addition_notif_type result);
	ByteBuffer &serialize();

/* Structure */
	struct item_entry_data _id;
	int16_t _amount;
	item_inventory_addition_notif_type _result;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070604
ID_ZC_ITEM_PICKUP_PARTY = 0x02b8
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070604
ID_ZC_ITEM_PICKUP_PARTY = 0x02b8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_PARTY = 0x0b67
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_ITEM_PICKUP_PARTY = 0x02b8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_PARTY = 0x0b67
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070604
ID_ZC_ITEM_PICKUP_PARTY = 0x02b8
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ITEM_PICKUP_PARTY = 0x02b8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_ITEM_PICKUP_PARTY = 0x0b67
#else
ID_ZC_ITEM_PICKUP_PARTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PICKUP_PARTY
 *
 */ 
class ZC_ITEM_PICKUP_PARTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PICKUP_PARTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PICKUP_PARTY, s)
	{}
	virtual ~ZC_ITEM_PICKUP_PARTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20170111
ID_ZC_ITEM_PREVIEW = 0x0ab9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181121)
ID_ZC_ITEM_PREVIEW = 0x0b13
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20170111
ID_ZC_ITEM_PREVIEW = 0x0ab9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181017)
ID_ZC_ITEM_PREVIEW = 0x0b13
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_ITEM_PREVIEW = 0x0ab9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181114)
ID_ZC_ITEM_PREVIEW = 0x0b13
#else
ID_ZC_ITEM_PREVIEW = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_PREVIEW
 *
 */ 
class ZC_ITEM_PREVIEW : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_PREVIEW(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_PREVIEW, s)
	{}
	virtual ~ZC_ITEM_PREVIEW() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201021 \
	|| PACKET_VERSION >= 20200916)
ID_ZC_ITEM_REFORM_ACK = 0x0b92
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_ITEM_REFORM_ACK = 0x0b92
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_ITEM_REFORM_ACK = 0x0b92
#else
ID_ZC_ITEM_REFORM_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_REFORM_ACK
 *
 */ 
class ZC_ITEM_REFORM_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_REFORM_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_REFORM_ACK, s)
	{}
	virtual ~ZC_ITEM_REFORM_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ITEM_THROW_ACK = 0x00af
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_THROW_ACK = 0x00af
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_THROW_ACK = 0x00af
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ITEM_THROW_ACK = 0x00af
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ITEM_THROW_ACK = 0x00af
#else
ID_ZC_ITEM_THROW_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ITEM_THROW_ACK
 *
 */ 
class ZC_ITEM_THROW_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ITEM_THROW_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ITEM_THROW_ACK, s)
	{}
	virtual ~ZC_ITEM_THROW_ACK() {}

	void deliver(int16_t inventory_index, int16_t amount);
	ByteBuffer &serialize();

/* Structure */
	int16_t _inventory_index;
	int16_t _amount;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_JOIN_BATTLE_FIELD = 0x07ed
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091006)
ID_ZC_JOIN_BATTLE_FIELD = 0x07ed
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_JOIN_BATTLE_FIELD = 0x07ed
#else
ID_ZC_JOIN_BATTLE_FIELD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_JOIN_BATTLE_FIELD
 *
 */ 
class ZC_JOIN_BATTLE_FIELD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_JOIN_BATTLE_FIELD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_JOIN_BATTLE_FIELD, s)
	{}
	virtual ~ZC_JOIN_BATTLE_FIELD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_KILLER_POINT = 0x0236
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050530)
ID_ZC_KILLER_POINT = 0x0236
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_KILLER_POINT = 0x0236
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_KILLER_POINT = 0x0236
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_KILLER_POINT = 0x0236
#else
ID_ZC_KILLER_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_KILLER_POINT
 *
 */ 
class ZC_KILLER_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_KILLER_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_KILLER_POINT, s)
	{}
	virtual ~ZC_KILLER_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_KILLER_RANK = 0x0238
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050530)
ID_ZC_KILLER_RANK = 0x0238
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_KILLER_RANK = 0x0238
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050530
ID_ZC_KILLER_RANK = 0x0238
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_KILLER_RANK = 0x0238
#else
ID_ZC_KILLER_RANK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_KILLER_RANK
 *
 */ 
class ZC_KILLER_RANK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_KILLER_RANK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_KILLER_RANK, s)
	{}
	virtual ~ZC_KILLER_RANK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_LESSEFFECT = 0x021e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041213)
ID_ZC_LESSEFFECT = 0x021e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_LESSEFFECT = 0x021e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_LESSEFFECT = 0x021e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_LESSEFFECT = 0x021e
#else
ID_ZC_LESSEFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_LESSEFFECT
 *
 */ 
class ZC_LESSEFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_LESSEFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_LESSEFFECT, s)
	{}
	virtual ~ZC_LESSEFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_LONGPAR_CHANGE = 0x00b1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_LONGPAR_CHANGE = 0x00b1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_LONGPAR_CHANGE = 0x00b1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_LONGPAR_CHANGE = 0x00b1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_LONGPAR_CHANGE = 0x00b1
#else
ID_ZC_LONGPAR_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_LONGPAR_CHANGE
 *
 */ 
class ZC_LONGPAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_LONGPAR_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_LONGPAR_CHANGE, s)
	{}
	virtual ~ZC_LONGPAR_CHANGE() {}

	void deliver(status_point_type type, int16_t value);
	ByteBuffer &serialize();

/* Structure */
	status_point_type _type;
	int16_t _value;
};


enum {
#if CLIENT_TYPE == 'Z' || \
	(CLIENT_TYPE == 'M' && PACKET_VERSION >= 20170906) || \
	(CLIENT_TYPE == 'R' && PACKET_VERSION >= 20170830)
	ID_ZC_LONGLONGPAR_CHANGE = 0x0acb
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_LONGLONGPAR_CHANGE
 *
 */
class ZC_LONGLONGPAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_LONGLONGPAR_CHANGE(std::shared_ptr<ZoneSession> s)
		: NetworkPacket<ZoneSession>(ID_ZC_LONGLONGPAR_CHANGE, s)
	{}
	virtual ~ZC_LONGLONGPAR_CHANGE() {}

	void deliver(status_point_type type, int64_t value);
	ByteBuffer& serialize();

	/* Structure */
	status_point_type _type;
	int64_t _value;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_MACRO_ITEMPICKUP_FAIL = 0x0855
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101102)
ID_ZC_MACRO_ITEMPICKUP_FAIL = 0x0855
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MACRO_ITEMPICKUP_FAIL = 0x0855
#else
ID_ZC_MACRO_ITEMPICKUP_FAIL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MACRO_ITEMPICKUP_FAIL
 *
 */ 
class ZC_MACRO_ITEMPICKUP_FAIL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MACRO_ITEMPICKUP_FAIL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MACRO_ITEMPICKUP_FAIL, s)
	{}
	virtual ~ZC_MACRO_ITEMPICKUP_FAIL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_RECEIVE = 0x024a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050718)
ID_ZC_MAIL_RECEIVE = 0x024a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_RECEIVE = 0x024a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_RECEIVE = 0x024a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_RECEIVE = 0x024a
#else
ID_ZC_MAIL_RECEIVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_RECEIVE
 *
 */ 
class ZC_MAIL_RECEIVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_RECEIVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_RECEIVE, s)
	{}
	virtual ~ZC_MAIL_RECEIVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050801
ID_ZC_MAIL_REQ_GET_ITEM = 0x0245
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050801)
ID_ZC_MAIL_REQ_GET_ITEM = 0x0245
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_GET_ITEM = 0x0245
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050801
ID_ZC_MAIL_REQ_GET_ITEM = 0x0245
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_GET_ITEM = 0x0245
#else
ID_ZC_MAIL_REQ_GET_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_REQ_GET_ITEM
 *
 */ 
class ZC_MAIL_REQ_GET_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_REQ_GET_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_REQ_GET_ITEM, s)
	{}
	virtual ~ZC_MAIL_REQ_GET_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_MAIL_REQ_GET_LIST = 0x0240
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050829)
ID_ZC_MAIL_REQ_GET_LIST = 0x0240
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_GET_LIST = 0x0240
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050829
ID_ZC_MAIL_REQ_GET_LIST = 0x0240
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_GET_LIST = 0x0240
#else
ID_ZC_MAIL_REQ_GET_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_REQ_GET_LIST
 *
 */ 
class ZC_MAIL_REQ_GET_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_REQ_GET_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_REQ_GET_LIST, s)
	{}
	virtual ~ZC_MAIL_REQ_GET_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_REQ_OPEN = 0x0242
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050718)
ID_ZC_MAIL_REQ_OPEN = 0x0242
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_OPEN = 0x0242
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_REQ_OPEN = 0x0242
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_OPEN = 0x0242
#else
ID_ZC_MAIL_REQ_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_REQ_OPEN
 *
 */ 
class ZC_MAIL_REQ_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_REQ_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_REQ_OPEN, s)
	{}
	virtual ~ZC_MAIL_REQ_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_REQ_SEND = 0x0249
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050718)
ID_ZC_MAIL_REQ_SEND = 0x0249
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_SEND = 0x0249
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050718
ID_ZC_MAIL_REQ_SEND = 0x0249
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_REQ_SEND = 0x0249
#else
ID_ZC_MAIL_REQ_SEND = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_REQ_SEND
 *
 */ 
class ZC_MAIL_REQ_SEND : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_REQ_SEND(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_REQ_SEND, s)
	{}
	virtual ~ZC_MAIL_REQ_SEND() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20051024
ID_ZC_MAIL_WINDOWS = 0x0260
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20051024)
ID_ZC_MAIL_WINDOWS = 0x0260
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_WINDOWS = 0x0260
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20051024
ID_ZC_MAIL_WINDOWS = 0x0260
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAIL_WINDOWS = 0x0260
#else
ID_ZC_MAIL_WINDOWS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAIL_WINDOWS
 *
 */ 
class ZC_MAIL_WINDOWS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAIL_WINDOWS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAIL_WINDOWS, s)
	{}
	virtual ~ZC_MAIL_WINDOWS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MAKABLEITEMLIST = 0x018d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MAKABLEITEMLIST = 0x018d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAKABLEITEMLIST = 0x018d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MAKABLEITEMLIST = 0x018d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAKABLEITEMLIST = 0x018d
#else
ID_ZC_MAKABLEITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAKABLEITEMLIST
 *
 */ 
class ZC_MAKABLEITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAKABLEITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAKABLEITEMLIST, s)
	{}
	virtual ~ZC_MAKABLEITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MAKINGARROW_LIST = 0x01ad
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MAKINGARROW_LIST = 0x01ad
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAKINGARROW_LIST = 0x01ad
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MAKINGARROW_LIST = 0x01ad
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAKINGARROW_LIST = 0x01ad
#else
ID_ZC_MAKINGARROW_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAKINGARROW_LIST
 *
 */ 
class ZC_MAKINGARROW_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAKINGARROW_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAKINGARROW_LIST, s)
	{}
	virtual ~ZC_MAKINGARROW_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20051010
ID_ZC_MAKINGITEM_LIST = 0x025a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20051010)
ID_ZC_MAKINGITEM_LIST = 0x025a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAKINGITEM_LIST = 0x025a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20051010
ID_ZC_MAKINGITEM_LIST = 0x025a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAKINGITEM_LIST = 0x025a
#else
ID_ZC_MAKINGITEM_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAKINGITEM_LIST
 *
 */ 
class ZC_MAKINGITEM_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAKINGITEM_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAKINGITEM_LIST, s)
	{}
	virtual ~ZC_MAKINGITEM_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071127
ID_ZC_MAPPROPERTY = 0x02e7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071127)
ID_ZC_MAPPROPERTY = 0x02e7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MAPPROPERTY = 0x02e7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071127
ID_ZC_MAPPROPERTY = 0x02e7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAPPROPERTY = 0x02e7
#else
ID_ZC_MAPPROPERTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAPPROPERTY
 *
 */ 
class ZC_MAPPROPERTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAPPROPERTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAPPROPERTY, s)
	{}
	virtual ~ZC_MAPPROPERTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20121010)
ID_ZC_MAPPROPERTY_R2 = 0x099b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20121010)
ID_ZC_MAPPROPERTY_R2 = 0x099b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MAPPROPERTY_R2 = 0x099b
#else
ID_ZC_MAPPROPERTY_R2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MAPPROPERTY_R2
 *
 */ 
class ZC_MAPPROPERTY_R2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MAPPROPERTY_R2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MAPPROPERTY_R2, s)
	{}
	virtual ~ZC_MAPPROPERTY_R2() {}

	void deliver(zc_map_properties p);
	ByteBuffer &serialize();

/* Structure */
	int16_t _type{0x28};
	int32_t _p{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101221)
ID_ZC_MCSTORE_NOTMOVEITEM_LIST = 0x08b1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101221)
ID_ZC_MCSTORE_NOTMOVEITEM_LIST = 0x08b1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MCSTORE_NOTMOVEITEM_LIST = 0x08b1
#else
ID_ZC_MCSTORE_NOTMOVEITEM_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MCSTORE_NOTMOVEITEM_LIST
 *
 */ 
class ZC_MCSTORE_NOTMOVEITEM_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MCSTORE_NOTMOVEITEM_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MCSTORE_NOTMOVEITEM_LIST, s)
	{}
	virtual ~ZC_MCSTORE_NOTMOVEITEM_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MEMBERMGR_INFO = 0x0154
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBERMGR_INFO = 0x0154
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20161026)
ID_ZC_MEMBERMGR_INFO = 0x0aa5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_MEMBERMGR_INFO = 0x0b7d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_MEMBERMGR_INFO = 0x0b7d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20161026)
ID_ZC_MEMBERMGR_INFO = 0x0aa5
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_MEMBERMGR_INFO = 0x0154
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBERMGR_INFO = 0x0154
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBERMGR_INFO = 0x0aa5
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_MEMBERMGR_INFO = 0x0154
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200701)
ID_ZC_MEMBERMGR_INFO = 0x0b7d
#else
ID_ZC_MEMBERMGR_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMBERMGR_INFO
 *
 */ 
class ZC_MEMBERMGR_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMBERMGR_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMBERMGR_INFO, s)
	{}
	virtual ~ZC_MEMBERMGR_INFO() {}

	void deliver(std::vector<s_zc_membermgr_info_member> s);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zc_membermgr_info_member> _members;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MEMBER_ADD = 0x0182
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBER_ADD = 0x0182
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161026)
ID_ZC_MEMBER_ADD = 0x0aa6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_MEMBER_ADD = 0x0182
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161026)
ID_ZC_MEMBER_ADD = 0x0aa6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBER_ADD = 0x0182
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_ADD = 0x0aa6
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_MEMBER_ADD = 0x0182
#else
ID_ZC_MEMBER_ADD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMBER_ADD
 *
 */ 
class ZC_MEMBER_ADD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMBER_ADD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMBER_ADD, s)
	{}
	virtual ~ZC_MEMBER_ADD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MEMBER_EXIT = 0x00dd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_EXIT = 0x00dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_EXIT = 0x00dd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBER_EXIT = 0x00dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_EXIT = 0x00dd
#else
ID_ZC_MEMBER_EXIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMBER_EXIT
 *
 */ 
class ZC_MEMBER_EXIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMBER_EXIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMBER_EXIT, s)
	{}
	virtual ~ZC_MEMBER_EXIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MEMBER_NEWENTRY = 0x00dc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_NEWENTRY = 0x00dc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_NEWENTRY = 0x00dc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MEMBER_NEWENTRY = 0x00dc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMBER_NEWENTRY = 0x00dc
#else
ID_ZC_MEMBER_NEWENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMBER_NEWENTRY
 *
 */ 
class ZC_MEMBER_NEWENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMBER_NEWENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMBER_NEWENTRY, s)
	{}
	virtual ~ZC_MEMBER_NEWENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071023
ID_ZC_MEMORIALDUNGEON_INFO = 0x02cd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071023)
ID_ZC_MEMORIALDUNGEON_INFO = 0x02cd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_INFO = 0x02cd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071023
ID_ZC_MEMORIALDUNGEON_INFO = 0x02cd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_INFO = 0x02cd
#else
ID_ZC_MEMORIALDUNGEON_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMORIALDUNGEON_INFO
 *
 */ 
class ZC_MEMORIALDUNGEON_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMORIALDUNGEON_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMORIALDUNGEON_INFO, s)
	{}
	virtual ~ZC_MEMORIALDUNGEON_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070828
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x02ce
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070828)
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x02ce
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x02ce
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070828
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x02ce
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x02ce
#else
ID_ZC_MEMORIALDUNGEON_NOTIFY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMORIALDUNGEON_NOTIFY
 *
 */ 
class ZC_MEMORIALDUNGEON_NOTIFY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMORIALDUNGEON_NOTIFY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMORIALDUNGEON_NOTIFY, s)
	{}
	virtual ~ZC_MEMORIALDUNGEON_NOTIFY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071023
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x02cb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071023)
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x02cb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x02cb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071023
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x02cb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x02cb
#else
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO
 *
 */ 
class ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO, s)
	{}
	virtual ~ZC_MEMORIALDUNGEON_SUBSCRIPTION_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070828
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x02cc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070828)
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x02cc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x02cc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070828
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x02cc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x02cc
#else
ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY
 *
 */ 
class ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY, s)
	{}
	virtual ~ZC_MEMORIALDUNGEON_SUBSCRIPTION_NOTIFY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MENU_LIST = 0x00b7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MENU_LIST = 0x00b7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MENU_LIST = 0x00b7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MENU_LIST = 0x00b7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MENU_LIST = 0x00b7
#else
ID_ZC_MENU_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MENU_LIST
 *
 */ 
class ZC_MENU_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MENU_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MENU_LIST, s)
	{}
	virtual ~ZC_MENU_LIST() {}

	void deliver(int32_t guid, std::string const &menu);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{0};
	int32_t _guid{0};
	std::string _menu_items{""};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120228)
ID_ZC_MERGE_ITEM_OPEN = 0x096d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120228)
ID_ZC_MERGE_ITEM_OPEN = 0x096d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MERGE_ITEM_OPEN = 0x096d
#else
ID_ZC_MERGE_ITEM_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MERGE_ITEM_OPEN
 *
 */ 
class ZC_MERGE_ITEM_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MERGE_ITEM_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MERGE_ITEM_OPEN, s)
	{}
	virtual ~ZC_MERGE_ITEM_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_INIT = 0x029b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061226)
ID_ZC_MER_INIT = 0x029b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MER_INIT = 0x029b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_INIT = 0x029b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MER_INIT = 0x029b
#else
ID_ZC_MER_INIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MER_INIT
 *
 */ 
class ZC_MER_INIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MER_INIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MER_INIT, s)
	{}
	virtual ~ZC_MER_INIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_PAR_CHANGE = 0x02a2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061226)
ID_ZC_MER_PAR_CHANGE = 0x02a2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MER_PAR_CHANGE = 0x02a2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_PAR_CHANGE = 0x02a2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MER_PAR_CHANGE = 0x02a2
#else
ID_ZC_MER_PAR_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MER_PAR_CHANGE
 *
 */ 
class ZC_MER_PAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MER_PAR_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MER_PAR_CHANGE, s)
	{}
	virtual ~ZC_MER_PAR_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_PROPERTY = 0x029c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061226)
ID_ZC_MER_PROPERTY = 0x029c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MER_PROPERTY = 0x029c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_PROPERTY = 0x029c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MER_PROPERTY = 0x029c
#else
ID_ZC_MER_PROPERTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MER_PROPERTY
 *
 */ 
class ZC_MER_PROPERTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MER_PROPERTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MER_PROPERTY, s)
	{}
	virtual ~ZC_MER_PROPERTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_SKILLINFO_LIST = 0x029d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061226)
ID_ZC_MER_SKILLINFO_LIST = 0x029d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MER_SKILLINFO_LIST = 0x029d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_SKILLINFO_LIST = 0x029d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MER_SKILLINFO_LIST = 0x029d
#else
ID_ZC_MER_SKILLINFO_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MER_SKILLINFO_LIST
 *
 */ 
class ZC_MER_SKILLINFO_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MER_SKILLINFO_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MER_SKILLINFO_LIST, s)
	{}
	virtual ~ZC_MER_SKILLINFO_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_SKILLINFO_UPDATE = 0x029e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061226)
ID_ZC_MER_SKILLINFO_UPDATE = 0x029e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MER_SKILLINFO_UPDATE = 0x029e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061226
ID_ZC_MER_SKILLINFO_UPDATE = 0x029e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MER_SKILLINFO_UPDATE = 0x029e
#else
ID_ZC_MER_SKILLINFO_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MER_SKILLINFO_UPDATE
 *
 */ 
class ZC_MER_SKILLINFO_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MER_SKILLINFO_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MER_SKILLINFO_UPDATE, s)
	{}
	virtual ~ZC_MER_SKILLINFO_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_MICROSCOPE = 0x0906
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_MICROSCOPE = 0x0906
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MICROSCOPE = 0x0906
#else
ID_ZC_MICROSCOPE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MICROSCOPE
 *
 */ 
class ZC_MICROSCOPE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MICROSCOPE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MICROSCOPE, s)
	{}
	virtual ~ZC_MICROSCOPE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081126)
ID_ZC_MILLENNIUMSHIELD = 0x0440
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081126)
ID_ZC_MILLENNIUMSHIELD = 0x0440
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081126
ID_ZC_MILLENNIUMSHIELD = 0x0440
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MILLENNIUMSHIELD = 0x0440
#else
ID_ZC_MILLENNIUMSHIELD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MILLENNIUMSHIELD
 *
 */ 
class ZC_MILLENNIUMSHIELD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MILLENNIUMSHIELD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MILLENNIUMSHIELD, s)
	{}
	virtual ~ZC_MILLENNIUMSHIELD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210331 \
	|| PACKET_VERSION == 20210317)
ID_ZC_MONOLOG_DIALOG = 0x0ba9
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_MONOLOG_DIALOG = 0x0ba9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210331 \
	|| PACKET_VERSION == 20210317)
ID_ZC_MONOLOG_DIALOG = 0x0ba9
#else
ID_ZC_MONOLOG_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MONOLOG_DIALOG
 *
 */ 
class ZC_MONOLOG_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MONOLOG_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MONOLOG_DIALOG, s)
	{}
	virtual ~ZC_MONOLOG_DIALOG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MONSTER_INFO = 0x018c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_INFO = 0x018c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_INFO = 0x018c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MONSTER_INFO = 0x018c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_INFO = 0x018c
#else
ID_ZC_MONSTER_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MONSTER_INFO
 *
 */ 
class ZC_MONSTER_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MONSTER_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MONSTER_INFO, s)
	{}
	virtual ~ZC_MONSTER_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MONSTER_TALK = 0x01cc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_TALK = 0x01cc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_TALK = 0x01cc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MONSTER_TALK = 0x01cc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MONSTER_TALK = 0x01cc
#else
ID_ZC_MONSTER_TALK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MONSTER_TALK
 *
 */ 
class ZC_MONSTER_TALK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MONSTER_TALK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MONSTER_TALK, s)
	{}
	virtual ~ZC_MONSTER_TALK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061030
ID_ZC_MSG = 0x0291
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061030)
ID_ZC_MSG = 0x0291
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MSG = 0x0291
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061030
ID_ZC_MSG = 0x0291
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG = 0x0291
#else
ID_ZC_MSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG
 *
 */ 
class ZC_MSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG, s)
	{}
	virtual ~ZC_MSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130807)
ID_ZC_MSG_COLOR = 0x09cd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130807)
ID_ZC_MSG_COLOR = 0x09cd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_COLOR = 0x09cd
#else
ID_ZC_MSG_COLOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_COLOR
 *
 */ 
class ZC_MSG_COLOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_COLOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_COLOR, s)
	{}
	virtual ~ZC_MSG_COLOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090818)
ID_ZC_MSG_SKILL = 0x07e6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090818)
ID_ZC_MSG_SKILL = 0x07e6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_SKILL = 0x07e6
#else
ID_ZC_MSG_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_SKILL
 *
 */ 
class ZC_MSG_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_SKILL, s)
	{}
	virtual ~ZC_MSG_SKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MSG_STATE_CHANGE = 0x0196
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_STATE_CHANGE = 0x0196
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_STATE_CHANGE = 0x0196
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MSG_STATE_CHANGE = 0x0196
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_STATE_CHANGE = 0x0196
#else
ID_ZC_MSG_STATE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_STATE_CHANGE
 *
 */ 
class ZC_MSG_STATE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_STATE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_STATE_CHANGE, s)
	{}
	virtual ~ZC_MSG_STATE_CHANGE() {}

	void deliver(int16_t status_index, int32_t guid, int8_t state);
	ByteBuffer &serialize();

/* Structure */
	int16_t _status_index{0};
	int32_t _guid{0};
	int8_t _state{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081112)
ID_ZC_MSG_STATE_CHANGE2 = 0x043f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081111)
ID_ZC_MSG_STATE_CHANGE2 = 0x043f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081112
ID_ZC_MSG_STATE_CHANGE2 = 0x043f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_STATE_CHANGE2 = 0x043f
#else
ID_ZC_MSG_STATE_CHANGE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_STATE_CHANGE2
 *
 */ 
class ZC_MSG_STATE_CHANGE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_STATE_CHANGE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_STATE_CHANGE2, s)
	{}
	virtual ~ZC_MSG_STATE_CHANGE2() {}

	void deliver(int16_t si_type, int32_t guid, int8_t state, int32_t time_remaining, int32_t val1, int32_t val2, int32_t val3);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index{0};
	int32_t _guid{0};
	int8_t _state{0};
	int32_t _time_remaining{0};
	int32_t _val1{0};
	int32_t _val2{0};
	int32_t _val3{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120529)
ID_ZC_MSG_STATE_CHANGE3 = 0x0983
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120529)
ID_ZC_MSG_STATE_CHANGE3 = 0x0983
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_STATE_CHANGE3 = 0x0983
#else
ID_ZC_MSG_STATE_CHANGE3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_STATE_CHANGE3
 *
 */ 
class ZC_MSG_STATE_CHANGE3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_STATE_CHANGE3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_STATE_CHANGE3, s)
	{}
	virtual ~ZC_MSG_STATE_CHANGE3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090805)
ID_ZC_MSG_VALUE = 0x07e2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090805)
ID_ZC_MSG_VALUE = 0x07e2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MSG_VALUE = 0x07e2
#else
ID_ZC_MSG_VALUE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MSG_VALUE
 *
 */ 
class ZC_MSG_VALUE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MSG_VALUE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MSG_VALUE, s)
	{}
	virtual ~ZC_MSG_VALUE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MVP = 0x010c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MVP = 0x010c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MVP = 0x010c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MVP = 0x010c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MVP = 0x010c
#else
ID_ZC_MVP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MVP
 *
 */ 
class ZC_MVP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MVP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MVP, s)
	{}
	virtual ~ZC_MVP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MVP_GETTING_ITEM = 0x010a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_ITEM = 0x010a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_ITEM = 0x010a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MVP_GETTING_ITEM = 0x010a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_ITEM = 0x010a
#else
ID_ZC_MVP_GETTING_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MVP_GETTING_ITEM
 *
 */ 
class ZC_MVP_GETTING_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MVP_GETTING_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MVP_GETTING_ITEM, s)
	{}
	virtual ~ZC_MVP_GETTING_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x010b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x010b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x010b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x010b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x010b
#else
ID_ZC_MVP_GETTING_SPECIAL_EXP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MVP_GETTING_SPECIAL_EXP
 *
 */ 
class ZC_MVP_GETTING_SPECIAL_EXP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MVP_GETTING_SPECIAL_EXP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MVP_GETTING_SPECIAL_EXP, s)
	{}
	virtual ~ZC_MVP_GETTING_SPECIAL_EXP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_MYGUILD_BASIC_INFO = 0x014c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_MYGUILD_BASIC_INFO = 0x014c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_MYGUILD_BASIC_INFO = 0x014c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_MYGUILD_BASIC_INFO = 0x014c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MYGUILD_BASIC_INFO = 0x014c
#else
ID_ZC_MYGUILD_BASIC_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MYGUILD_BASIC_INFO
 *
 */ 
class ZC_MYGUILD_BASIC_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MYGUILD_BASIC_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MYGUILD_BASIC_INFO, s)
	{}
	virtual ~ZC_MYGUILD_BASIC_INFO() {}

	void deliver(std::vector<s_related_guild_info> s);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_related_guild_info> _rg_infos;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_MYITEMLIST_BUYING_STORE = 0x0813
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100309)
ID_ZC_MYITEMLIST_BUYING_STORE = 0x0813
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_MYITEMLIST_BUYING_STORE = 0x0813
#else
ID_ZC_MYITEMLIST_BUYING_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_MYITEMLIST_BUYING_STORE
 *
 */ 
class ZC_MYITEMLIST_BUYING_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_MYITEMLIST_BUYING_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_MYITEMLIST_BUYING_STORE, s)
	{}
	virtual ~ZC_MYITEMLIST_BUYING_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111108)
ID_ZC_NAVIGATION_ACTIVE = 0x08e2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111108)
ID_ZC_NAVIGATION_ACTIVE = 0x08e2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NAVIGATION_ACTIVE = 0x08e2
#else
ID_ZC_NAVIGATION_ACTIVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NAVIGATION_ACTIVE
 *
 */ 
class ZC_NAVIGATION_ACTIVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NAVIGATION_ACTIVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NAVIGATION_ACTIVE, s)
	{}
	virtual ~ZC_NAVIGATION_ACTIVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NORMAL_ITEMLIST = 0x00a3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST = 0x00a3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST = 0x00a3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NORMAL_ITEMLIST = 0x00a3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST = 0x00a3
#else
ID_ZC_NORMAL_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NORMAL_ITEMLIST
 *
 */ 
class ZC_NORMAL_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NORMAL_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NORMAL_ITEMLIST, s)
	{}
	virtual ~ZC_NORMAL_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NORMAL_ITEMLIST2 = 0x01ee
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031208)
ID_ZC_NORMAL_ITEMLIST2 = 0x01ee
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST2 = 0x01ee
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031208
ID_ZC_NORMAL_ITEMLIST2 = 0x01ee
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST2 = 0x01ee
#else
ID_ZC_NORMAL_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NORMAL_ITEMLIST2
 *
 */ 
class ZC_NORMAL_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NORMAL_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NORMAL_ITEMLIST2, s)
	{}
	virtual ~ZC_NORMAL_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NORMAL_ITEMLIST3 = 0x02e8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST3 = 0x02e8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST3 = 0x02e8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NORMAL_ITEMLIST3 = 0x02e8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NORMAL_ITEMLIST3 = 0x02e8
#else
ID_ZC_NORMAL_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NORMAL_ITEMLIST3
 *
 */ 
class ZC_NORMAL_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NORMAL_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NORMAL_ITEMLIST3, s)
	{}
	virtual ~ZC_NORMAL_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_ACT = 0x008a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT = 0x008a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT = 0x008a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_ACT = 0x008a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT = 0x008a
#else
ID_ZC_NOTIFY_ACT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ACT
 *
 */ 
class ZC_NOTIFY_ACT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ACT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ACT, s)
	{}
	virtual ~ZC_NOTIFY_ACT() {}

	void deliver(int8_t action);
	void deliver(int32_t target_guid, int8_t action);
	ByteBuffer &serialize();

/* Structure */
	int32_t _target_guid{ 0 };
	int8_t _unused_bytes[20];
	int8_t _action_type{2};
	int8_t _unused_bytes2[2];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20071113
ID_ZC_NOTIFY_ACT2 = 0x02e1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20071113)
ID_ZC_NOTIFY_ACT2 = 0x02e1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT2 = 0x02e1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20071113
ID_ZC_NOTIFY_ACT2 = 0x02e1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT2 = 0x02e1
#else
ID_ZC_NOTIFY_ACT2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ACT2
 *
 */ 
class ZC_NOTIFY_ACT2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ACT2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ACT2, s)
	{}
	virtual ~ZC_NOTIFY_ACT2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110614)
ID_ZC_NOTIFY_ACT3 = 0x08c8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110614)
ID_ZC_NOTIFY_ACT3 = 0x08c8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT3 = 0x08c8
#else
ID_ZC_NOTIFY_ACT3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ACT3
 *
 */ 
class ZC_NOTIFY_ACT3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ACT3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ACT3, s)
	{}
	virtual ~ZC_NOTIFY_ACT3() {}

	void deliver(int guid, int target_guid, int start_time, int delay_skill, int delay_damage, int damage, bool is_sp_damaged, int number_of_hits, int8_t action_type, int left_damage);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	int32_t _target_guid{0};
	int32_t _start_time{0};
	int32_t _delay_skill{0};
	int32_t _delay_damage{0};
	int32_t _damage{0};
	int8_t _is_sp_damaged{0}; 
	int16_t _number_of_hits{0};
	uint8_t _action_type{0};
	int32_t _left_damage{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_ACTENTRY = 0x007a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACTENTRY = 0x007a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACTENTRY = 0x007a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_ACTENTRY = 0x007a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACTENTRY = 0x007a
#else
ID_ZC_NOTIFY_ACTENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ACTENTRY
 *
 */ 
class ZC_NOTIFY_ACTENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ACTENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ACTENTRY, s)
	{}
	virtual ~ZC_NOTIFY_ACTENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_ACT_POSITION = 0x008b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT_POSITION = 0x008b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT_POSITION = 0x008b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_ACT_POSITION = 0x008b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ACT_POSITION = 0x008b
#else
ID_ZC_NOTIFY_ACT_POSITION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ACT_POSITION
 *
 */ 
class ZC_NOTIFY_ACT_POSITION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ACT_POSITION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ACT_POSITION, s)
	{}
	virtual ~ZC_NOTIFY_ACT_POSITION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_NOTIFY_BARGAIN_SALE_CLOSE = 0x09b3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_NOTIFY_BARGAIN_SALE_CLOSE = 0x09b3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_BARGAIN_SALE_CLOSE = 0x09b3
#else
ID_ZC_NOTIFY_BARGAIN_SALE_CLOSE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_BARGAIN_SALE_CLOSE
 *
 */ 
class ZC_NOTIFY_BARGAIN_SALE_CLOSE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_BARGAIN_SALE_CLOSE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_BARGAIN_SALE_CLOSE, s)
	{}
	virtual ~ZC_NOTIFY_BARGAIN_SALE_CLOSE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_NOTIFY_BARGAIN_SALE_SELLING = 0x09b2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130605)
ID_ZC_NOTIFY_BARGAIN_SALE_SELLING = 0x09b2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_BARGAIN_SALE_SELLING = 0x09b2
#else
ID_ZC_NOTIFY_BARGAIN_SALE_SELLING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_BARGAIN_SALE_SELLING
 *
 */ 
class ZC_NOTIFY_BARGAIN_SALE_SELLING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_BARGAIN_SALE_SELLING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_BARGAIN_SALE_SELLING, s)
	{}
	virtual ~ZC_NOTIFY_BARGAIN_SALE_SELLING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x02d3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070904)
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x02d3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x02d3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x02d3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x02d3
#else
ID_ZC_NOTIFY_BIND_ON_EQUIP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_BIND_ON_EQUIP
 *
 */ 
class ZC_NOTIFY_BIND_ON_EQUIP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_BIND_ON_EQUIP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_BIND_ON_EQUIP, s)
	{}
	virtual ~ZC_NOTIFY_BIND_ON_EQUIP() {}

	void deliver(int16_t index);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0121
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0121
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0121
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0121
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0121
#else
ID_ZC_NOTIFY_CARTITEM_COUNTINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CARTITEM_COUNTINFO
 *
 */ 
class ZC_NOTIFY_CARTITEM_COUNTINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CARTITEM_COUNTINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CARTITEM_COUNTINFO, s)
	{}
	virtual ~ZC_NOTIFY_CARTITEM_COUNTINFO() {}

	void deliver(int unique_items, int max_cart_items, int cart_weight, int cart_weight_max);
	ByteBuffer &serialize();

/* Structure */
	int16_t _unique_items{ 0 };
	int16_t _max_cart_items{ 0 };
	int32_t _cart_weight{ 0 };
	int32_t _cart_weight_max{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_CHAT = 0x008d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT = 0x008d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT = 0x008d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_CHAT = 0x008d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT = 0x008d
#else
ID_ZC_NOTIFY_CHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CHAT
 *
 */ 
class ZC_NOTIFY_CHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CHAT, s)
	{}
	virtual ~ZC_NOTIFY_CHAT() {}

	void deliver(int32_t guid, std::string message);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{8};
	int32_t _guid{0};
	std::string _message{""};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_CHAT_PARTY = 0x0109
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT_PARTY = 0x0109
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT_PARTY = 0x0109
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_CHAT_PARTY = 0x0109
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CHAT_PARTY = 0x0109
#else
ID_ZC_NOTIFY_CHAT_PARTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CHAT_PARTY
 *
 */ 
class ZC_NOTIFY_CHAT_PARTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CHAT_PARTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CHAT_PARTY, s)
	{}
	virtual ~ZC_NOTIFY_CHAT_PARTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_NOTIFY_CLAN_CHAT = 0x098e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_NOTIFY_CLAN_CHAT = 0x098e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CLAN_CHAT = 0x098e
#else
ID_ZC_NOTIFY_CLAN_CHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CLAN_CHAT
 *
 */ 
class ZC_NOTIFY_CLAN_CHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CLAN_CHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CLAN_CHAT, s)
	{}
	virtual ~ZC_NOTIFY_CLAN_CHAT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_NOTIFY_CLAN_CONNECTINFO = 0x0988
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120716)
ID_ZC_NOTIFY_CLAN_CONNECTINFO = 0x0988
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CLAN_CONNECTINFO = 0x0988
#else
ID_ZC_NOTIFY_CLAN_CONNECTINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CLAN_CONNECTINFO
 *
 */ 
class ZC_NOTIFY_CLAN_CONNECTINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CLAN_CONNECTINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CLAN_CONNECTINFO, s)
	{}
	virtual ~ZC_NOTIFY_CLAN_CONNECTINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_NOTIFY_CRAZYKILLER = 0x0220
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041213)
ID_ZC_NOTIFY_CRAZYKILLER = 0x0220
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CRAZYKILLER = 0x0220
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_NOTIFY_CRAZYKILLER = 0x0220
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_CRAZYKILLER = 0x0220
#else
ID_ZC_NOTIFY_CRAZYKILLER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_CRAZYKILLER
 *
 */ 
class ZC_NOTIFY_CRAZYKILLER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_CRAZYKILLER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_CRAZYKILLER, s)
	{}
	virtual ~ZC_NOTIFY_CRAZYKILLER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_EFFECT = 0x019b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EFFECT = 0x019b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EFFECT = 0x019b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_EFFECT = 0x019b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EFFECT = 0x019b
#else
ID_ZC_NOTIFY_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_EFFECT
 *
 */ 
class ZC_NOTIFY_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_EFFECT, s)
	{}
	virtual ~ZC_NOTIFY_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_EFFECT2 = 0x01f3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040216)
ID_ZC_NOTIFY_EFFECT2 = 0x01f3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EFFECT2 = 0x01f3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040216
ID_ZC_NOTIFY_EFFECT2 = 0x01f3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EFFECT2 = 0x01f3
#else
ID_ZC_NOTIFY_EFFECT2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_EFFECT2
 *
 */ 
class ZC_NOTIFY_EFFECT2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_EFFECT2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_EFFECT2, s)
	{}
	virtual ~ZC_NOTIFY_EFFECT2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060911
ID_ZC_NOTIFY_EFFECT3 = 0x0284
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20060911
ID_ZC_NOTIFY_EFFECT3 = 0x0284
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NOTIFY_EFFECT3 = 0x0b69
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NOTIFY_EFFECT3 = 0x0284
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NOTIFY_EFFECT3 = 0x0b69
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060911
ID_ZC_NOTIFY_EFFECT3 = 0x0284
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_NOTIFY_EFFECT3 = 0x0284
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NOTIFY_EFFECT3 = 0x0b69
#else
ID_ZC_NOTIFY_EFFECT3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_EFFECT3
 *
 */ 
class ZC_NOTIFY_EFFECT3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_EFFECT3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_EFFECT3, s)
	{}
	virtual ~ZC_NOTIFY_EFFECT3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION = 0x08dc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION = 0x08dc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION = 0x08dc
#else
ID_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ENTRY_QUEUE_ADMISSION
 *
 */ 
class ZC_NOTIFY_ENTRY_QUEUE_ADMISSION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ENTRY_QUEUE_ADMISSION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ENTRY_QUEUE_ADMISSION, s)
	{}
	virtual ~ZC_NOTIFY_ENTRY_QUEUE_ADMISSION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_ENTRY_QUEUE_APPLY = 0x08d9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_ENTRY_QUEUE_APPLY = 0x08d9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_ENTRY_QUEUE_APPLY = 0x08d9
#else
ID_ZC_NOTIFY_ENTRY_QUEUE_APPLY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_ENTRY_QUEUE_APPLY
 *
 */ 
class ZC_NOTIFY_ENTRY_QUEUE_APPLY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_ENTRY_QUEUE_APPLY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_ENTRY_QUEUE_APPLY, s)
	{}
	virtual ~ZC_NOTIFY_ENTRY_QUEUE_APPLY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20091027
ID_ZC_NOTIFY_EXP = 0x07f6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170405)
ID_ZC_NOTIFY_EXP = 0x0acc
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20091027
ID_ZC_NOTIFY_EXP = 0x07f6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170405)
ID_ZC_NOTIFY_EXP = 0x0acc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_EXP = 0x0acc
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_NOTIFY_EXP = 0x07f6
#else
ID_ZC_NOTIFY_EXP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_EXP
 *
 */ 
class ZC_NOTIFY_EXP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_EXP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_EXP, s)
	{}
	virtual ~ZC_NOTIFY_EXP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NOTIFY_FONT = 0x02ef
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_FONT = 0x02ef
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_FONT = 0x02ef
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NOTIFY_FONT = 0x02ef
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_FONT = 0x02ef
#else
ID_ZC_NOTIFY_FONT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_FONT
 *
 */ 
class ZC_NOTIFY_FONT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_FONT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_FONT, s)
	{}
	virtual ~ZC_NOTIFY_FONT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_GROUNDSKILL = 0x0117
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_GROUNDSKILL = 0x0117
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_GROUNDSKILL = 0x0117
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_GROUNDSKILL = 0x0117
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_GROUNDSKILL = 0x0117
#else
ID_ZC_NOTIFY_GROUNDSKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_GROUNDSKILL
 *
 */ 
class ZC_NOTIFY_GROUNDSKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_GROUNDSKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_GROUNDSKILL, s)
	{}
	virtual ~ZC_NOTIFY_GROUNDSKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0106
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0106
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210407 \
	|| PACKET_VERSION == 20210317)
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0bab
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0106
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0bab
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0106
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0106
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210401 \
	|| PACKET_VERSION == 20210317)
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0bab
#else
ID_ZC_NOTIFY_HP_TO_GROUPM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_HP_TO_GROUPM
 *
 */ 
class ZC_NOTIFY_HP_TO_GROUPM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_HP_TO_GROUPM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_HP_TO_GROUPM, s)
	{}
	virtual ~ZC_NOTIFY_HP_TO_GROUPM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100119)
ID_ZC_NOTIFY_HP_TO_GROUPM_R2 = 0x080e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100119)
ID_ZC_NOTIFY_HP_TO_GROUPM_R2 = 0x080e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_HP_TO_GROUPM_R2 = 0x080e
#else
ID_ZC_NOTIFY_HP_TO_GROUPM_R2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_HP_TO_GROUPM_R2
 *
 */ 
class ZC_NOTIFY_HP_TO_GROUPM_R2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_HP_TO_GROUPM_R2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_HP_TO_GROUPM_R2, s)
	{}
	virtual ~ZC_NOTIFY_HP_TO_GROUPM_R2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_INITCHAR = 0x0075
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_INITCHAR = 0x0075
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_INITCHAR = 0x0075
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_INITCHAR = 0x0075
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_INITCHAR = 0x0075
#else
ID_ZC_NOTIFY_INITCHAR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_INITCHAR
 *
 */ 
class ZC_NOTIFY_INITCHAR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_INITCHAR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_INITCHAR, s)
	{}
	virtual ~ZC_NOTIFY_INITCHAR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_LOBBY_ADMISSION = 0x08df
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_NOTIFY_LOBBY_ADMISSION = 0x08df
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_LOBBY_ADMISSION = 0x08df
#else
ID_ZC_NOTIFY_LOBBY_ADMISSION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_LOBBY_ADMISSION
 *
 */ 
class ZC_NOTIFY_LOBBY_ADMISSION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_LOBBY_ADMISSION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_LOBBY_ADMISSION, s)
	{}
	virtual ~ZC_NOTIFY_LOBBY_ADMISSION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x014b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x014b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x014b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x014b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x014b
#else
ID_ZC_NOTIFY_MANNER_POINT_GIVEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MANNER_POINT_GIVEN
 *
 */ 
class ZC_NOTIFY_MANNER_POINT_GIVEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MANNER_POINT_GIVEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MANNER_POINT_GIVEN, s)
	{}
	virtual ~ZC_NOTIFY_MANNER_POINT_GIVEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MAPINFO = 0x0189
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPINFO = 0x0189
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPINFO = 0x0189
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MAPINFO = 0x0189
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPINFO = 0x0189
#else
ID_ZC_NOTIFY_MAPINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MAPINFO
 *
 */ 
class ZC_NOTIFY_MAPINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MAPINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MAPINFO, s)
	{}
	virtual ~ZC_NOTIFY_MAPINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MAPPROPERTY = 0x0199
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY = 0x0199
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY = 0x0199
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MAPPROPERTY = 0x0199
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY = 0x0199
#else
ID_ZC_NOTIFY_MAPPROPERTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MAPPROPERTY
 *
 */ 
class ZC_NOTIFY_MAPPROPERTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MAPPROPERTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MAPPROPERTY, s)
	{}
	virtual ~ZC_NOTIFY_MAPPROPERTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x01d6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x01d6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x01d6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x01d6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x01d6
#else
ID_ZC_NOTIFY_MAPPROPERTY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MAPPROPERTY2
 *
 */ 
class ZC_NOTIFY_MAPPROPERTY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MAPPROPERTY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MAPPROPERTY2, s)
	{}
	virtual ~ZC_NOTIFY_MAPPROPERTY2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MOVE = 0x0086
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVE = 0x0086
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVE = 0x0086
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MOVE = 0x0086
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVE = 0x0086
#else
ID_ZC_NOTIFY_MOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVE
 *
 */ 
class ZC_NOTIFY_MOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVE, s)
	{}
	virtual ~ZC_NOTIFY_MOVE() {}

	void deliver(int32_t guid, int32_t time, int16_t from_x, int16_t from_y, int16_t to_x, int16_t to_y);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	int32_t _timestamp{0};
	char _packed_pos[6]{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MOVEENTRY = 0x007b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY = 0x007b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY = 0x007b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MOVEENTRY = 0x007b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY = 0x007b
#else
ID_ZC_NOTIFY_MOVEENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY
 *
 */ 
class ZC_NOTIFY_MOVEENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131023)
ID_ZC_NOTIFY_MOVEENTRY10 = 0x09db
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131023)
ID_ZC_NOTIFY_MOVEENTRY10 = 0x09db
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY10 = 0x09db
#else
ID_ZC_NOTIFY_MOVEENTRY10 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY10
 *
 */ 
class ZC_NOTIFY_MOVEENTRY10 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY10(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY10, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY10() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_MOVEENTRY11 = 0x09fd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_MOVEENTRY11 = 0x09fd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY11 = 0x09fd
#else
ID_ZC_NOTIFY_MOVEENTRY11 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY11
 *
 */ 
class ZC_NOTIFY_MOVEENTRY11 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY11(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY11, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY11() {}

	void deliver(unit_viewport_entry entry);
	ByteBuffer &serialize();

/* Structure */
	unit_viewport_entry _entry;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_MOVEENTRY2 = 0x01da
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY2 = 0x01da
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY2 = 0x01da
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_MOVEENTRY2 = 0x01da
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY2 = 0x01da
#else
ID_ZC_NOTIFY_MOVEENTRY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY2
 *
 */ 
class ZC_NOTIFY_MOVEENTRY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY2, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_MOVEENTRY3 = 0x022c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050411)
ID_ZC_NOTIFY_MOVEENTRY3 = 0x022c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY3 = 0x022c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_MOVEENTRY3 = 0x022c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY3 = 0x022c
#else
ID_ZC_NOTIFY_MOVEENTRY3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY3
 *
 */ 
class ZC_NOTIFY_MOVEENTRY3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY3, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080624
ID_ZC_NOTIFY_MOVEENTRY4 = 0x02ec
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081203)
ID_ZC_NOTIFY_MOVEENTRY4 = 0x02ec
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY4 = 0x02ec
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080618
ID_ZC_NOTIFY_MOVEENTRY4 = 0x02ec
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY4 = 0x02ec
#else
ID_ZC_NOTIFY_MOVEENTRY4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY4
 *
 */ 
class ZC_NOTIFY_MOVEENTRY4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY4, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_MOVEENTRY7 = 0x07f7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_MOVEENTRY7 = 0x07f7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY7 = 0x07f7
#else
ID_ZC_NOTIFY_MOVEENTRY7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY7
 *
 */ 
class ZC_NOTIFY_MOVEENTRY7 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY7, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_MOVEENTRY8 = 0x0856
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_MOVEENTRY8 = 0x0856
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY8 = 0x0856
#else
ID_ZC_NOTIFY_MOVEENTRY8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY8
 *
 */ 
class ZC_NOTIFY_MOVEENTRY8 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY8, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_MOVEENTRY9 = 0x0914
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_MOVEENTRY9 = 0x0914
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_MOVEENTRY9 = 0x0914
#else
ID_ZC_NOTIFY_MOVEENTRY9 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_MOVEENTRY9
 *
 */ 
class ZC_NOTIFY_MOVEENTRY9 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_MOVEENTRY9(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_MOVEENTRY9, s)
	{}
	virtual ~ZC_NOTIFY_MOVEENTRY9() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_NEWENTRY = 0x0079
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY = 0x0079
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY = 0x0079
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_NEWENTRY = 0x0079
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY = 0x0079
#else
ID_ZC_NOTIFY_NEWENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY
 *
 */ 
class ZC_NOTIFY_NEWENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110802)
ID_ZC_NOTIFY_NEWENTRY10 = 0x09dc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110803)
ID_ZC_NOTIFY_NEWENTRY10 = 0x09dc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY10 = 0x09dc
#else
ID_ZC_NOTIFY_NEWENTRY10 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY10
 *
 */ 
class ZC_NOTIFY_NEWENTRY10 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY10(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY10, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY10() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_NEWENTRY11 = 0x09fe
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_NEWENTRY11 = 0x09fe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY11 = 0x09fe
#else
ID_ZC_NOTIFY_NEWENTRY11 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY11
 *
 */ 
class ZC_NOTIFY_NEWENTRY11 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY11(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY11, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY11() {}

	void deliver(unit_viewport_entry entry);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length;
	unit_viewport_entry _entry;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_NEWENTRY2 = 0x01d9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY2 = 0x01d9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY2 = 0x01d9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_NEWENTRY2 = 0x01d9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY2 = 0x01d9
#else
ID_ZC_NOTIFY_NEWENTRY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY2
 *
 */ 
class ZC_NOTIFY_NEWENTRY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY2, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_NEWENTRY3 = 0x022b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050411)
ID_ZC_NOTIFY_NEWENTRY3 = 0x022b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY3 = 0x022b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_NEWENTRY3 = 0x022b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY3 = 0x022b
#else
ID_ZC_NOTIFY_NEWENTRY3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY3
 *
 */ 
class ZC_NOTIFY_NEWENTRY3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY3, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080624
ID_ZC_NOTIFY_NEWENTRY4 = 0x02ed
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081119)
ID_ZC_NOTIFY_NEWENTRY4 = 0x02ed
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY4 = 0x02ed
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080618
ID_ZC_NOTIFY_NEWENTRY4 = 0x02ed
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY4 = 0x02ed
#else
ID_ZC_NOTIFY_NEWENTRY4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY4
 *
 */ 
class ZC_NOTIFY_NEWENTRY4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY4, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_NEWENTRY5 = 0x07f8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_NEWENTRY5 = 0x07f8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY5 = 0x07f8
#else
ID_ZC_NOTIFY_NEWENTRY5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY5
 *
 */ 
class ZC_NOTIFY_NEWENTRY5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY5, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_NEWENTRY6 = 0x0858
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_NEWENTRY6 = 0x0858
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY6 = 0x0858
#else
ID_ZC_NOTIFY_NEWENTRY6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY6
 *
 */ 
class ZC_NOTIFY_NEWENTRY6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY6, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY6() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_NEWENTRY7 = 0x090f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_NEWENTRY7 = 0x090f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_NEWENTRY7 = 0x090f
#else
ID_ZC_NOTIFY_NEWENTRY7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_NEWENTRY7
 *
 */ 
class ZC_NOTIFY_NEWENTRY7 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_NEWENTRY7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_NEWENTRY7, s)
	{}
	virtual ~ZC_NOTIFY_NEWENTRY7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160706)
ID_ZC_NOTIFY_OFFLINE_STORE = 0x0a89
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160706)
ID_ZC_NOTIFY_OFFLINE_STORE = 0x0a89
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_OFFLINE_STORE = 0x0a89
#else
ID_ZC_NOTIFY_OFFLINE_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_OFFLINE_STORE
 *
 */ 
class ZC_NOTIFY_OFFLINE_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_OFFLINE_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_OFFLINE_STORE, s)
	{}
	virtual ~ZC_NOTIFY_OFFLINE_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060607
ID_ZC_NOTIFY_PCBANG = 0x0278
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060607)
ID_ZC_NOTIFY_PCBANG = 0x0278
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PCBANG = 0x0278
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060607
ID_ZC_NOTIFY_PCBANG = 0x0278
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PCBANG = 0x0278
#else
ID_ZC_NOTIFY_PCBANG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_PCBANG
 *
 */ 
class ZC_NOTIFY_PCBANG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_PCBANG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_PCBANG, s)
	{}
	virtual ~ZC_NOTIFY_PCBANG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x02bc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070622)
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x02bc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x02bc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070622
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x02bc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x02bc
#else
ID_ZC_NOTIFY_PCBANG_PLAYING_TIME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_PCBANG_PLAYING_TIME
 *
 */ 
class ZC_NOTIFY_PCBANG_PLAYING_TIME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_PCBANG_PLAYING_TIME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_PCBANG_PLAYING_TIME, s)
	{}
	virtual ~ZC_NOTIFY_PCBANG_PLAYING_TIME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_NOTIFY_PKINFO = 0x021f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041213)
ID_ZC_NOTIFY_PKINFO = 0x021f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PKINFO = 0x021f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041213
ID_ZC_NOTIFY_PKINFO = 0x021f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PKINFO = 0x021f
#else
ID_ZC_NOTIFY_PKINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_PKINFO
 *
 */ 
class ZC_NOTIFY_PKINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_PKINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_PKINFO, s)
	{}
	virtual ~ZC_NOTIFY_PKINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_PLAYERCHAT = 0x008e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERCHAT = 0x008e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERCHAT = 0x008e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_PLAYERCHAT = 0x008e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERCHAT = 0x008e
#else
ID_ZC_NOTIFY_PLAYERCHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_PLAYERCHAT
 *
 */ 
class ZC_NOTIFY_PLAYERCHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_PLAYERCHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_PLAYERCHAT, s)
	{}
	virtual ~ZC_NOTIFY_PLAYERCHAT() {}

	void deliver(std::string &message);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{0};
	std::string _message{""};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_PLAYERMOVE = 0x0087
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERMOVE = 0x0087
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERMOVE = 0x0087
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_PLAYERMOVE = 0x0087
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_PLAYERMOVE = 0x0087
#else
ID_ZC_NOTIFY_PLAYERMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_PLAYERMOVE
 *
 */ 
class ZC_NOTIFY_PLAYERMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_PLAYERMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_PLAYERMOVE, s)
	{}
	virtual ~ZC_NOTIFY_PLAYERMOVE() {}

	void deliver(int32_t time, int16_t from_x, int16_t from_y, int16_t to_x, int16_t to_y);
	ByteBuffer &serialize();

/* Structure */
	unsigned int _timestamp{0};
	int8_t _packed_pos[6]{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0107
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0107
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0107
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0107
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0107
#else
ID_ZC_NOTIFY_POSITION_TO_GROUPM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_POSITION_TO_GROUPM
 *
 */ 
class ZC_NOTIFY_POSITION_TO_GROUPM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_POSITION_TO_GROUPM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_POSITION_TO_GROUPM, s)
	{}
	virtual ~ZC_NOTIFY_POSITION_TO_GROUPM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x01eb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031124)
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x01eb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x01eb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031124
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x01eb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x01eb
#else
ID_ZC_NOTIFY_POSITION_TO_GUILDM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_POSITION_TO_GUILDM
 *
 */ 
class ZC_NOTIFY_POSITION_TO_GUILDM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_POSITION_TO_GUILDM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_POSITION_TO_GUILDM, s)
	{}
	virtual ~ZC_NOTIFY_POSITION_TO_GUILDM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_RANKING = 0x019a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_RANKING = 0x019a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_RANKING = 0x019a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_RANKING = 0x019a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_RANKING = 0x019a
#else
ID_ZC_NOTIFY_RANKING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_RANKING
 *
 */ 
class ZC_NOTIFY_RANKING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_RANKING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_RANKING, s)
	{}
	virtual ~ZC_NOTIFY_RANKING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_SKILL = 0x0114
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL = 0x0114
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL = 0x0114
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_SKILL = 0x0114
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL = 0x0114
#else
ID_ZC_NOTIFY_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_SKILL
 *
 */ 
class ZC_NOTIFY_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_SKILL, s)
	{}
	virtual ~ZC_NOTIFY_SKILL() {}

	void deliver(uint32_t source, uint32_t target, uint16_t skill_id, uint16_t skill_lv, uint32_t start_time, int32_t attack_motion, int32_t attacked_motion, int16_t damage, int16 count, enum zc_notify_act_3_action_types action_type);
	ByteBuffer &serialize();

/* Structure */
	uint16_t _skill_id;
	uint32_t _source_id;
	uint32_t _target_id;
	uint32_t _start_time;
	int32_t _attack_motion;
	int32_t _attacked_motion;
	int16_t _damage;
	int16_t _level;
	int16_t _count;
	int8_t _action;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_SKILL2 = 0x01de
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL2 = 0x01de
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL2 = 0x01de
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_SKILL2 = 0x01de
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL2 = 0x01de
#else
ID_ZC_NOTIFY_SKILL2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_SKILL2
 *
 */ 
class ZC_NOTIFY_SKILL2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_SKILL2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_SKILL2, s)
	{}
	virtual ~ZC_NOTIFY_SKILL2() {}

	void deliver(uint32_t source, uint32_t target, uint16_t skill_id, uint16_t skill_lv, uint32_t start_time, int32_t attack_motion, int32_t attacked_motion, int32_t damage, int16 count, enum zc_notify_act_3_action_types action_type);
	ByteBuffer &serialize();

/* Structure */
	uint16_t _skill_id;
	uint32_t _source_id;
	uint32_t _target_id;
	uint32_t _start_time;
	int32_t _attack_motion;
	int32_t _attacked_motion;
	int32_t _damage;
	int16_t _level;
	int16_t _count;
	int8_t _action;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_SKILL_POSITION = 0x0115
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL_POSITION = 0x0115
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL_POSITION = 0x0115
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_SKILL_POSITION = 0x0115
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_SKILL_POSITION = 0x0115
#else
ID_ZC_NOTIFY_SKILL_POSITION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_SKILL_POSITION
 *
 */ 
class ZC_NOTIFY_SKILL_POSITION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_SKILL_POSITION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_SKILL_POSITION, s)
	{}
	virtual ~ZC_NOTIFY_SKILL_POSITION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_STANDENTRY = 0x0078
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY = 0x0078
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY = 0x0078
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_STANDENTRY = 0x0078
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY = 0x0078
#else
ID_ZC_NOTIFY_STANDENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY
 *
 */ 
class ZC_NOTIFY_STANDENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131023)
ID_ZC_NOTIFY_STANDENTRY10 = 0x09dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131023)
ID_ZC_NOTIFY_STANDENTRY10 = 0x09dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY10 = 0x09dd
#else
ID_ZC_NOTIFY_STANDENTRY10 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY10
 *
 */ 
class ZC_NOTIFY_STANDENTRY10 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY10(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY10, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY10() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_STANDENTRY11 = 0x09ff
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_NOTIFY_STANDENTRY11 = 0x09ff
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY11 = 0x09ff
#else
ID_ZC_NOTIFY_STANDENTRY11 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY11
 *
 */ 
class ZC_NOTIFY_STANDENTRY11 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY11(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY11, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY11() {}

	void deliver(unit_viewport_entry entry);
	ByteBuffer &serialize();

/* Structure */
	unit_viewport_entry _entry;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_STANDENTRY2 = 0x01d8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY2 = 0x01d8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY2 = 0x01d8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_STANDENTRY2 = 0x01d8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY2 = 0x01d8
#else
ID_ZC_NOTIFY_STANDENTRY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY2
 *
 */ 
class ZC_NOTIFY_STANDENTRY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY2, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_STANDENTRY3 = 0x022a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050411)
ID_ZC_NOTIFY_STANDENTRY3 = 0x022a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY3 = 0x022a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_NOTIFY_STANDENTRY3 = 0x022a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY3 = 0x022a
#else
ID_ZC_NOTIFY_STANDENTRY3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY3
 *
 */ 
class ZC_NOTIFY_STANDENTRY3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY3, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080610
ID_ZC_NOTIFY_STANDENTRY4 = 0x02ee
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081203)
ID_ZC_NOTIFY_STANDENTRY4 = 0x02ee
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY4 = 0x02ee
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080618
ID_ZC_NOTIFY_STANDENTRY4 = 0x02ee
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY4 = 0x02ee
#else
ID_ZC_NOTIFY_STANDENTRY4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY4
 *
 */ 
class ZC_NOTIFY_STANDENTRY4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY4, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_STANDENTRY5 = 0x07f9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091103)
ID_ZC_NOTIFY_STANDENTRY5 = 0x07f9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY5 = 0x07f9
#else
ID_ZC_NOTIFY_STANDENTRY5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY5
 *
 */ 
class ZC_NOTIFY_STANDENTRY5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY5, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_STANDENTRY7 = 0x0857
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20101123)
ID_ZC_NOTIFY_STANDENTRY7 = 0x0857
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY7 = 0x0857
#else
ID_ZC_NOTIFY_STANDENTRY7 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY7
 *
 */ 
class ZC_NOTIFY_STANDENTRY7 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY7(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY7, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY7() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_STANDENTRY8 = 0x0915
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120131)
ID_ZC_NOTIFY_STANDENTRY8 = 0x0915
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY8 = 0x0915
#else
ID_ZC_NOTIFY_STANDENTRY8 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY8
 *
 */ 
class ZC_NOTIFY_STANDENTRY8 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY8(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY8, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY8() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x007c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x007c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x007c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x007c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x007c
#else
ID_ZC_NOTIFY_STANDENTRY_NPC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STANDENTRY_NPC
 *
 */ 
class ZC_NOTIFY_STANDENTRY_NPC : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STANDENTRY_NPC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STANDENTRY_NPC, s)
	{}
	virtual ~ZC_NOTIFY_STANDENTRY_NPC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x00f2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x00f2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x00f2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x00f2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x00f2
#else
ID_ZC_NOTIFY_STOREITEM_COUNTINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_STOREITEM_COUNTINFO
 *
 */ 
class ZC_NOTIFY_STOREITEM_COUNTINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_STOREITEM_COUNTINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_STOREITEM_COUNTINFO, s)
	{}
	virtual ~ZC_NOTIFY_STOREITEM_COUNTINFO() {}

	void deliver(int16_t current_amount, int16_t max_amount);
	ByteBuffer &serialize();

/* Structure */
	int16_t _current_amount{ 0 };
	int16_t _max_amount{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_TIME = 0x007f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_TIME = 0x007f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_TIME = 0x007f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_TIME = 0x007f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_TIME = 0x007f
#else
ID_ZC_NOTIFY_TIME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_TIME
 *
 */ 
class ZC_NOTIFY_TIME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_TIME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_TIME, s)
	{}
	virtual ~ZC_NOTIFY_TIME() {}

	void deliver(); // invokes get_sys_time() internally, no arguments.
	ByteBuffer &serialize();

/* Structure */
	int32_t _timestamp{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131211)
ID_ZC_NOTIFY_UNREAD_RODEX = 0x09e7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131211)
ID_ZC_NOTIFY_UNREAD_RODEX = 0x09e7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UNREAD_RODEX = 0x09e7
#else
ID_ZC_NOTIFY_UNREAD_RODEX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_UNREAD_RODEX
 *
 */ 
class ZC_NOTIFY_UNREAD_RODEX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_UNREAD_RODEX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_UNREAD_RODEX, s)
	{}
	virtual ~ZC_NOTIFY_UNREAD_RODEX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_UPDATECHAR = 0x0076
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATECHAR = 0x0076
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATECHAR = 0x0076
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_UPDATECHAR = 0x0076
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATECHAR = 0x0076
#else
ID_ZC_NOTIFY_UPDATECHAR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_UPDATECHAR
 *
 */ 
class ZC_NOTIFY_UPDATECHAR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_UPDATECHAR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_UPDATECHAR, s)
	{}
	virtual ~ZC_NOTIFY_UPDATECHAR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0077
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0077
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0077
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0077
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0077
#else
ID_ZC_NOTIFY_UPDATEPLAYER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_UPDATEPLAYER
 *
 */ 
class ZC_NOTIFY_UPDATEPLAYER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_UPDATEPLAYER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_UPDATEPLAYER, s)
	{}
	virtual ~ZC_NOTIFY_UPDATEPLAYER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NOTIFY_VANISH = 0x0080
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_VANISH = 0x0080
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_VANISH = 0x0080
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NOTIFY_VANISH = 0x0080
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_VANISH = 0x0080
#else
ID_ZC_NOTIFY_VANISH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_VANISH
 *
 */ 
class ZC_NOTIFY_VANISH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_VANISH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_VANISH, s)
	{}
	virtual ~ZC_NOTIFY_VANISH() {}

	void deliver(int32_t guid, unit_viewport_notification_type type);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	/// type:
	///     0 = out of sight
	///     1 = died
	///     2 = logged out
	///     3 = teleport
	///     4 = trickdead
	int8_t _type{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041129
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0221
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041129)
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0221
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0221
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041129
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0221
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0221
#else
ID_ZC_NOTIFY_WEAPONITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NOTIFY_WEAPONITEMLIST
 *
 */ 
class ZC_NOTIFY_WEAPONITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NOTIFY_WEAPONITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NOTIFY_WEAPONITEMLIST, s)
	{}
	virtual ~ZC_NOTIFY_WEAPONITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NPCACK_ENABLE = 0x0093
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_ENABLE = 0x0093
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_ENABLE = 0x0093
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NPCACK_ENABLE = 0x0093
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_ENABLE = 0x0093
#else
ID_ZC_NPCACK_ENABLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPCACK_ENABLE
 *
 */ 
class ZC_NPCACK_ENABLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPCACK_ENABLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPCACK_ENABLE, s)
	{}
	virtual ~ZC_NPCACK_ENABLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NPCACK_MAPMOVE = 0x0091
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_MAPMOVE = 0x0091
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_MAPMOVE = 0x0091
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NPCACK_MAPMOVE = 0x0091
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_MAPMOVE = 0x0091
#else
ID_ZC_NPCACK_MAPMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPCACK_MAPMOVE
 *
 */ 
class ZC_NPCACK_MAPMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPCACK_MAPMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPCACK_MAPMOVE, s)
	{}
	virtual ~ZC_NPCACK_MAPMOVE() {}

	void deliver(std::string map_name, int16_t x, int16_t y);
	ByteBuffer &serialize();

/* Structure */
	char _map_name[MAP_NAME_LENGTH_EXT]{0};
	int16_t _x{0};
	int16_t _y{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NPCACK_SERVERMOVE = 0x0092
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NPCACK_SERVERMOVE = 0x0092
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_NPCACK_SERVERMOVE = 0x0ac7
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_NPCACK_SERVERMOVE = 0x0092
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_NPCACK_SERVERMOVE = 0x0ac7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NPCACK_SERVERMOVE = 0x0092
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPCACK_SERVERMOVE = 0x0ac7
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_NPCACK_SERVERMOVE = 0x0092
#else
ID_ZC_NPCACK_SERVERMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPCACK_SERVERMOVE
 *
 */ 
class ZC_NPCACK_SERVERMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPCACK_SERVERMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPCACK_SERVERMOVE, s)
	{}
	virtual ~ZC_NPCACK_SERVERMOVE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_NPCSPRITE_CHANGE = 0x01b0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_NPCSPRITE_CHANGE = 0x01b0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NPCSPRITE_CHANGE = 0x01b0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_NPCSPRITE_CHANGE = 0x01b0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPCSPRITE_CHANGE = 0x01b0
#else
ID_ZC_NPCSPRITE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPCSPRITE_CHANGE
 *
 */ 
class ZC_NPCSPRITE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPCSPRITE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPCSPRITE_CHANGE, s)
	{}
	virtual ~ZC_NPCSPRITE_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_BARTER_MARKET_ITEMINFO = 0x0b78
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_NPC_BARTER_MARKET_ITEMINFO = 0x0b78
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_BARTER_MARKET_ITEMINFO = 0x0b78
#else
ID_ZC_NPC_BARTER_MARKET_ITEMINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_BARTER_MARKET_ITEMINFO
 *
 */ 
class ZC_NPC_BARTER_MARKET_ITEMINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_BARTER_MARKET_ITEMINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_BARTER_MARKET_ITEMINFO, s)
	{}
	virtual ~ZC_NPC_BARTER_MARKET_ITEMINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_NPC_BARTER_OPEN = 0x0b0e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_NPC_BARTER_OPEN = 0x0b0e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_BARTER_OPEN = 0x0b0e
#else
ID_ZC_NPC_BARTER_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_BARTER_OPEN
 *
 */ 
class ZC_NPC_BARTER_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_BARTER_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_BARTER_OPEN, s)
	{}
	virtual ~ZC_NPC_BARTER_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070813
ID_ZC_NPC_CHAT = 0x02c1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070813)
ID_ZC_NPC_CHAT = 0x02c1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_CHAT = 0x02c1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070813
ID_ZC_NPC_CHAT = 0x02c1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_CHAT = 0x02c1
#else
ID_ZC_NPC_CHAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_CHAT
 *
 */ 
class ZC_NPC_CHAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_CHAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_CHAT, s)
	{}
	virtual ~ZC_NPC_CHAT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20200000
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b56
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b79
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20200000
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b56
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b79
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20200000
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b56
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0b79
#else
ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO
 *
 */ 
class ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO, s)
	{}
	virtual ~ZC_NPC_EXPANDED_BARTER_MARKET_ITEMINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20130911)
ID_ZC_NPC_MARKET_OPEN = 0x09d5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_MARKET_OPEN = 0x0b7a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20130911)
ID_ZC_NPC_MARKET_OPEN = 0x09d5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_NPC_MARKET_OPEN = 0x0b7a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_MARKET_OPEN = 0x09d5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200506)
ID_ZC_NPC_MARKET_OPEN = 0x0b7a
#else
ID_ZC_NPC_MARKET_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_MARKET_OPEN
 *
 */ 
class ZC_NPC_MARKET_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_MARKET_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_MARKET_OPEN, s)
	{}
	virtual ~ZC_NPC_MARKET_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20130911
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x09d7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x0b4e
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20130911
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x09d7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x0b4e
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x09d7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x0b4e
#else
ID_ZC_NPC_MARKET_PURCHASE_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_MARKET_PURCHASE_RESULT
 *
 */ 
class ZC_NPC_MARKET_PURCHASE_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_MARKET_PURCHASE_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_MARKET_PURCHASE_RESULT, s)
	{}
	virtual ~ZC_NPC_MARKET_PURCHASE_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060927
ID_ZC_NPC_SHOWEFST_UPDATE = 0x028a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060927)
ID_ZC_NPC_SHOWEFST_UPDATE = 0x028a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_SHOWEFST_UPDATE = 0x028a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060927
ID_ZC_NPC_SHOWEFST_UPDATE = 0x028a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPC_SHOWEFST_UPDATE = 0x028a
#else
ID_ZC_NPC_SHOWEFST_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPC_SHOWEFST_UPDATE
 *
 */ 
class ZC_NPC_SHOWEFST_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPC_SHOWEFST_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPC_SHOWEFST_UPDATE, s)
	{}
	virtual ~ZC_NPC_SHOWEFST_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130814)
ID_ZC_NPROTECTGAMEGUARDCSAUTH = 0x09cf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130814)
ID_ZC_NPROTECTGAMEGUARDCSAUTH = 0x09cf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_NPROTECTGAMEGUARDCSAUTH = 0x09cf
#else
ID_ZC_NPROTECTGAMEGUARDCSAUTH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_NPROTECTGAMEGUARDCSAUTH
 *
 */ 
class ZC_NPROTECTGAMEGUARDCSAUTH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_NPROTECTGAMEGUARDCSAUTH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_NPROTECTGAMEGUARDCSAUTH, s)
	{}
	virtual ~ZC_NPROTECTGAMEGUARDCSAUTH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160727)
ID_ZC_OFFLINE_STORE_ITEMS = 0x0a91
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160727)
ID_ZC_OFFLINE_STORE_ITEMS = 0x0a91
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OFFLINE_STORE_ITEMS = 0x0a91
#else
ID_ZC_OFFLINE_STORE_ITEMS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OFFLINE_STORE_ITEMS
 *
 */ 
class ZC_OFFLINE_STORE_ITEMS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OFFLINE_STORE_ITEMS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OFFLINE_STORE_ITEMS, s)
	{}
	virtual ~ZC_OFFLINE_STORE_ITEMS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160629)
ID_ZC_OFFLINE_STORE_OWNER_ITEMS = 0x0a8d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160629)
ID_ZC_OFFLINE_STORE_OWNER_ITEMS = 0x0a8d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OFFLINE_STORE_OWNER_ITEMS = 0x0a8d
#else
ID_ZC_OFFLINE_STORE_OWNER_ITEMS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OFFLINE_STORE_OWNER_ITEMS
 *
 */ 
class ZC_OFFLINE_STORE_OWNER_ITEMS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OFFLINE_STORE_OWNER_ITEMS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OFFLINE_STORE_OWNER_ITEMS, s)
	{}
	virtual ~ZC_OFFLINE_STORE_OWNER_ITEMS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160706)
ID_ZC_OFFLINE_STORE_OWNER_ITEMS_READY = 0x0a7e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160706)
ID_ZC_OFFLINE_STORE_OWNER_ITEMS_READY = 0x0a7e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OFFLINE_STORE_OWNER_ITEMS_READY = 0x0a7e
#else
ID_ZC_OFFLINE_STORE_OWNER_ITEMS_READY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OFFLINE_STORE_OWNER_ITEMS_READY
 *
 */ 
class ZC_OFFLINE_STORE_OWNER_ITEMS_READY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OFFLINE_STORE_OWNER_ITEMS_READY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OFFLINE_STORE_OWNER_ITEMS_READY, s)
	{}
	virtual ~ZC_OFFLINE_STORE_OWNER_ITEMS_READY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160629)
ID_ZC_OFFLINE_STORE_VANISH = 0x0a8a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20160629)
ID_ZC_OFFLINE_STORE_VANISH = 0x0a8a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OFFLINE_STORE_VANISH = 0x0a8a
#else
ID_ZC_OFFLINE_STORE_VANISH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OFFLINE_STORE_VANISH
 *
 */ 
class ZC_OFFLINE_STORE_VANISH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OFFLINE_STORE_VANISH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OFFLINE_STORE_VANISH, s)
	{}
	virtual ~ZC_OFFLINE_STORE_VANISH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181121)
ID_ZC_OFFLINE_STORE_VISIBLE = 0x0b05
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_OFFLINE_STORE_VISIBLE = 0x0b05
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20181114)
ID_ZC_OFFLINE_STORE_VISIBLE = 0x0b05
#else
ID_ZC_OFFLINE_STORE_VISIBLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OFFLINE_STORE_VISIBLE
 *
 */ 
class ZC_OFFLINE_STORE_VISIBLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OFFLINE_STORE_VISIBLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OFFLINE_STORE_VISIBLE, s)
	{}
	virtual ~ZC_OFFLINE_STORE_VISIBLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_OPENSTORE = 0x012d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_OPENSTORE = 0x012d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_OPENSTORE = 0x012d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_OPENSTORE = 0x012d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPENSTORE = 0x012d
#else
ID_ZC_OPENSTORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPENSTORE
 *
 */ 
class ZC_OPENSTORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPENSTORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPENSTORE, s)
	{}
	virtual ~ZC_OPENSTORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_OPEN_BARGAIN_SALE_TOOL = 0x09b5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130417)
ID_ZC_OPEN_BARGAIN_SALE_TOOL = 0x09b5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_BARGAIN_SALE_TOOL = 0x09b5
#else
ID_ZC_OPEN_BARGAIN_SALE_TOOL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_BARGAIN_SALE_TOOL
 *
 */ 
class ZC_OPEN_BARGAIN_SALE_TOOL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_BARGAIN_SALE_TOOL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_BARGAIN_SALE_TOOL, s)
	{}
	virtual ~ZC_OPEN_BARGAIN_SALE_TOOL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100303)
ID_ZC_OPEN_BUYING_STORE = 0x0810
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100303)
ID_ZC_OPEN_BUYING_STORE = 0x0810
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_BUYING_STORE = 0x0810
#else
ID_ZC_OPEN_BUYING_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_BUYING_STORE
 *
 */ 
class ZC_OPEN_BUYING_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_BUYING_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_BUYING_STORE, s)
	{}
	virtual ~ZC_OPEN_BUYING_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_OPEN_EDITDLG = 0x0142
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLG = 0x0142
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLG = 0x0142
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_OPEN_EDITDLG = 0x0142
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLG = 0x0142
#else
ID_ZC_OPEN_EDITDLG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_EDITDLG
 *
 */ 
class ZC_OPEN_EDITDLG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_EDITDLG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_EDITDLG, s)
	{}
	virtual ~ZC_OPEN_EDITDLG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_OPEN_EDITDLGSTR = 0x01d4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLGSTR = 0x01d4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLGSTR = 0x01d4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_OPEN_EDITDLGSTR = 0x01d4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_EDITDLGSTR = 0x01d4
#else
ID_ZC_OPEN_EDITDLGSTR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_EDITDLGSTR
 *
 */ 
class ZC_OPEN_EDITDLGSTR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_EDITDLGSTR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_EDITDLGSTR, s)
	{}
	virtual ~ZC_OPEN_EDITDLGSTR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20200916)
ID_ZC_OPEN_REFORM_UI = 0x0b8f
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_OPEN_REFORM_UI = 0x0b8f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_OPEN_REFORM_UI = 0x0b8f
#else
ID_ZC_OPEN_REFORM_UI = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_REFORM_UI
 *
 */ 
class ZC_OPEN_REFORM_UI : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_REFORM_UI(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_REFORM_UI, s)
	{}
	virtual ~ZC_OPEN_REFORM_UI() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_OPEN_RODEX_THROUGH_NPC_ONLY = 0x0a32
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_OPEN_RODEX_THROUGH_NPC_ONLY = 0x0a32
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_RODEX_THROUGH_NPC_ONLY = 0x0a32
#else
ID_ZC_OPEN_RODEX_THROUGH_NPC_ONLY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_RODEX_THROUGH_NPC_ONLY
 *
 */ 
class ZC_OPEN_RODEX_THROUGH_NPC_ONLY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_RODEX_THROUGH_NPC_ONLY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_RODEX_THROUGH_NPC_ONLY, s)
	{}
	virtual ~ZC_OPEN_RODEX_THROUGH_NPC_ONLY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100701)
ID_ZC_OPEN_SEARCH_STORE_INFO = 0x083a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100701)
ID_ZC_OPEN_SEARCH_STORE_INFO = 0x083a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OPEN_SEARCH_STORE_INFO = 0x083a
#else
ID_ZC_OPEN_SEARCH_STORE_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_SEARCH_STORE_INFO
 *
 */ 
class ZC_OPEN_SEARCH_STORE_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_SEARCH_STORE_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_SEARCH_STORE_INFO, s)
	{}
	virtual ~ZC_OPEN_SEARCH_STORE_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20150128
ID_ZC_OPEN_UI = 0x0a38
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171115)
ID_ZC_OPEN_UI = 0x0ae2
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20150128
ID_ZC_OPEN_UI = 0x0a38
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171115)
ID_ZC_OPEN_UI = 0x0ae2
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_OPEN_UI = 0x0a38
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20171109)
ID_ZC_OPEN_UI = 0x0ae2
#else
ID_ZC_OPEN_UI = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OPEN_UI
 *
 */ 
class ZC_OPEN_UI : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OPEN_UI(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OPEN_UI, s)
	{}
	virtual ~ZC_OPEN_UI() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_OTHER_GUILD_LIST = 0x0164
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_OTHER_GUILD_LIST = 0x0164
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_OTHER_GUILD_LIST = 0x0164
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_OTHER_GUILD_LIST = 0x0164
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OTHER_GUILD_LIST = 0x0164
#else
ID_ZC_OTHER_GUILD_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OTHER_GUILD_LIST
 *
 */ 
class ZC_OTHER_GUILD_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OTHER_GUILD_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OTHER_GUILD_LIST, s)
	{}
	virtual ~ZC_OTHER_GUILD_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170920)
ID_ZC_OVERWEIGHT_PERCENT = 0x0ade
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170920)
ID_ZC_OVERWEIGHT_PERCENT = 0x0ade
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_OVERWEIGHT_PERCENT = 0x0ade
#else
ID_ZC_OVERWEIGHT_PERCENT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_OVERWEIGHT_PERCENT
 *
 */ 
class ZC_OVERWEIGHT_PERCENT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_OVERWEIGHT_PERCENT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_OVERWEIGHT_PERCENT, s)
	{}
	virtual ~ZC_OVERWEIGHT_PERCENT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091228)
ID_ZC_PARTY_BOOKING_ACK_DELETE = 0x0807
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091229)
ID_ZC_PARTY_BOOKING_ACK_DELETE = 0x0807
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_ACK_DELETE = 0x0807
#else
ID_ZC_PARTY_BOOKING_ACK_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_ACK_DELETE
 *
 */ 
class ZC_PARTY_BOOKING_ACK_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_ACK_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_ACK_DELETE, s)
	{}
	virtual ~ZC_PARTY_BOOKING_ACK_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091222)
ID_ZC_PARTY_BOOKING_ACK_REGISTER = 0x0803
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091222)
ID_ZC_PARTY_BOOKING_ACK_REGISTER = 0x0803
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_ACK_REGISTER = 0x0803
#else
ID_ZC_PARTY_BOOKING_ACK_REGISTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_ACK_REGISTER
 *
 */ 
class ZC_PARTY_BOOKING_ACK_REGISTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_ACK_REGISTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_ACK_REGISTER, s)
	{}
	virtual ~ZC_PARTY_BOOKING_ACK_REGISTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091222)
ID_ZC_PARTY_BOOKING_ACK_SEARCH = 0x0805
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091222)
ID_ZC_PARTY_BOOKING_ACK_SEARCH = 0x0805
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_ACK_SEARCH = 0x0805
#else
ID_ZC_PARTY_BOOKING_ACK_SEARCH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_ACK_SEARCH
 *
 */ 
class ZC_PARTY_BOOKING_ACK_SEARCH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_ACK_SEARCH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_ACK_SEARCH, s)
	{}
	virtual ~ZC_PARTY_BOOKING_ACK_SEARCH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091228)
ID_ZC_PARTY_BOOKING_NOTIFY_DELETE = 0x080b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091229)
ID_ZC_PARTY_BOOKING_NOTIFY_DELETE = 0x080b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_NOTIFY_DELETE = 0x080b
#else
ID_ZC_PARTY_BOOKING_NOTIFY_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_NOTIFY_DELETE
 *
 */ 
class ZC_PARTY_BOOKING_NOTIFY_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_NOTIFY_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_NOTIFY_DELETE, s)
	{}
	virtual ~ZC_PARTY_BOOKING_NOTIFY_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091228)
ID_ZC_PARTY_BOOKING_NOTIFY_INSERT = 0x0809
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091229)
ID_ZC_PARTY_BOOKING_NOTIFY_INSERT = 0x0809
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_NOTIFY_INSERT = 0x0809
#else
ID_ZC_PARTY_BOOKING_NOTIFY_INSERT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_NOTIFY_INSERT
 *
 */ 
class ZC_PARTY_BOOKING_NOTIFY_INSERT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_NOTIFY_INSERT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_NOTIFY_INSERT, s)
	{}
	virtual ~ZC_PARTY_BOOKING_NOTIFY_INSERT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091228)
ID_ZC_PARTY_BOOKING_NOTIFY_UPDATE = 0x080a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091229)
ID_ZC_PARTY_BOOKING_NOTIFY_UPDATE = 0x080a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_BOOKING_NOTIFY_UPDATE = 0x080a
#else
ID_ZC_PARTY_BOOKING_NOTIFY_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_BOOKING_NOTIFY_UPDATE
 *
 */ 
class ZC_PARTY_BOOKING_NOTIFY_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_BOOKING_NOTIFY_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_BOOKING_NOTIFY_UPDATE, s)
	{}
	virtual ~ZC_PARTY_BOOKING_NOTIFY_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_CONFIG = 0x02c9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070821)
ID_ZC_PARTY_CONFIG = 0x02c9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_CONFIG = 0x02c9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_CONFIG = 0x02c9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_CONFIG = 0x02c9
#else
ID_ZC_PARTY_CONFIG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_CONFIG
 *
 */ 
class ZC_PARTY_CONFIG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_CONFIG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_CONFIG, s)
	{}
	virtual ~ZC_PARTY_CONFIG() {}

	void deliver(zc_party_config_type config);
	ByteBuffer &serialize();

/* Structure */
	int8_t _config{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_JOIN_REQ = 0x02c6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070821)
ID_ZC_PARTY_JOIN_REQ = 0x02c6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_JOIN_REQ = 0x02c6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_JOIN_REQ = 0x02c6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_JOIN_REQ = 0x02c6
#else
ID_ZC_PARTY_JOIN_REQ = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_JOIN_REQ
 *
 */ 
class ZC_PARTY_JOIN_REQ : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_JOIN_REQ(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_JOIN_REQ, s)
	{}
	virtual ~ZC_PARTY_JOIN_REQ() {}

	void deliver(int party_id, std::string party_name);
	ByteBuffer &serialize();

/* Structure */
	int _party_id{ 0 };
	char _party_name[MAX_PARTY_NAME_LENGTH]{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_JOIN_REQ_ACK = 0x02c5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070821)
ID_ZC_PARTY_JOIN_REQ_ACK = 0x02c5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_JOIN_REQ_ACK = 0x02c5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070821
ID_ZC_PARTY_JOIN_REQ_ACK = 0x02c5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_JOIN_REQ_ACK = 0x02c5
#else
ID_ZC_PARTY_JOIN_REQ_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_JOIN_REQ_ACK
 *
 */ 
class ZC_PARTY_JOIN_REQ_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_JOIN_REQ_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_JOIN_REQ_ACK, s)
	{}
	virtual ~ZC_PARTY_JOIN_REQ_ACK() {}

	void deliver(std::string name, zcparty_joinreqack_result_type result);
	ByteBuffer &serialize();

/* Structure */
	char _name[MAX_UNIT_NAME_LENGTH]{ 0 };
	int _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170215)
ID_ZC_PARTY_MEMBER_JOB_LEVEL = 0x0abd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170215)
ID_ZC_PARTY_MEMBER_JOB_LEVEL = 0x0abd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_MEMBER_JOB_LEVEL = 0x0abd
#else
ID_ZC_PARTY_MEMBER_JOB_LEVEL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_MEMBER_JOB_LEVEL
 *
 */ 
class ZC_PARTY_MEMBER_JOB_LEVEL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_MEMBER_JOB_LEVEL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_MEMBER_JOB_LEVEL, s)
	{}
	virtual ~ZC_PARTY_MEMBER_JOB_LEVEL() {}

	void deliver(int account_id, int job_id, int level);
	ByteBuffer &serialize();

/* Structure */
	int _account_id{ 0 };
	int16_t _job_id{ 0 };
	int16_t _level{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_ACK_DELETE = 0x08ea
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_ACK_DELETE = 0x08ea
#else
ID_ZC_PARTY_RECRUIT_ACK_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_ACK_DELETE
 *
 */ 
class ZC_PARTY_RECRUIT_ACK_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_ACK_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_ACK_DELETE, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_ACK_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_ACK_REGISTER = 0x08e6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_ACK_REGISTER = 0x08e6
#else
ID_ZC_PARTY_RECRUIT_ACK_REGISTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_ACK_REGISTER
 *
 */ 
class ZC_PARTY_RECRUIT_ACK_REGISTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_ACK_REGISTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_ACK_REGISTER, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_ACK_REGISTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111207
ID_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST = 0x090b
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111207
ID_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST = 0x090b
#else
ID_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST
 *
 */ 
class ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_ADD_FILTERLINGLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111122
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER = 0x0909
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111122
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER = 0x0909
#else
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER
 *
 */ 
class ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120207)
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x096c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20190000 \
	|| (PACKET_VERSION >= 20180000 && PACKET_VERSION < 20190000) \
	|| PACKET_VERSION >= 20170823 \
	|| PACKET_VERSION >= 20170816 \
	|| PACKET_VERSION >= 20170201 \
	|| PACKET_VERSION >= 20170125 \
	|| PACKET_VERSION >= 20170104 \
	|| PACKET_VERSION >= 20161228 \
	|| PACKET_VERSION >= 20160913 \
	|| PACKET_VERSION >= 20160907 \
	|| PACKET_VERSION >= 20160817 \
	|| PACKET_VERSION >= 20160810 \
	|| PACKET_VERSION >= 20160727 \
	|| PACKET_VERSION >= 20160720 \
	|| PACKET_VERSION >= 20160713 \
	|| PACKET_VERSION >= 20160629 \
	|| PACKET_VERSION >= 20160622 \
	|| PACKET_VERSION >= 20160106 \
	|| PACKET_VERSION >= 20151021 \
	|| PACKET_VERSION >= 20151014 \
	|| PACKET_VERSION >= 20150527 \
	|| PACKET_VERSION >= 20150520 \
	|| PACKET_VERSION >= 20150408 \
	|| PACKET_VERSION >= 20150401 \
	|| PACKET_VERSION >= 20150318 \
	|| PACKET_VERSION >= 20150311 \
	|| PACKET_VERSION >= 20150107 \
	|| PACKET_VERSION >= 20141210 \
	|| PACKET_VERSION >= 20141203 \
	|| PACKET_VERSION >= 20141008 \
	|| PACKET_VERSION >= 20141001 \
	|| PACKET_VERSION >= 20140416 \
	|| PACKET_VERSION >= 20140409 \
	|| PACKET_VERSION >= 20140319 \
	|| PACKET_VERSION >= 20140312 \
	|| PACKET_VERSION >= 20140108 \
	|| PACKET_VERSION >= 20131120 \
	|| PACKET_VERSION >= 20131113 \
	|| PACKET_VERSION >= 20131016 \
	|| PACKET_VERSION >= 20131008 \
	|| PACKET_VERSION >= 20130925 \
	|| PACKET_VERSION >= 20130917 \
	|| PACKET_VERSION >= 20130103 \
	|| PACKET_VERSION >= 20121227 \
	|| PACKET_VERSION >= 20121218 \
	|| PACKET_VERSION >= 20121212 \
	|| PACKET_VERSION >= 20121205 \
	|| PACKET_VERSION >= 20121128 \
	|| PACKET_VERSION >= 20120801 \
	|| PACKET_VERSION >= 20120724 \
	|| PACKET_VERSION >= 20120417 \
	|| PACKET_VERSION >= 20120410)
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x091c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120207)
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x096c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20190000 \
	|| (PACKET_VERSION >= 20180000 && PACKET_VERSION < 20190000) \
	|| PACKET_VERSION >= 20170823 \
	|| PACKET_VERSION >= 20170816 \
	|| PACKET_VERSION >= 20170201 \
	|| PACKET_VERSION >= 20170125 \
	|| PACKET_VERSION >= 20170104 \
	|| PACKET_VERSION >= 20161228 \
	|| PACKET_VERSION >= 20160913 \
	|| PACKET_VERSION >= 20160907 \
	|| PACKET_VERSION >= 20160817 \
	|| PACKET_VERSION >= 20160810 \
	|| PACKET_VERSION >= 20160727 \
	|| PACKET_VERSION >= 20160720 \
	|| PACKET_VERSION >= 20160713 \
	|| PACKET_VERSION >= 20160629 \
	|| PACKET_VERSION >= 20160622 \
	|| PACKET_VERSION >= 20160106 \
	|| PACKET_VERSION >= 20151021 \
	|| PACKET_VERSION >= 20151014 \
	|| PACKET_VERSION >= 20150527 \
	|| PACKET_VERSION >= 20150520 \
	|| PACKET_VERSION >= 20150408 \
	|| PACKET_VERSION >= 20150401 \
	|| PACKET_VERSION >= 20150318 \
	|| PACKET_VERSION >= 20150311 \
	|| PACKET_VERSION >= 20150107 \
	|| PACKET_VERSION >= 20141210 \
	|| PACKET_VERSION >= 20141203 \
	|| PACKET_VERSION >= 20141008 \
	|| PACKET_VERSION >= 20141001 \
	|| PACKET_VERSION >= 20140416 \
	|| PACKET_VERSION >= 20140409 \
	|| PACKET_VERSION >= 20140319 \
	|| PACKET_VERSION >= 20140312 \
	|| PACKET_VERSION >= 20140108 \
	|| PACKET_VERSION >= 20131120 \
	|| PACKET_VERSION >= 20131113 \
	|| PACKET_VERSION >= 20131016 \
	|| PACKET_VERSION >= 20131008 \
	|| PACKET_VERSION >= 20130925 \
	|| PACKET_VERSION >= 20130917 \
	|| PACKET_VERSION >= 20130103 \
	|| PACKET_VERSION >= 20121227 \
	|| PACKET_VERSION >= 20121218 \
	|| PACKET_VERSION >= 20121212 \
	|| PACKET_VERSION >= 20121205 \
	|| PACKET_VERSION >= 20121128 \
	|| PACKET_VERSION >= 20120801 \
	|| PACKET_VERSION >= 20120724 \
	|| PACKET_VERSION >= 20120417 \
	|| PACKET_VERSION >= 20120410)
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x091c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x096c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20190000 \
	|| PACKET_VERSION == 20180131 \
	|| PACKET_VERSION == 20180117 \
	|| PACKET_VERSION == 20180103 \
	|| PACKET_VERSION >= 20171227 \
	|| PACKET_VERSION >= 20171121 \
	|| PACKET_VERSION >= 20171115 \
	|| PACKET_VERSION >= 20171018)
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x091c
#else
ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM
 *
 */ 
class ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_CANCEL_VOLUNTEER_TO_PM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_FAILED_RECALL = 0x08f8
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_FAILED_RECALL = 0x08f8
#else
ID_ZC_PARTY_RECRUIT_FAILED_RECALL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_FAILED_RECALL
 *
 */ 
class ZC_PARTY_RECRUIT_FAILED_RECALL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_FAILED_RECALL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_FAILED_RECALL, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_FAILED_RECALL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_DELETE = 0x08ee
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_DELETE = 0x08ee
#else
ID_ZC_PARTY_RECRUIT_NOTIFY_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_NOTIFY_DELETE
 *
 */ 
class ZC_PARTY_RECRUIT_NOTIFY_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_NOTIFY_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_NOTIFY_DELETE, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_NOTIFY_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_INSERT = 0x08ec
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_INSERT = 0x08ec
#else
ID_ZC_PARTY_RECRUIT_NOTIFY_INSERT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_NOTIFY_INSERT
 *
 */ 
class ZC_PARTY_RECRUIT_NOTIFY_INSERT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_NOTIFY_INSERT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_NOTIFY_INSERT, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_NOTIFY_INSERT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_UPDATE = 0x08ed
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111025
ID_ZC_PARTY_RECRUIT_NOTIFY_UPDATE = 0x08ed
#else
ID_ZC_PARTY_RECRUIT_NOTIFY_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_NOTIFY_UPDATE
 *
 */ 
class ZC_PARTY_RECRUIT_NOTIFY_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_NOTIFY_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_NOTIFY_UPDATE, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_NOTIFY_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_RECALL_COST = 0x08f6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_RECALL_COST = 0x08f6
#else
ID_ZC_PARTY_RECRUIT_RECALL_COST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_RECALL_COST
 *
 */ 
class ZC_PARTY_RECRUIT_RECALL_COST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_RECALL_COST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_RECALL_COST, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_RECALL_COST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER = 0x08fa
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111108
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER = 0x08fa
#else
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER
 *
 */ 
class ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM = 0x0971
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM = 0x0971
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM = 0x0971
#else
ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM
 *
 */ 
class ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_REFUSE_VOLUNTEER_TO_PM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111207
ID_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST = 0x090c
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111207
ID_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST = 0x090c
#else
ID_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST
 *
 */ 
class ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_SUB_FILTERLINGLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20111101
ID_ZC_PARTY_RECRUIT_VOLUNTEER_INFO = 0x08f2
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20111101
ID_ZC_PARTY_RECRUIT_VOLUNTEER_INFO = 0x08f2
#else
ID_ZC_PARTY_RECRUIT_VOLUNTEER_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PARTY_RECRUIT_VOLUNTEER_INFO
 *
 */ 
class ZC_PARTY_RECRUIT_VOLUNTEER_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PARTY_RECRUIT_VOLUNTEER_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PARTY_RECRUIT_VOLUNTEER_INFO, s)
	{}
	virtual ~ZC_PARTY_RECRUIT_VOLUNTEER_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PAR_CHANGE = 0x00b0
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PAR_CHANGE = 0x00b0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170405)
ID_ZC_PAR_CHANGE = 0x0acb
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_PAR_CHANGE = 0x00b0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170405)
ID_ZC_PAR_CHANGE = 0x0acb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PAR_CHANGE = 0x00b0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PAR_CHANGE = 0x0acb
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_PAR_CHANGE = 0x00b0
#else
ID_ZC_PAR_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PAR_CHANGE
 *
 */ 
class ZC_PAR_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PAR_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PAR_CHANGE, s)
	{}
	virtual ~ZC_PAR_CHANGE() {}

	void deliver(status_point_type type, int32_t value);
	ByteBuffer &serialize();

/* Structure */
	status_point_type _type{STATUS_POINT_INVALID};
	int32_t _value{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PAR_CHANGE_USER = 0x01ab
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PAR_CHANGE_USER = 0x01ab
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PAR_CHANGE_USER = 0x01ab
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PAR_CHANGE_USER = 0x01ab
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PAR_CHANGE_USER = 0x01ab
#else
ID_ZC_PAR_CHANGE_USER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PAR_CHANGE_USER
 *
 */ 
class ZC_PAR_CHANGE_USER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PAR_CHANGE_USER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PAR_CHANGE_USER, s)
	{}
	virtual ~ZC_PAR_CHANGE_USER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060626
ID_ZC_PCBANG_EFFECT = 0x027b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060626)
ID_ZC_PCBANG_EFFECT = 0x027b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PCBANG_EFFECT = 0x027b
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060626
ID_ZC_PCBANG_EFFECT = 0x027b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PCBANG_EFFECT = 0x027b
#else
ID_ZC_PCBANG_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PCBANG_EFFECT
 *
 */ 
class ZC_PCBANG_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PCBANG_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PCBANG_EFFECT, s)
	{}
	virtual ~ZC_PCBANG_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070423
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0287
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070423)
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0287
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0287
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0287
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0287
#else
ID_ZC_PC_CASH_POINT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_CASH_POINT_ITEMLIST
 *
 */ 
class ZC_PC_CASH_POINT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_CASH_POINT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_CASH_POINT_ITEMLIST, s)
	{}
	virtual ~ZC_PC_CASH_POINT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070711
ID_ZC_PC_CASH_POINT_UPDATE = 0x0289
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070711)
ID_ZC_PC_CASH_POINT_UPDATE = 0x0289
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_CASH_POINT_UPDATE = 0x0289
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_PC_CASH_POINT_UPDATE = 0x0289
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_CASH_POINT_UPDATE = 0x0289
#else
ID_ZC_PC_CASH_POINT_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_CASH_POINT_UPDATE
 *
 */ 
class ZC_PC_CASH_POINT_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_CASH_POINT_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_CASH_POINT_UPDATE, s)
	{}
	virtual ~ZC_PC_CASH_POINT_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_PURCHASE_ITEMLIST = 0x00c6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST = 0x00c6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST = 0x00c6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_ITEMLIST = 0x00c6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST = 0x00c6
#else
ID_ZC_PC_PURCHASE_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_ITEMLIST
 *
 */ 
class ZC_PC_PURCHASE_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_ITEMLIST, s)
	{}
	virtual ~ZC_PC_PURCHASE_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0133
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0133
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0133
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0133
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0133
#else
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_ITEMLIST_FROMMC
 *
 */ 
class ZC_PC_PURCHASE_ITEMLIST_FROMMC : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_ITEMLIST_FROMMC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC, s)
	{}
	virtual ~ZC_PC_PURCHASE_ITEMLIST_FROMMC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091215)
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC2 = 0x0800
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091215)
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC2 = 0x0800
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC2 = 0x0800
#else
ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_ITEMLIST_FROMMC2
 *
 */ 
class ZC_PC_PURCHASE_ITEMLIST_FROMMC2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_ITEMLIST_FROMMC2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_ITEMLIST_FROMMC2, s)
	{}
	virtual ~ZC_PC_PURCHASE_ITEMLIST_FROMMC2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0136
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0136
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0b40
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0136
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0b40
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0136
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0136
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0b40
#else
ID_ZC_PC_PURCHASE_MYITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_MYITEMLIST
 *
 */ 
class ZC_PC_PURCHASE_MYITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_MYITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_MYITEMLIST, s)
	{}
	virtual ~ZC_PC_PURCHASE_MYITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_PURCHASE_RESULT = 0x00ca
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT = 0x00ca
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT = 0x00ca
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_RESULT = 0x00ca
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT = 0x00ca
#else
ID_ZC_PC_PURCHASE_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_RESULT
 *
 */ 
class ZC_PC_PURCHASE_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_RESULT, s)
	{}
	virtual ~ZC_PC_PURCHASE_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0135
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0135
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0135
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0135
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0135
#else
ID_ZC_PC_PURCHASE_RESULT_FROMMC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_PURCHASE_RESULT_FROMMC
 *
 */ 
class ZC_PC_PURCHASE_RESULT_FROMMC : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_PURCHASE_RESULT_FROMMC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_PURCHASE_RESULT_FROMMC, s)
	{}
	virtual ~ZC_PC_PURCHASE_RESULT_FROMMC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_SELL_ITEMLIST = 0x00c7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_ITEMLIST = 0x00c7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_ITEMLIST = 0x00c7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_SELL_ITEMLIST = 0x00c7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_ITEMLIST = 0x00c7
#else
ID_ZC_PC_SELL_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_SELL_ITEMLIST
 *
 */ 
class ZC_PC_SELL_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_SELL_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_SELL_ITEMLIST, s)
	{}
	virtual ~ZC_PC_SELL_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PC_SELL_RESULT = 0x00cb
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_RESULT = 0x00cb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_RESULT = 0x00cb
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PC_SELL_RESULT = 0x00cb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PC_SELL_RESULT = 0x00cb
#else
ID_ZC_PC_SELL_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PC_SELL_RESULT
 *
 */ 
class ZC_PC_SELL_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PC_SELL_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PC_SELL_RESULT, s)
	{}
	virtual ~ZC_PC_SELL_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110627)
ID_ZC_PERSONAL_INFOMATION = 0x08cb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110628)
ID_ZC_PERSONAL_INFOMATION = 0x08cb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PERSONAL_INFOMATION = 0x08cb
#else
ID_ZC_PERSONAL_INFOMATION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PERSONAL_INFOMATION
 *
 */ 
class ZC_PERSONAL_INFOMATION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PERSONAL_INFOMATION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PERSONAL_INFOMATION, s)
	{}
	virtual ~ZC_PERSONAL_INFOMATION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120417)
ID_ZC_PERSONAL_INFOMATION2 = 0x097b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120417)
ID_ZC_PERSONAL_INFOMATION2 = 0x097b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PERSONAL_INFOMATION2 = 0x097b
#else
ID_ZC_PERSONAL_INFOMATION2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PERSONAL_INFOMATION2
 *
 */ 
class ZC_PERSONAL_INFOMATION2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PERSONAL_INFOMATION2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PERSONAL_INFOMATION2, s)
	{}
	virtual ~ZC_PERSONAL_INFOMATION2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120515)
ID_ZC_PERSONAL_INFOMATION_CHN = 0x0981
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120515)
ID_ZC_PERSONAL_INFOMATION_CHN = 0x0981
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PERSONAL_INFOMATION_CHN = 0x0981
#else
ID_ZC_PERSONAL_INFOMATION_CHN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PERSONAL_INFOMATION_CHN
 *
 */ 
class ZC_PERSONAL_INFOMATION_CHN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PERSONAL_INFOMATION_CHN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PERSONAL_INFOMATION_CHN, s)
	{}
	virtual ~ZC_PERSONAL_INFOMATION_CHN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PETEGG_LIST = 0x01a6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PETEGG_LIST = 0x01a6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PETEGG_LIST = 0x01a6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PETEGG_LIST = 0x01a6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PETEGG_LIST = 0x01a6
#else
ID_ZC_PETEGG_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PETEGG_LIST
 *
 */ 
class ZC_PETEGG_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PETEGG_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PETEGG_LIST, s)
	{}
	virtual ~ZC_PETEGG_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PET_ACT = 0x01aa
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PET_ACT = 0x01aa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PET_ACT = 0x01aa
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PET_ACT = 0x01aa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PET_ACT = 0x01aa
#else
ID_ZC_PET_ACT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PET_ACT
 *
 */ 
class ZC_PET_ACT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PET_ACT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PET_ACT, s)
	{}
	virtual ~ZC_PET_ACT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_PET_EVOLUTION_RESULT = 0x09fc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140122)
ID_ZC_PET_EVOLUTION_RESULT = 0x09fc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PET_EVOLUTION_RESULT = 0x09fc
#else
ID_ZC_PET_EVOLUTION_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PET_EVOLUTION_RESULT
 *
 */ 
class ZC_PET_EVOLUTION_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PET_EVOLUTION_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PET_EVOLUTION_RESULT, s)
	{}
	virtual ~ZC_PET_EVOLUTION_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190227)
ID_ZC_PING = 0x0b1d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190220)
ID_ZC_PING = 0x0b1d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190220)
ID_ZC_PING = 0x0b1d
#else
ID_ZC_PING = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PING
 *
 */ 
class ZC_PING : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PING(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PING, s)
	{}
	virtual ~ZC_PING() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_PLAY_NPC_BGM = 0x07fe
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091201)
ID_ZC_PLAY_NPC_BGM = 0x07fe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PLAY_NPC_BGM = 0x07fe
#else
ID_ZC_PLAY_NPC_BGM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PLAY_NPC_BGM
 *
 */ 
class ZC_PLAY_NPC_BGM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PLAY_NPC_BGM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PLAY_NPC_BGM, s)
	{}
	virtual ~ZC_PLAY_NPC_BGM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_POSITION_ID_NAME_INFO = 0x0166
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_ID_NAME_INFO = 0x0166
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_ID_NAME_INFO = 0x0166
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_POSITION_ID_NAME_INFO = 0x0166
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_ID_NAME_INFO = 0x0166
#else
ID_ZC_POSITION_ID_NAME_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_POSITION_ID_NAME_INFO
 *
 */ 
class ZC_POSITION_ID_NAME_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_POSITION_ID_NAME_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_POSITION_ID_NAME_INFO, s)
	{}
	virtual ~ZC_POSITION_ID_NAME_INFO() {}

	void deliver(std::vector<s_zc_position_id_name_info> info);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zc_position_id_name_info> _info;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_POSITION_INFO = 0x0160
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_INFO = 0x0160
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_INFO = 0x0160
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_POSITION_INFO = 0x0160
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_POSITION_INFO = 0x0160
#else
ID_ZC_POSITION_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_POSITION_INFO
 *
 */ 
class ZC_POSITION_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_POSITION_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_POSITION_INFO, s)
	{}
	virtual ~ZC_POSITION_INFO() {}

	void deliver(std::vector<s_zc_position_info> info);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	std::vector<s_zc_position_info> _info;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111227)
ID_ZC_PREMIUM_CAMPAIGN_INFO = 0x090d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111227)
ID_ZC_PREMIUM_CAMPAIGN_INFO = 0x090d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PREMIUM_CAMPAIGN_INFO = 0x090d
#else
ID_ZC_PREMIUM_CAMPAIGN_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PREMIUM_CAMPAIGN_INFO
 *
 */ 
class ZC_PREMIUM_CAMPAIGN_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PREMIUM_CAMPAIGN_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PREMIUM_CAMPAIGN_INFO, s)
	{}
	virtual ~ZC_PREMIUM_CAMPAIGN_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA = 0x0a6b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA = 0x0a6b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA = 0x0a6b
#else
ID_ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA
 *
 */ 
class ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA, s)
	{}
	virtual ~ZC_PREVIEW_MACRO_DETECTOR_CAPTCHA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_PRIVATE_AIRSHIP_RESPONSE = 0x0a4a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151118)
ID_ZC_PRIVATE_AIRSHIP_RESPONSE = 0x0a4a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PRIVATE_AIRSHIP_RESPONSE = 0x0a4a
#else
ID_ZC_PRIVATE_AIRSHIP_RESPONSE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PRIVATE_AIRSHIP_RESPONSE
 *
 */ 
class ZC_PRIVATE_AIRSHIP_RESPONSE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PRIVATE_AIRSHIP_RESPONSE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PRIVATE_AIRSHIP_RESPONSE, s)
	{}
	virtual ~ZC_PRIVATE_AIRSHIP_RESPONSE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120404)
ID_ZC_PRNPC_STATE = 0x096b
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20190000 \
	|| (PACKET_VERSION >= 20180000 && PACKET_VERSION < 20190000) \
	|| PACKET_VERSION >= 20171227 \
	|| PACKET_VERSION >= 20171220 \
	|| PACKET_VERSION >= 20171108 \
	|| PACKET_VERSION >= 20171101 \
	|| PACKET_VERSION >= 20170920 \
	|| PACKET_VERSION >= 20170913 \
	|| PACKET_VERSION >= 20170726 \
	|| PACKET_VERSION >= 20170719 \
	|| PACKET_VERSION >= 20170621 \
	|| PACKET_VERSION >= 20170614 \
	|| PACKET_VERSION >= 20170524 \
	|| PACKET_VERSION >= 20170517 \
	|| PACKET_VERSION >= 20170426 \
	|| PACKET_VERSION >= 20170419 \
	|| PACKET_VERSION >= 20170322 \
	|| PACKET_VERSION >= 20170315 \
	|| PACKET_VERSION >= 20170201 \
	|| PACKET_VERSION >= 20170125 \
	|| PACKET_VERSION >= 20170118 \
	|| PACKET_VERSION >= 20170111 \
	|| PACKET_VERSION >= 20170104 \
	|| PACKET_VERSION >= 20161109 \
	|| PACKET_VERSION >= 20161102 \
	|| PACKET_VERSION >= 20161026 \
	|| PACKET_VERSION >= 20160907 \
	|| PACKET_VERSION >= 20160831 \
	|| PACKET_VERSION >= 20160817 \
	|| PACKET_VERSION >= 20160803 \
	|| PACKET_VERSION >= 20160713 \
	|| PACKET_VERSION >= 20160706 \
	|| PACKET_VERSION >= 20160330 \
	|| PACKET_VERSION >= 20160323 \
	|| PACKET_VERSION >= 20160120 \
	|| PACKET_VERSION >= 20160113 \
	|| PACKET_VERSION >= 20160106 \
	|| PACKET_VERSION >= 20151230 \
	|| PACKET_VERSION >= 20151223 \
	|| PACKET_VERSION >= 20150610 \
	|| PACKET_VERSION >= 20150603 \
	|| PACKET_VERSION >= 20150415 \
	|| PACKET_VERSION >= 20150408 \
	|| PACKET_VERSION >= 20150401 \
	|| PACKET_VERSION >= 20150107 \
	|| PACKET_VERSION >= 20140219 \
	|| PACKET_VERSION >= 20140212 \
	|| PACKET_VERSION >= 20140108 \
	|| PACKET_VERSION >= 20130306 \
	|| PACKET_VERSION >= 20130227 \
	|| PACKET_VERSION >= 20130115 \
	|| PACKET_VERSION >= 20130109 \
	|| PACKET_VERSION >= 20130103 \
	|| PACKET_VERSION >= 20121205 \
	|| PACKET_VERSION >= 20121128 \
	|| PACKET_VERSION >= 20120503 \
	|| PACKET_VERSION >= 20120424 \
	|| PACKET_VERSION >= 20120328 \
	|| PACKET_VERSION >= 20120207)
ID_ZC_PRNPC_STATE = 0x091b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120404)
ID_ZC_PRNPC_STATE = 0x096b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20190000 \
	|| (PACKET_VERSION >= 20180000 && PACKET_VERSION < 20190000) \
	|| PACKET_VERSION >= 20171227 \
	|| PACKET_VERSION >= 20171220 \
	|| PACKET_VERSION >= 20171108 \
	|| PACKET_VERSION >= 20171101 \
	|| PACKET_VERSION >= 20170920 \
	|| PACKET_VERSION >= 20170913 \
	|| PACKET_VERSION >= 20170726 \
	|| PACKET_VERSION >= 20170719 \
	|| PACKET_VERSION >= 20170621 \
	|| PACKET_VERSION >= 20170614 \
	|| PACKET_VERSION >= 20170524 \
	|| PACKET_VERSION >= 20170517 \
	|| PACKET_VERSION >= 20170426 \
	|| PACKET_VERSION >= 20170419 \
	|| PACKET_VERSION >= 20170322 \
	|| PACKET_VERSION >= 20170315 \
	|| PACKET_VERSION >= 20170201 \
	|| PACKET_VERSION >= 20170125 \
	|| PACKET_VERSION >= 20170118 \
	|| PACKET_VERSION >= 20170111 \
	|| PACKET_VERSION >= 20170104 \
	|| PACKET_VERSION >= 20161109 \
	|| PACKET_VERSION >= 20161102 \
	|| PACKET_VERSION >= 20161026 \
	|| PACKET_VERSION >= 20160907 \
	|| PACKET_VERSION >= 20160831 \
	|| PACKET_VERSION >= 20160817 \
	|| PACKET_VERSION >= 20160803 \
	|| PACKET_VERSION >= 20160713 \
	|| PACKET_VERSION >= 20160706 \
	|| PACKET_VERSION >= 20160330 \
	|| PACKET_VERSION >= 20160323 \
	|| PACKET_VERSION >= 20160120 \
	|| PACKET_VERSION >= 20160113 \
	|| PACKET_VERSION >= 20160106 \
	|| PACKET_VERSION >= 20151230 \
	|| PACKET_VERSION >= 20151223 \
	|| PACKET_VERSION >= 20150610 \
	|| PACKET_VERSION >= 20150603 \
	|| PACKET_VERSION >= 20150415 \
	|| PACKET_VERSION >= 20150408 \
	|| PACKET_VERSION >= 20150401 \
	|| PACKET_VERSION >= 20150107 \
	|| PACKET_VERSION >= 20140219 \
	|| PACKET_VERSION >= 20140212 \
	|| PACKET_VERSION >= 20140108 \
	|| PACKET_VERSION >= 20130306 \
	|| PACKET_VERSION >= 20130227 \
	|| PACKET_VERSION >= 20130115 \
	|| PACKET_VERSION >= 20130109 \
	|| PACKET_VERSION >= 20130103 \
	|| PACKET_VERSION >= 20121205 \
	|| PACKET_VERSION >= 20121128 \
	|| PACKET_VERSION >= 20120502 \
	|| PACKET_VERSION >= 20120424 \
	|| PACKET_VERSION >= 20120328 \
	|| PACKET_VERSION >= 20120207)
ID_ZC_PRNPC_STATE = 0x091b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PRNPC_STATE = 0x096b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20190000 \
	|| PACKET_VERSION == 20180228 \
	|| PACKET_VERSION == 20180221 \
	|| PACKET_VERSION == 20180103 \
	|| PACKET_VERSION >= 20171206 \
	|| PACKET_VERSION >= 20171204 \
	|| PACKET_VERSION >= 20171018)
ID_ZC_PRNPC_STATE = 0x091b
#else
ID_ZC_PRNPC_STATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PRNPC_STATE
 *
 */ 
class ZC_PRNPC_STATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PRNPC_STATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PRNPC_STATE, s)
	{}
	virtual ~ZC_PRNPC_STATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080318
ID_ZC_PROGRESS = 0x02f0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20080318)
ID_ZC_PROGRESS = 0x02f0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PROGRESS = 0x02f0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080318
ID_ZC_PROGRESS = 0x02f0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROGRESS = 0x02f0
#else
ID_ZC_PROGRESS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROGRESS
 *
 */ 
class ZC_PROGRESS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROGRESS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROGRESS, s)
	{}
	virtual ~ZC_PROGRESS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130821)
ID_ZC_PROGRESS_ACTOR = 0x09d1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130821)
ID_ZC_PROGRESS_ACTOR = 0x09d1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROGRESS_ACTOR = 0x09d1
#else
ID_ZC_PROGRESS_ACTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROGRESS_ACTOR
 *
 */ 
class ZC_PROGRESS_ACTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROGRESS_ACTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROGRESS_ACTOR, s)
	{}
	virtual ~ZC_PROGRESS_ACTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080318
ID_ZC_PROGRESS_CANCEL = 0x02f2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20080318)
ID_ZC_PROGRESS_CANCEL = 0x02f2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PROGRESS_CANCEL = 0x02f2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080318
ID_ZC_PROGRESS_CANCEL = 0x02f2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROGRESS_CANCEL = 0x02f2
#else
ID_ZC_PROGRESS_CANCEL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROGRESS_CANCEL
 *
 */ 
class ZC_PROGRESS_CANCEL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROGRESS_CANCEL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROGRESS_CANCEL, s)
	{}
	virtual ~ZC_PROGRESS_CANCEL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050624
ID_ZC_PROPERTY_HOMUN = 0x022e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20200000 \
	|| PACKET_VERSION >= 20050624)
ID_ZC_PROPERTY_HOMUN = 0x022e
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20200401
ID_ZC_PROPERTY_HOMUN = 0x0b76
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000))
ID_ZC_PROPERTY_HOMUN = 0x0ba4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_HOMUN = 0x022e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200709)
ID_ZC_PROPERTY_HOMUN = 0x0b76
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_PROPERTY_HOMUN = 0x0ba4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050622
ID_ZC_PROPERTY_HOMUN = 0x022e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20200000 \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_HOMUN = 0x022e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20210000 \
	|| PACKET_VERSION == 20200401)
ID_ZC_PROPERTY_HOMUN = 0x0b76
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210217)
ID_ZC_PROPERTY_HOMUN = 0x0ba4
#else
ID_ZC_PROPERTY_HOMUN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROPERTY_HOMUN
 *
 */ 
class ZC_PROPERTY_HOMUN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROPERTY_HOMUN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROPERTY_HOMUN, s)
	{}
	virtual ~ZC_PROPERTY_HOMUN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131230)
ID_ZC_PROPERTY_HOMUN_2 = 0x09f7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131230)
ID_ZC_PROPERTY_HOMUN_2 = 0x09f7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_HOMUN_2 = 0x09f7
#else
ID_ZC_PROPERTY_HOMUN_2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROPERTY_HOMUN_2
 *
 */ 
class ZC_PROPERTY_HOMUN_2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROPERTY_HOMUN_2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROPERTY_HOMUN_2, s)
	{}
	virtual ~ZC_PROPERTY_HOMUN_2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190529)
ID_ZC_PROPERTY_HOMUN_3 = 0x0b2f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190529)
ID_ZC_PROPERTY_HOMUN_3 = 0x0b2f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190529)
ID_ZC_PROPERTY_HOMUN_3 = 0x0b2f
#else
ID_ZC_PROPERTY_HOMUN_3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROPERTY_HOMUN_3
 *
 */ 
class ZC_PROPERTY_HOMUN_3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROPERTY_HOMUN_3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROPERTY_HOMUN_3, s)
	{}
	virtual ~ZC_PROPERTY_HOMUN_3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060703
ID_ZC_PROPERTY_MERCE = 0x027d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060703)
ID_ZC_PROPERTY_MERCE = 0x027d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_MERCE = 0x027d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060703
ID_ZC_PROPERTY_MERCE = 0x027d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_MERCE = 0x027d
#else
ID_ZC_PROPERTY_MERCE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROPERTY_MERCE
 *
 */ 
class ZC_PROPERTY_MERCE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROPERTY_MERCE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROPERTY_MERCE, s)
	{}
	virtual ~ZC_PROPERTY_MERCE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_PROPERTY_PET = 0x01a2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_PET = 0x01a2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081126)
ID_ZC_PROPERTY_PET = 0x01a2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_PROPERTY_PET = 0x01a2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_PROPERTY_PET = 0x01a2
#else
ID_ZC_PROPERTY_PET = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_PROPERTY_PET
 *
 */ 
class ZC_PROPERTY_PET : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_PROPERTY_PET(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_PROPERTY_PET, s)
	{}
	virtual ~ZC_PROPERTY_PET() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210317)
ID_ZC_QUEST_DIALOG = 0x0ba6
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_QUEST_DIALOG = 0x0ba6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210317)
ID_ZC_QUEST_DIALOG = 0x0ba6
#else
ID_ZC_QUEST_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_QUEST_DIALOG
 *
 */ 
class ZC_QUEST_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_QUEST_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_QUEST_DIALOG, s)
	{}
	virtual ~ZC_QUEST_DIALOG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210331 \
	|| PACKET_VERSION == 20210317)
ID_ZC_QUEST_DIALOG_MENU_LIST = 0x0ba7
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_QUEST_DIALOG_MENU_LIST = 0x0ba7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| PACKET_VERSION == 20210331 \
	|| PACKET_VERSION == 20210317)
ID_ZC_QUEST_DIALOG_MENU_LIST = 0x0ba7
#else
ID_ZC_QUEST_DIALOG_MENU_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_QUEST_DIALOG_MENU_LIST
 *
 */ 
class ZC_QUEST_DIALOG_MENU_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_QUEST_DIALOG_MENU_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_QUEST_DIALOG_MENU_LIST, s)
	{}
	virtual ~ZC_QUEST_DIALOG_MENU_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090218)
ID_ZC_QUEST_NOTIFY_EFFECT = 0x0446
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090218)
ID_ZC_QUEST_NOTIFY_EFFECT = 0x0446
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090218
ID_ZC_QUEST_NOTIFY_EFFECT = 0x0446
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_QUEST_NOTIFY_EFFECT = 0x0446
#else
ID_ZC_QUEST_NOTIFY_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_QUEST_NOTIFY_EFFECT
 *
 */ 
class ZC_QUEST_NOTIFY_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_QUEST_NOTIFY_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_QUEST_NOTIFY_EFFECT, s)
	{}
	virtual ~ZC_QUEST_NOTIFY_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_COMBINE_ITEM_UI_OPEN = 0x0a4e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_COMBINE_ITEM_UI_OPEN = 0x0a4e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_COMBINE_ITEM_UI_OPEN = 0x0a4e
#else
ID_ZC_RANDOM_COMBINE_ITEM_UI_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RANDOM_COMBINE_ITEM_UI_OPEN
 *
 */ 
class ZC_RANDOM_COMBINE_ITEM_UI_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RANDOM_COMBINE_ITEM_UI_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RANDOM_COMBINE_ITEM_UI_OPEN, s)
	{}
	virtual ~ZC_RANDOM_COMBINE_ITEM_UI_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_UPGRADE_ITEM_UI_OPEN = 0x0ab4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_UPGRADE_ITEM_UI_OPEN = 0x0ab4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_RANDOM_UPGRADE_ITEM_UI_OPEN = 0x0ab4
#else
ID_ZC_RANDOM_UPGRADE_ITEM_UI_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RANDOM_UPGRADE_ITEM_UI_OPEN
 *
 */ 
class ZC_RANDOM_UPGRADE_ITEM_UI_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RANDOM_UPGRADE_ITEM_UI_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RANDOM_UPGRADE_ITEM_UI_OPEN, s)
	{}
	virtual ~ZC_RANDOM_UPGRADE_ITEM_UI_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_READ_BOOK = 0x0294
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061204)
ID_ZC_READ_BOOK = 0x0294
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_READ_BOOK = 0x0294
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061204
ID_ZC_READ_BOOK = 0x0294
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_READ_BOOK = 0x0294
#else
ID_ZC_READ_BOOK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_READ_BOOK
 *
 */ 
class ZC_READ_BOOK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_READ_BOOK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_READ_BOOK, s)
	{}
	virtual ~ZC_READ_BOOK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_RECOVERY = 0x013d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_RECOVERY = 0x013d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RECOVERY = 0x013d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_RECOVERY = 0x013d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RECOVERY = 0x013d
#else
ID_ZC_RECOVERY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RECOVERY
 *
 */ 
class ZC_RECOVERY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RECOVERY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RECOVERY, s)
	{}
	virtual ~ZC_RECOVERY() {}

	void deliver(int16_t type, int16_t amount);
	ByteBuffer &serialize();

/* Structure */
	int16_t _type{0};
	int16_t _amount{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140625)
ID_ZC_RECOVERY2 = 0x0a27
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140625)
ID_ZC_RECOVERY2 = 0x0a27
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RECOVERY2 = 0x0a27
#else
ID_ZC_RECOVERY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RECOVERY2
 *
 */ 
class ZC_RECOVERY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RECOVERY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RECOVERY2, s)
	{}
	virtual ~ZC_RECOVERY2() {}

	void deliver(int16_t type, int32_t amount);
	ByteBuffer &serialize();

/* Structure */
	int16_t _type{0};
	int32_t _amount{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140618)
ID_ZC_RECV_ROULETTE_ITEM = 0x0a22
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140618)
ID_ZC_RECV_ROULETTE_ITEM = 0x0a22
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RECV_ROULETTE_ITEM = 0x0a22
#else
ID_ZC_RECV_ROULETTE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RECV_ROULETTE_ITEM
 *
 */ 
class ZC_RECV_ROULETTE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RECV_ROULETTE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RECV_ROULETTE_ITEM, s)
	{}
	virtual ~ZC_RECV_ROULETTE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161005)
ID_ZC_REFINE_ADD_ITEM = 0x0aa2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161005)
ID_ZC_REFINE_ADD_ITEM = 0x0aa2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFINE_ADD_ITEM = 0x0aa2
#else
ID_ZC_REFINE_ADD_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REFINE_ADD_ITEM
 *
 */ 
class ZC_REFINE_ADD_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFINE_ADD_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFINE_ADD_ITEM, s)
	{}
	virtual ~ZC_REFINE_ADD_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161005)
ID_ZC_REFINE_OPEN_WINDOW = 0x0aa0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20161005)
ID_ZC_REFINE_OPEN_WINDOW = 0x0aa0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFINE_OPEN_WINDOW = 0x0aa0
#else
ID_ZC_REFINE_OPEN_WINDOW = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REFINE_OPEN_WINDOW
 *
 */ 
class ZC_REFINE_OPEN_WINDOW : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFINE_OPEN_WINDOW(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFINE_OPEN_WINDOW, s)
	{}
	virtual ~ZC_REFINE_OPEN_WINDOW() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170726)
ID_ZC_REFINE_STATUS = 0x0ada
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170726)
ID_ZC_REFINE_STATUS = 0x0ada
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFINE_STATUS = 0x0ada
#else
ID_ZC_REFINE_STATUS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REFINE_STATUS
 *
 */ 
class ZC_REFINE_STATUS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFINE_STATUS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFINE_STATUS, s)
	{}
	virtual ~ZC_REFINE_STATUS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REFUSE_ENTER = 0x0074
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER = 0x0074
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER = 0x0074
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REFUSE_ENTER = 0x0074
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER = 0x0074
#else
ID_ZC_REFUSE_ENTER = 0x0000 // Disabled
#endif
};
enum zc_server_reject_type : int8_t
{
	ZONE_SERV_ERROR_REJECT = 3,
};
/**
 * @brief Main object for the aegis packet: ZC_REFUSE_ENTER
 *
 */ 
class ZC_REFUSE_ENTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFUSE_ENTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFUSE_ENTER, s)
	{}
	virtual ~ZC_REFUSE_ENTER() {}

	void deliver(zc_server_reject_type error);
	ByteBuffer &serialize();

/* Structure */
	zc_server_reject_type _error;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REFUSE_ENTER_ROOM = 0x00da
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER_ROOM = 0x00da
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER_ROOM = 0x00da
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REFUSE_ENTER_ROOM = 0x00da
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_ENTER_ROOM = 0x00da
#else
ID_ZC_REFUSE_ENTER_ROOM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REFUSE_ENTER_ROOM
 *
 */ 
class ZC_REFUSE_ENTER_ROOM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFUSE_ENTER_ROOM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFUSE_ENTER_ROOM, s)
	{}
	virtual ~ZC_REFUSE_ENTER_ROOM() {}

	void deliver(chat_join_fail_type type);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REFUSE_QUIT = 0x0084
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_QUIT = 0x0084
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_QUIT = 0x0084
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REFUSE_QUIT = 0x0084
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REFUSE_QUIT = 0x0084
#else
ID_ZC_REFUSE_QUIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REFUSE_QUIT
 *
 */ 
class ZC_REFUSE_QUIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REFUSE_QUIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REFUSE_QUIT, s)
	{}
	virtual ~ZC_REFUSE_QUIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_REMOVE_EFFECT = 0x0b0d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180912)
ID_ZC_REMOVE_EFFECT = 0x0b0d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180919)
ID_ZC_REMOVE_EFFECT = 0x0b0d
#else
ID_ZC_REMOVE_EFFECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REMOVE_EFFECT
 *
 */ 
class ZC_REMOVE_EFFECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REMOVE_EFFECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REMOVE_EFFECT, s)
	{}
	virtual ~ZC_REMOVE_EFFECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REPAIRITEMLIST = 0x01fc
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20040420
ID_ZC_REPAIRITEMLIST = 0x01fc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REPAIRITEMLIST = 0x0b65
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_REPAIRITEMLIST = 0x01fc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REPAIRITEMLIST = 0x0b65
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040420
ID_ZC_REPAIRITEMLIST = 0x01fc
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_REPAIRITEMLIST = 0x01fc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REPAIRITEMLIST = 0x0b65
#else
ID_ZC_REPAIRITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REPAIRITEMLIST
 *
 */ 
class ZC_REPAIRITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REPAIRITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REPAIRITEMLIST, s)
	{}
	virtual ~ZC_REPAIRITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION = 0x08de
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION = 0x08de
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION = 0x08de
#else
ID_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION
 *
 */ 
class ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION, s)
	{}
	virtual ~ZC_REPLY_ACK_ENTRY_QUEUE_ADMISSION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_REPLY_ACK_LOBBY_ADMISSION = 0x08e1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111004)
ID_ZC_REPLY_ACK_LOBBY_ADMISSION = 0x08e1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REPLY_ACK_LOBBY_ADMISSION = 0x08e1
#else
ID_ZC_REPLY_ACK_LOBBY_ADMISSION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REPLY_ACK_LOBBY_ADMISSION
 *
 */ 
class ZC_REPLY_ACK_LOBBY_ADMISSION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REPLY_ACK_LOBBY_ADMISSION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REPLY_ACK_LOBBY_ADMISSION, s)
	{}
	virtual ~ZC_REPLY_ACK_LOBBY_ADMISSION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REPLY_REMAINTIME = 0x01c1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REPLY_REMAINTIME = 0x01c1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REPLY_REMAINTIME = 0x01c1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REPLY_REMAINTIME = 0x01c1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REPLY_REMAINTIME = 0x01c1
#else
ID_ZC_REPLY_REMAINTIME = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REPLY_REMAINTIME
 *
 */ 
class ZC_REPLY_REMAINTIME : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REPLY_REMAINTIME(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REPLY_REMAINTIME, s)
	{}
	virtual ~ZC_REPLY_REMAINTIME() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_REQ_ACH_REWARD_ACK = 0x0a26
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140611)
ID_ZC_REQ_ACH_REWARD_ACK = 0x0a26
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ACH_REWARD_ACK = 0x0a26
#else
ID_ZC_REQ_ACH_REWARD_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ACH_REWARD_ACK
 *
 */ 
class ZC_REQ_ACH_REWARD_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ACH_REWARD_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ACH_REWARD_ACK, s)
	{}
	virtual ~ZC_REQ_ACH_REWARD_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_AGIT_INVESTMENT = 0x0b2d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_AGIT_INVESTMENT = 0x0b2d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_AGIT_INVESTMENT = 0x0b2d
#else
ID_ZC_REQ_ACK_AGIT_INVESTMENT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ACK_AGIT_INVESTMENT
 *
 */ 
class ZC_REQ_ACK_AGIT_INVESTMENT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ACK_AGIT_INVESTMENT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ACK_AGIT_INVESTMENT, s)
	{}
	virtual ~ZC_REQ_ACK_AGIT_INVESTMENT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_MOVE_GUILD_AGIT = 0x0b2e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_MOVE_GUILD_AGIT = 0x0b2e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ACK_MOVE_GUILD_AGIT = 0x0b2e
#else
ID_ZC_REQ_ACK_MOVE_GUILD_AGIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ACK_MOVE_GUILD_AGIT
 *
 */ 
class ZC_REQ_ACK_MOVE_GUILD_AGIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ACK_MOVE_GUILD_AGIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ACK_MOVE_GUILD_AGIT, s)
	{}
	virtual ~ZC_REQ_ACK_MOVE_GUILD_AGIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_ADD_FRIENDS = 0x0207
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_REQ_ADD_FRIENDS = 0x0207
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ADD_FRIENDS = 0x0207
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040628
ID_ZC_REQ_ADD_FRIENDS = 0x0207
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ADD_FRIENDS = 0x0207
#else
ID_ZC_REQ_ADD_FRIENDS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ADD_FRIENDS
 *
 */ 
class ZC_REQ_ADD_FRIENDS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ADD_FRIENDS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ADD_FRIENDS, s)
	{}
	virtual ~ZC_REQ_ADD_FRIENDS() {}

	void prepare(int req_account_id, int req_char_id, std::string req_char_name);
	ByteBuffer &serialize();

/* Structure */
	int _req_account_id{ 0 };
	int _req_char_id{ 0 };
	char _req_char_name[MAX_UNIT_NAME_LENGTH]{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_ALLY_GUILD = 0x0171
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ALLY_GUILD = 0x0171
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ALLY_GUILD = 0x0171
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_ALLY_GUILD = 0x0171
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ALLY_GUILD = 0x0171
#else
ID_ZC_REQ_ALLY_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ALLY_GUILD
 *
 */ 
class ZC_REQ_ALLY_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ALLY_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ALLY_GUILD, s)
	{}
	virtual ~ZC_REQ_ALLY_GUILD() {}

	void deliver(int inviter_account_id, std::string guild_name);
	ByteBuffer &serialize();

/* Structure */
	int _inviter_account_id;
	char _guild_name[MAX_GUILD_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ANSWER_MACRO_DETECTOR = 0x0a5b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ANSWER_MACRO_DETECTOR = 0x0a5b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_REQ_ANSWER_MACRO_DETECTOR = 0x0a5b
#else
ID_ZC_REQ_ANSWER_MACRO_DETECTOR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ANSWER_MACRO_DETECTOR
 *
 */ 
class ZC_REQ_ANSWER_MACRO_DETECTOR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ANSWER_MACRO_DETECTOR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ANSWER_MACRO_DETECTOR, s)
	{}
	virtual ~ZC_REQ_ANSWER_MACRO_DETECTOR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140702)
ID_ZC_REQ_AU_BOT = 0x0a29
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140702)
ID_ZC_REQ_AU_BOT = 0x0a29
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_AU_BOT = 0x0a29
#else
ID_ZC_REQ_AU_BOT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_AU_BOT
 *
 */ 
class ZC_REQ_AU_BOT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_AU_BOT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_AU_BOT, s)
	{}
	virtual ~ZC_REQ_AU_BOT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_BABY = 0x01f6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040308)
ID_ZC_REQ_BABY = 0x01f6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_BABY = 0x01f6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040308
ID_ZC_REQ_BABY = 0x01f6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_BABY = 0x01f6
#else
ID_ZC_REQ_BABY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_BABY
 *
 */ 
class ZC_REQ_BABY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_BABY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_BABY, s)
	{}
	virtual ~ZC_REQ_BABY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070205
ID_ZC_REQ_CASH_PASSWORD = 0x02aa
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070205)
ID_ZC_REQ_CASH_PASSWORD = 0x02aa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_CASH_PASSWORD = 0x02aa
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070205
ID_ZC_REQ_CASH_PASSWORD = 0x02aa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_CASH_PASSWORD = 0x02aa
#else
ID_ZC_REQ_CASH_PASSWORD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_CASH_PASSWORD
 *
 */ 
class ZC_REQ_CASH_PASSWORD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_CASH_PASSWORD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_CASH_PASSWORD, s)
	{}
	virtual ~ZC_REQ_CASH_PASSWORD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_COUPLE = 0x01e2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_COUPLE = 0x01e2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_COUPLE = 0x01e2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_COUPLE = 0x01e2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_COUPLE = 0x01e2
#else
ID_ZC_REQ_COUPLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_COUPLE
 *
 */ 
class ZC_REQ_COUPLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_COUPLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_COUPLE, s)
	{}
	virtual ~ZC_REQ_COUPLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_EXCHANGE_ITEM = 0x00e5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_EXCHANGE_ITEM = 0x00e5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_EXCHANGE_ITEM = 0x00e5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_EXCHANGE_ITEM = 0x00e5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_EXCHANGE_ITEM = 0x00e5
#else
ID_ZC_REQ_EXCHANGE_ITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_EXCHANGE_ITEM
 *
 */ 
class ZC_REQ_EXCHANGE_ITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_EXCHANGE_ITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_EXCHANGE_ITEM, s)
	{}
	virtual ~ZC_REQ_EXCHANGE_ITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x01f4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040302)
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x01f4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x01f4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040302
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x01f4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x01f4
#else
ID_ZC_REQ_EXCHANGE_ITEM2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_EXCHANGE_ITEM2
 *
 */ 
class ZC_REQ_EXCHANGE_ITEM2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_EXCHANGE_ITEM2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_EXCHANGE_ITEM2, s)
	{}
	virtual ~ZC_REQ_EXCHANGE_ITEM2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090603)
ID_ZC_REQ_GROUPINFO_CHANGE_V2 = 0x07d8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090603)
ID_ZC_REQ_GROUPINFO_CHANGE_V2 = 0x07d8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090603
ID_ZC_REQ_GROUPINFO_CHANGE_V2 = 0x07d8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_GROUPINFO_CHANGE_V2 = 0x07d8
#else
ID_ZC_REQ_GROUPINFO_CHANGE_V2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_GROUPINFO_CHANGE_V2
 *
 */ 
class ZC_REQ_GROUPINFO_CHANGE_V2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_GROUPINFO_CHANGE_V2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_GROUPINFO_CHANGE_V2, s)
	{}
	virtual ~ZC_REQ_GROUPINFO_CHANGE_V2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x00ae
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x00ae
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x00ae
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x00ae
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x00ae
#else
ID_ZC_REQ_ITEM_EXPLANATION_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_ITEM_EXPLANATION_ACK
 *
 */ 
class ZC_REQ_ITEM_EXPLANATION_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_ITEM_EXPLANATION_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_ITEM_EXPLANATION_ACK, s)
	{}
	virtual ~ZC_REQ_ITEM_EXPLANATION_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_JOIN_GROUP = 0x00fe
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GROUP = 0x00fe
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GROUP = 0x00fe
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_JOIN_GROUP = 0x00fe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GROUP = 0x00fe
#else
ID_ZC_REQ_JOIN_GROUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_JOIN_GROUP
 *
 */ 
class ZC_REQ_JOIN_GROUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_JOIN_GROUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_JOIN_GROUP, s)
	{}
	virtual ~ZC_REQ_JOIN_GROUP() {}

	void deliver(int party_id, std::string party_name);
	ByteBuffer &serialize();

/* Structure */
	int _party_id{ 0 };
	char _party_name[MAX_PARTY_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_JOIN_GUILD = 0x016a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GUILD = 0x016a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GUILD = 0x016a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_JOIN_GUILD = 0x016a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_JOIN_GUILD = 0x016a
#else
ID_ZC_REQ_JOIN_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_JOIN_GUILD
 *
 */ 
class ZC_REQ_JOIN_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_JOIN_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_JOIN_GUILD, s)
	{}
	virtual ~ZC_REQ_JOIN_GUILD() {}

	void deliver(int guild_id, std::string guild_name);
	ByteBuffer &serialize();

/* Structure */
	int _guild_id{ 0 };
	char _guild_name[MAX_GUILD_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_REQ_STORE_PASSWORD = 0x023a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050608)
ID_ZC_REQ_STORE_PASSWORD = 0x023a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_STORE_PASSWORD = 0x023a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_REQ_STORE_PASSWORD = 0x023a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_STORE_PASSWORD = 0x023a
#else
ID_ZC_REQ_STORE_PASSWORD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_STORE_PASSWORD
 *
 */ 
class ZC_REQ_STORE_PASSWORD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_STORE_PASSWORD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_STORE_PASSWORD, s)
	{}
	virtual ~ZC_REQ_STORE_PASSWORD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x00ac
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x00ac
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x00ac
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x00ac
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x00ac
#else
ID_ZC_REQ_TAKEOFF_EQUIP_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_TAKEOFF_EQUIP_ACK
 *
 */ 
class ZC_REQ_TAKEOFF_EQUIP_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_TAKEOFF_EQUIP_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_TAKEOFF_EQUIP_ACK, s)
	{}
	virtual ~ZC_REQ_TAKEOFF_EQUIP_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110809)
ID_ZC_REQ_TAKEOFF_EQUIP_ACK2 = 0x08d1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110810)
ID_ZC_REQ_TAKEOFF_EQUIP_ACK2 = 0x08d1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_TAKEOFF_EQUIP_ACK2 = 0x08d1
#else
ID_ZC_REQ_TAKEOFF_EQUIP_ACK2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_TAKEOFF_EQUIP_ACK2
 *
 */ 
class ZC_REQ_TAKEOFF_EQUIP_ACK2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_TAKEOFF_EQUIP_ACK2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_TAKEOFF_EQUIP_ACK2, s)
	{}
	virtual ~ZC_REQ_TAKEOFF_EQUIP_ACK2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x00aa
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x00aa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x00aa
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x00aa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x00aa
#else
ID_ZC_REQ_WEAR_EQUIP_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_WEAR_EQUIP_ACK
 *
 */ 
class ZC_REQ_WEAR_EQUIP_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_WEAR_EQUIP_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_WEAR_EQUIP_ACK, s)
	{}
	virtual ~ZC_REQ_WEAR_EQUIP_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110809)
ID_ZC_REQ_WEAR_EQUIP_ACK2 = 0x08d0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110810)
ID_ZC_REQ_WEAR_EQUIP_ACK2 = 0x08d0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_REQ_WEAR_EQUIP_ACK2 = 0x08d0
#else
ID_ZC_REQ_WEAR_EQUIP_ACK2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_REQ_WEAR_EQUIP_ACK2
 *
 */ 
class ZC_REQ_WEAR_EQUIP_ACK2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_REQ_WEAR_EQUIP_ACK2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_REQ_WEAR_EQUIP_ACK2, s)
	{}
	virtual ~ZC_REQ_WEAR_EQUIP_ACK2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_RESPONSE_ENCHANT = 0x0b9f
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_RESPONSE_ENCHANT = 0x0b9f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_RESPONSE_ENCHANT = 0x0b9f
#else
ID_ZC_RESPONSE_ENCHANT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESPONSE_ENCHANT
 *
 */ 
class ZC_RESPONSE_ENCHANT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESPONSE_ENCHANT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESPONSE_ENCHANT, s)
	{}
	virtual ~ZC_RESPONSE_ENCHANT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_RESTART_ACK = 0x00b3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_RESTART_ACK = 0x00b3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RESTART_ACK = 0x00b3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_RESTART_ACK = 0x00b3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESTART_ACK = 0x00b3
#else
ID_ZC_RESTART_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESTART_ACK
 *
 */ 
class ZC_RESTART_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESTART_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESTART_ACK, s)
	{}
	virtual ~ZC_RESTART_ACK() {}

	void deliver(int8_t type);
	ByteBuffer &serialize();

/* Structure */
	int8_t _type{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070205
ID_ZC_RESULT_CASH_PASSWORD = 0x02ac
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070205)
ID_ZC_RESULT_CASH_PASSWORD = 0x02ac
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_CASH_PASSWORD = 0x02ac
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070205
ID_ZC_RESULT_CASH_PASSWORD = 0x02ac
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_CASH_PASSWORD = 0x02ac
#else
ID_ZC_RESULT_CASH_PASSWORD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESULT_CASH_PASSWORD
 *
 */ 
class ZC_RESULT_CASH_PASSWORD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESULT_CASH_PASSWORD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESULT_CASH_PASSWORD, s)
	{}
	virtual ~ZC_RESULT_CASH_PASSWORD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_RESULT_MAKE_GUILD = 0x0167
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_MAKE_GUILD = 0x0167
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_MAKE_GUILD = 0x0167
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_RESULT_MAKE_GUILD = 0x0167
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_MAKE_GUILD = 0x0167
#else
ID_ZC_RESULT_MAKE_GUILD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESULT_MAKE_GUILD
 *
 */ 
class ZC_RESULT_MAKE_GUILD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESULT_MAKE_GUILD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESULT_MAKE_GUILD, s)
	{}
	virtual ~ZC_RESULT_MAKE_GUILD() {}

	void deliver(zc_result_make_guild_type result);
	ByteBuffer &serialize();

/* Structure */
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140917)
ID_ZC_RESULT_PACKAGE_ITEM_TEST = 0x0a31
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140917)
ID_ZC_RESULT_PACKAGE_ITEM_TEST = 0x0a31
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_PACKAGE_ITEM_TEST = 0x0a31
#else
ID_ZC_RESULT_PACKAGE_ITEM_TEST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESULT_PACKAGE_ITEM_TEST
 *
 */ 
class ZC_RESULT_PACKAGE_ITEM_TEST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESULT_PACKAGE_ITEM_TEST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESULT_PACKAGE_ITEM_TEST, s)
	{}
	virtual ~ZC_RESULT_PACKAGE_ITEM_TEST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_RESULT_STORE_PASSWORD = 0x023c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050608)
ID_ZC_RESULT_STORE_PASSWORD = 0x023c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_STORE_PASSWORD = 0x023c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050608
ID_ZC_RESULT_STORE_PASSWORD = 0x023c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESULT_STORE_PASSWORD = 0x023c
#else
ID_ZC_RESULT_STORE_PASSWORD = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESULT_STORE_PASSWORD
 *
 */ 
class ZC_RESULT_STORE_PASSWORD : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESULT_STORE_PASSWORD(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESULT_STORE_PASSWORD, s)
	{}
	virtual ~ZC_RESULT_STORE_PASSWORD() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_RESURRECTION = 0x0148
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_RESURRECTION = 0x0148
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_RESURRECTION = 0x0148
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_RESURRECTION = 0x0148
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_RESURRECTION = 0x0148
#else
ID_ZC_RESURRECTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_RESURRECTION
 *
 */ 
class ZC_RESURRECTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_RESURRECTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_RESURRECTION, s)
	{}
	virtual ~ZC_RESURRECTION() {}

	void deliver(int32_t guid, int16_t type);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	int16_t _type{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ROLE_CHANGE = 0x00e1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ROLE_CHANGE = 0x00e1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ROLE_CHANGE = 0x00e1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ROLE_CHANGE = 0x00e1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ROLE_CHANGE = 0x00e1
#else
ID_ZC_ROLE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ROLE_CHANGE
 *
 */ 
class ZC_ROLE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ROLE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ROLE_CHANGE, s)
	{}
	virtual ~ZC_ROLE_CHANGE() {}

	void deliver(int role, std::string name);
	ByteBuffer &serialize();

/* Structure */
	int32_t _role;
	char _name[MAX_UNIT_NAME_LENGTH];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_ROOM_NEWENTRY = 0x00d7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_ROOM_NEWENTRY = 0x00d7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_ROOM_NEWENTRY = 0x00d7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_ROOM_NEWENTRY = 0x00d7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_ROOM_NEWENTRY = 0x00d7
#else
ID_ZC_ROOM_NEWENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_ROOM_NEWENTRY
 *
 */ 
class ZC_ROOM_NEWENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_ROOM_NEWENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_ROOM_NEWENTRY, s)
	{}
	virtual ~ZC_ROOM_NEWENTRY() {}

	void deliver(int owner_id, int char_id, int limit, int users, int type, std::string title);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	int _owner_id{ 0 };
	int _char_id{ 0 };
	int16_t _limit{ 0 };
	int16_t _users{ 0 };
	int8_t _type{ 0 };
	char _title[CHATROOM_TITLE_SIZE];
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SAY_DIALOG = 0x00b4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SAY_DIALOG = 0x00b4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SAY_DIALOG = 0x00b4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SAY_DIALOG = 0x00b4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SAY_DIALOG = 0x00b4
#else
ID_ZC_SAY_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SAY_DIALOG
 *
 */ 
class ZC_SAY_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SAY_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SAY_DIALOG, s)
	{}
	virtual ~ZC_SAY_DIALOG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_SAY_DIALOG2 = 0x0972
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_SAY_DIALOG2 = 0x0972
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SAY_DIALOG2 = 0x0972
#else
ID_ZC_SAY_DIALOG2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SAY_DIALOG2
 *
 */ 
class ZC_SAY_DIALOG2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SAY_DIALOG2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SAY_DIALOG2, s)
	{}
	virtual ~ZC_SAY_DIALOG2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20100601
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0836
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0b64
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20100601
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0836
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0b64
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0836
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0b64
#else
ID_ZC_SEARCH_STORE_INFO_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SEARCH_STORE_INFO_ACK
 *
 */ 
class ZC_SEARCH_STORE_INFO_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SEARCH_STORE_INFO_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SEARCH_STORE_INFO_ACK, s)
	{}
	virtual ~ZC_SEARCH_STORE_INFO_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100601)
ID_ZC_SEARCH_STORE_INFO_FAILED = 0x0837
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100601)
ID_ZC_SEARCH_STORE_INFO_FAILED = 0x0837
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SEARCH_STORE_INFO_FAILED = 0x0837
#else
ID_ZC_SEARCH_STORE_INFO_FAILED = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SEARCH_STORE_INFO_FAILED
 *
 */ 
class ZC_SEARCH_STORE_INFO_FAILED : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SEARCH_STORE_INFO_FAILED(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SEARCH_STORE_INFO_FAILED, s)
	{}
	virtual ~ZC_SEARCH_STORE_INFO_FAILED() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20100622
ID_ZC_SEARCH_STORE_OPEN_INFO = 0x083f
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20100622
ID_ZC_SEARCH_STORE_OPEN_INFO = 0x083f
#else
ID_ZC_SEARCH_STORE_OPEN_INFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SEARCH_STORE_OPEN_INFO
 *
 */ 
class ZC_SEARCH_STORE_OPEN_INFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SEARCH_STORE_OPEN_INFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SEARCH_STORE_OPEN_INFO, s)
	{}
	virtual ~ZC_SEARCH_STORE_OPEN_INFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_SECRETSCAN_DATA = 0x09cc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_SECRETSCAN_DATA = 0x09cc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SECRETSCAN_DATA = 0x09cc
#else
ID_ZC_SECRETSCAN_DATA = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SECRETSCAN_DATA
 *
 */ 
class ZC_SECRETSCAN_DATA : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SECRETSCAN_DATA(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SECRETSCAN_DATA, s)
	{}
	virtual ~ZC_SECRETSCAN_DATA() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SEEK_PARTY = 0x07dd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SEEK_PARTY = 0x07dd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090617
ID_ZC_SEEK_PARTY = 0x07dd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SEEK_PARTY = 0x07dd
#else
ID_ZC_SEEK_PARTY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SEEK_PARTY
 *
 */ 
class ZC_SEEK_PARTY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SEEK_PARTY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SEEK_PARTY, s)
	{}
	virtual ~ZC_SEEK_PARTY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SEEK_PARTY_MEMBER = 0x07df
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SEEK_PARTY_MEMBER = 0x07df
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090617
ID_ZC_SEEK_PARTY_MEMBER = 0x07df
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SEEK_PARTY_MEMBER = 0x07df
#else
ID_ZC_SEEK_PARTY_MEMBER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SEEK_PARTY_MEMBER
 *
 */ 
class ZC_SEEK_PARTY_MEMBER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SEEK_PARTY_MEMBER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SEEK_PARTY_MEMBER, s)
	{}
	virtual ~ZC_SEEK_PARTY_MEMBER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120503)
ID_ZC_SELECTCART = 0x097f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120502)
ID_ZC_SELECTCART = 0x097f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SELECTCART = 0x097f
#else
ID_ZC_SELECTCART = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SELECTCART
 *
 */ 
class ZC_SELECTCART : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SELECTCART(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SELECTCART, s)
	{}
	virtual ~ZC_SELECTCART() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SELECT_DEALTYPE = 0x00c4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SELECT_DEALTYPE = 0x00c4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SELECT_DEALTYPE = 0x00c4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SELECT_DEALTYPE = 0x00c4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SELECT_DEALTYPE = 0x00c4
#else
ID_ZC_SELECT_DEALTYPE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SELECT_DEALTYPE
 *
 */ 
class ZC_SELECT_DEALTYPE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SELECT_DEALTYPE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SELECT_DEALTYPE, s)
	{}
	virtual ~ZC_SELECT_DEALTYPE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SETTING_WHISPER_PC = 0x00d1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_PC = 0x00d1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_PC = 0x00d1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SETTING_WHISPER_PC = 0x00d1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_PC = 0x00d1
#else
ID_ZC_SETTING_WHISPER_PC = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SETTING_WHISPER_PC
 *
 */ 
class ZC_SETTING_WHISPER_PC : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SETTING_WHISPER_PC(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SETTING_WHISPER_PC, s)
	{}
	virtual ~ZC_SETTING_WHISPER_PC() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SETTING_WHISPER_STATE = 0x00d2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_STATE = 0x00d2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_STATE = 0x00d2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SETTING_WHISPER_STATE = 0x00d2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SETTING_WHISPER_STATE = 0x00d2
#else
ID_ZC_SETTING_WHISPER_STATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SETTING_WHISPER_STATE
 *
 */ 
class ZC_SETTING_WHISPER_STATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SETTING_WHISPER_STATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SETTING_WHISPER_STATE, s)
	{}
	virtual ~ZC_SETTING_WHISPER_STATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20100824
ID_ZC_SE_CASHSHOP_OPEN = 0x0845
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SE_CASHSHOP_OPEN = 0x0b6e
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20100824
ID_ZC_SE_CASHSHOP_OPEN = 0x0845
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SE_CASHSHOP_OPEN = 0x0b6e
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_SE_CASHSHOP_OPEN = 0x0845
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_SE_CASHSHOP_OPEN = 0x0b6e
#else
ID_ZC_SE_CASHSHOP_OPEN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SE_CASHSHOP_OPEN
 *
 */ 
class ZC_SE_CASHSHOP_OPEN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SE_CASHSHOP_OPEN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SE_CASHSHOP_OPEN, s)
	{}
	virtual ~ZC_SE_CASHSHOP_OPEN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140723)
ID_ZC_SE_CASHSHOP_OPEN2 = 0x0a2b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140723)
ID_ZC_SE_CASHSHOP_OPEN2 = 0x0a2b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SE_CASHSHOP_OPEN2 = 0x0a2b
#else
ID_ZC_SE_CASHSHOP_OPEN2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SE_CASHSHOP_OPEN2
 *
 */ 
class ZC_SE_CASHSHOP_OPEN2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SE_CASHSHOP_OPEN2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SE_CASHSHOP_OPEN2, s)
	{}
	virtual ~ZC_SE_CASHSHOP_OPEN2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110816)
ID_ZC_SE_CASHSHOP_UPDATE = 0x08d3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110816)
ID_ZC_SE_CASHSHOP_UPDATE = 0x08d3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SE_CASHSHOP_UPDATE = 0x08d3
#else
ID_ZC_SE_CASHSHOP_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SE_CASHSHOP_UPDATE
 *
 */ 
class ZC_SE_CASHSHOP_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SE_CASHSHOP_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SE_CASHSHOP_UPDATE, s)
	{}
	virtual ~ZC_SE_CASHSHOP_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100914)
ID_ZC_SE_PC_BUY_CASHITEM_RESULT = 0x0849
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100914)
ID_ZC_SE_PC_BUY_CASHITEM_RESULT = 0x0849
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SE_PC_BUY_CASHITEM_RESULT = 0x0849
#else
ID_ZC_SE_PC_BUY_CASHITEM_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SE_PC_BUY_CASHITEM_RESULT
 *
 */ 
class ZC_SE_PC_BUY_CASHITEM_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SE_PC_BUY_CASHITEM_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SE_PC_BUY_CASHITEM_RESULT, s)
	{}
	virtual ~ZC_SE_PC_BUY_CASHITEM_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140723)
ID_ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT = 0x0a2c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140723)
ID_ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT = 0x0a2c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT = 0x0a2c
#else
ID_ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT
 *
 */ 
class ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT, s)
	{}
	virtual ~ZC_SE_PC_BUY_TAIWANCASHITEM_RESULT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20060710
ID_ZC_SHANDA_PROTECT = 0x027e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20060710)
ID_ZC_SHANDA_PROTECT = 0x027e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SHANDA_PROTECT = 0x027e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20060710
ID_ZC_SHANDA_PROTECT = 0x027e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHANDA_PROTECT = 0x027e
#else
ID_ZC_SHANDA_PROTECT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHANDA_PROTECT
 *
 */ 
class ZC_SHANDA_PROTECT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHANDA_PROTECT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHANDA_PROTECT, s)
	{}
	virtual ~ZC_SHANDA_PROTECT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_SHORTCUT_KEY_LIST = 0x02b9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070611)
ID_ZC_SHORTCUT_KEY_LIST = 0x02b9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SHORTCUT_KEY_LIST = 0x02b9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070611
ID_ZC_SHORTCUT_KEY_LIST = 0x02b9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHORTCUT_KEY_LIST = 0x02b9
#else
ID_ZC_SHORTCUT_KEY_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHORTCUT_KEY_LIST
 *
 */ 
class ZC_SHORTCUT_KEY_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHORTCUT_KEY_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHORTCUT_KEY_LIST, s)
	{}
	virtual ~ZC_SHORTCUT_KEY_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SHORTCUT_KEY_LIST_V2 = 0x07d9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090617)
ID_ZC_SHORTCUT_KEY_LIST_V2 = 0x07d9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090617
ID_ZC_SHORTCUT_KEY_LIST_V2 = 0x07d9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHORTCUT_KEY_LIST_V2 = 0x07d9
#else
ID_ZC_SHORTCUT_KEY_LIST_V2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHORTCUT_KEY_LIST_V2
 *
 */ 
class ZC_SHORTCUT_KEY_LIST_V2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHORTCUT_KEY_LIST_V2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHORTCUT_KEY_LIST_V2, s)
	{}
	virtual ~ZC_SHORTCUT_KEY_LIST_V2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140129)
ID_ZC_SHORTCUT_KEY_LIST_V3 = 0x0a00
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140129)
ID_ZC_SHORTCUT_KEY_LIST_V3 = 0x0a00
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHORTCUT_KEY_LIST_V3 = 0x0a00
#else
ID_ZC_SHORTCUT_KEY_LIST_V3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHORTCUT_KEY_LIST_V3
 *
 */ 
class ZC_SHORTCUT_KEY_LIST_V3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHORTCUT_KEY_LIST_V3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHORTCUT_KEY_LIST_V3, s)
	{}
	virtual ~ZC_SHORTCUT_KEY_LIST_V3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190403)
ID_ZC_SHORTCUT_KEY_LIST_V4 = 0x0b20
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190403)
ID_ZC_SHORTCUT_KEY_LIST_V4 = 0x0b20
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190327)
ID_ZC_SHORTCUT_KEY_LIST_V4 = 0x0b20
#else
ID_ZC_SHORTCUT_KEY_LIST_V4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHORTCUT_KEY_LIST_V4
 *
 */ 
class ZC_SHORTCUT_KEY_LIST_V4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHORTCUT_KEY_LIST_V4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHORTCUT_KEY_LIST_V4, s)
	{}
	virtual ~ZC_SHORTCUT_KEY_LIST_V4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SHOWDIGIT = 0x01b1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SHOWDIGIT = 0x01b1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SHOWDIGIT = 0x01b1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SHOWDIGIT = 0x01b1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHOWDIGIT = 0x01b1
#else
ID_ZC_SHOWDIGIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHOWDIGIT
 *
 */ 
class ZC_SHOWDIGIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHOWDIGIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHOWDIGIT, s)
	{}
	virtual ~ZC_SHOWDIGIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110111)
ID_ZC_SHOWSCRIPT = 0x08b3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110111)
ID_ZC_SHOWSCRIPT = 0x08b3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHOWSCRIPT = 0x08b3
#else
ID_ZC_SHOWSCRIPT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHOWSCRIPT
 *
 */ 
class ZC_SHOWSCRIPT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHOWSCRIPT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHOWSCRIPT, s)
	{}
	virtual ~ZC_SHOWSCRIPT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SHOW_IMAGE = 0x0145
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE = 0x0145
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE = 0x0145
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SHOW_IMAGE = 0x0145
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE = 0x0145
#else
ID_ZC_SHOW_IMAGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHOW_IMAGE
 *
 */ 
class ZC_SHOW_IMAGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHOW_IMAGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHOW_IMAGE, s)
	{}
	virtual ~ZC_SHOW_IMAGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SHOW_IMAGE2 = 0x01b3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE2 = 0x01b3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE2 = 0x01b3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SHOW_IMAGE2 = 0x01b3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SHOW_IMAGE2 = 0x01b3
#else
ID_ZC_SHOW_IMAGE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SHOW_IMAGE2
 *
 */ 
class ZC_SHOW_IMAGE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SHOW_IMAGE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SHOW_IMAGE2, s)
	{}
	virtual ~ZC_SHOW_IMAGE2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080521
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x035d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20080521)
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x035d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x035d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080527
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x035d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x035d
#else
ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST
 *
 */ 
class ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST, s)
	{}
	virtual ~ZC_SIMPLE_CASHSHOP_POINT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100113)
ID_ZC_SIMPLE_CASH_BTNSHOW = 0x080d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100113)
ID_ZC_SIMPLE_CASH_BTNSHOW = 0x080d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SIMPLE_CASH_BTNSHOW = 0x080d
#else
ID_ZC_SIMPLE_CASH_BTNSHOW = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SIMPLE_CASH_BTNSHOW
 *
 */ 
class ZC_SIMPLE_CASH_BTNSHOW : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SIMPLE_CASH_BTNSHOW(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SIMPLE_CASH_BTNSHOW, s)
	{}
	virtual ~ZC_SIMPLE_CASH_BTNSHOW() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20090000 && PACKET_VERSION < 20200000))
ID_ZC_SIMPLE_CASH_POINT_ITEMLIST = 0x0444
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20090113)
ID_ZC_SIMPLE_CASH_POINT_ITEMLIST = 0x0444
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20090114
ID_ZC_SIMPLE_CASH_POINT_ITEMLIST = 0x0444
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SIMPLE_CASH_POINT_ITEMLIST = 0x0444
#else
ID_ZC_SIMPLE_CASH_POINT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SIMPLE_CASH_POINT_ITEMLIST
 *
 */ 
class ZC_SIMPLE_CASH_POINT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SIMPLE_CASH_POINT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SIMPLE_CASH_POINT_ITEMLIST, s)
	{}
	virtual ~ZC_SIMPLE_CASH_POINT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081126)
ID_ZC_SKILLINFO_DELETE = 0x0441
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081126)
ID_ZC_SKILLINFO_DELETE = 0x0441
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081126
ID_ZC_SKILLINFO_DELETE = 0x0441
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLINFO_DELETE = 0x0441
#else
ID_ZC_SKILLINFO_DELETE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILLINFO_DELETE
 *
 */ 
class ZC_SKILLINFO_DELETE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILLINFO_DELETE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILLINFO_DELETE, s)
	{}
	virtual ~ZC_SKILLINFO_DELETE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILLINFO_LIST = 0x010f
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILLINFO_LIST = 0x010f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_SKILLINFO_LIST = 0x0b32
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_SKILLINFO_LIST = 0x010f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_SKILLINFO_LIST = 0x0b32
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILLINFO_LIST = 0x010f
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_SKILLINFO_LIST = 0x010f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190626)
ID_ZC_SKILLINFO_LIST = 0x0b32
#else
ID_ZC_SKILLINFO_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILLINFO_LIST
 *
 */ 
class ZC_SKILLINFO_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILLINFO_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILLINFO_LIST, s)
	{}
	virtual ~ZC_SKILLINFO_LIST() {}

	void deliver(const std::vector<zc_skill_info_data> &_skills);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length;
	std::vector<zc_skill_info_data> _skills;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILLINFO_UPDATE = 0x010e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLINFO_UPDATE = 0x010e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLINFO_UPDATE = 0x010e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILLINFO_UPDATE = 0x010e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLINFO_UPDATE = 0x010e
#else
ID_ZC_SKILLINFO_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILLINFO_UPDATE
 *
 */ 
class ZC_SKILLINFO_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILLINFO_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILLINFO_UPDATE, s)
	{}
	virtual ~ZC_SKILLINFO_UPDATE() {}

	void deliver(int16_t skill_id, int16_t skill_level, int16_t sp_cost, int16_t range, bool upgradeable);
	ByteBuffer &serialize();

/* Structure */
	int16_t _skill_id{0};
	int16_t _skill_level{0};
	int16_t _sp_cost{0};
	int16_t _range{0};
	int8_t _upgradeable{0};
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20090715
ID_ZC_SKILLINFO_UPDATE2 = 0x07e1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_SKILLINFO_UPDATE2 = 0x0b33
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20090715
ID_ZC_SKILLINFO_UPDATE2 = 0x07e1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190619)
ID_ZC_SKILLINFO_UPDATE2 = 0x0b33
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_SKILLINFO_UPDATE2 = 0x07e1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20190626)
ID_ZC_SKILLINFO_UPDATE2 = 0x0b33
#else
ID_ZC_SKILLINFO_UPDATE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILLINFO_UPDATE2
 *
 */ 
class ZC_SKILLINFO_UPDATE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILLINFO_UPDATE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILLINFO_UPDATE2, s)
	{}
	virtual ~ZC_SKILLINFO_UPDATE2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20041101
ID_ZC_SKILLMSG = 0x0215
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20041101)
ID_ZC_SKILLMSG = 0x0215
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLMSG = 0x0215
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20041101
ID_ZC_SKILLMSG = 0x0215
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILLMSG = 0x0215
#else
ID_ZC_SKILLMSG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILLMSG
 *
 */ 
class ZC_SKILLMSG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILLMSG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILLMSG, s)
	{}
	virtual ~ZC_SKILLMSG() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILL_DISAPPEAR = 0x0120
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_DISAPPEAR = 0x0120
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_DISAPPEAR = 0x0120
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILL_DISAPPEAR = 0x0120
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_DISAPPEAR = 0x0120
#else
ID_ZC_SKILL_DISAPPEAR = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_DISAPPEAR
 *
 */ 
class ZC_SKILL_DISAPPEAR : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_DISAPPEAR(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_DISAPPEAR, s)
	{}
	virtual ~ZC_SKILL_DISAPPEAR() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILL_ENTRY = 0x011f
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY = 0x011f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY = 0x011f
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILL_ENTRY = 0x011f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY = 0x011f
#else
ID_ZC_SKILL_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_ENTRY
 *
 */ 
class ZC_SKILL_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_ENTRY, s)
	{}
	virtual ~ZC_SKILL_ENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILL_ENTRY2 = 0x01c9
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY2 = 0x01c9
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY2 = 0x01c9
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILL_ENTRY2 = 0x01c9
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY2 = 0x01c9
#else
ID_ZC_SKILL_ENTRY2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_ENTRY2
 *
 */ 
class ZC_SKILL_ENTRY2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_ENTRY2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_ENTRY2, s)
	{}
	virtual ~ZC_SKILL_ENTRY2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110419)
ID_ZC_SKILL_ENTRY3 = 0x08c7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110419)
ID_ZC_SKILL_ENTRY3 = 0x08c7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY3 = 0x08c7
#else
ID_ZC_SKILL_ENTRY3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_ENTRY3
 *
 */ 
class ZC_SKILL_ENTRY3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_ENTRY3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_ENTRY3, s)
	{}
	virtual ~ZC_SKILL_ENTRY3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20121212)
ID_ZC_SKILL_ENTRY4 = 0x099f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20121212)
ID_ZC_SKILL_ENTRY4 = 0x099f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY4 = 0x099f
#else
ID_ZC_SKILL_ENTRY4 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_ENTRY4
 *
 */ 
class ZC_SKILL_ENTRY4 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_ENTRY4(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_ENTRY4, s)
	{}
	virtual ~ZC_SKILL_ENTRY4() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_SKILL_ENTRY5 = 0x09ca
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130828)
ID_ZC_SKILL_ENTRY5 = 0x09ca
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_ENTRY5 = 0x09ca
#else
ID_ZC_SKILL_ENTRY5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_ENTRY5
 *
 */ 
class ZC_SKILL_ENTRY5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_ENTRY5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_ENTRY5, s)
	{}
	virtual ~ZC_SKILL_ENTRY5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081112)
ID_ZC_SKILL_POSTDELAY = 0x043d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081111)
ID_ZC_SKILL_POSTDELAY = 0x043d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081112
ID_ZC_SKILL_POSTDELAY = 0x043d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_POSTDELAY = 0x043d
#else
ID_ZC_SKILL_POSTDELAY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_POSTDELAY
 *
 */ 
class ZC_SKILL_POSTDELAY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_POSTDELAY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_POSTDELAY, s)
	{}
	virtual ~ZC_SKILL_POSTDELAY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081112)
ID_ZC_SKILL_POSTDELAY_LIST = 0x043e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081111)
ID_ZC_SKILL_POSTDELAY_LIST = 0x043e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081112
ID_ZC_SKILL_POSTDELAY_LIST = 0x043e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_POSTDELAY_LIST = 0x043e
#else
ID_ZC_SKILL_POSTDELAY_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_POSTDELAY_LIST
 *
 */ 
class ZC_SKILL_POSTDELAY_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_POSTDELAY_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_POSTDELAY_LIST, s)
	{}
	virtual ~ZC_SKILL_POSTDELAY_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120604)
ID_ZC_SKILL_POSTDELAY_LIST2 = 0x0985
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120601)
ID_ZC_SKILL_POSTDELAY_LIST2 = 0x0985
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_POSTDELAY_LIST2 = 0x0985
#else
ID_ZC_SKILL_POSTDELAY_LIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_POSTDELAY_LIST2
 *
 */ 
class ZC_SKILL_POSTDELAY_LIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_POSTDELAY_LIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_POSTDELAY_LIST2, s)
	{}
	virtual ~ZC_SKILL_POSTDELAY_LIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081210)
ID_ZC_SKILL_SELECT_REQUEST = 0x0442
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20081217)
ID_ZC_SKILL_SELECT_REQUEST = 0x0442
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20081210
ID_ZC_SKILL_SELECT_REQUEST = 0x0442
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_SELECT_REQUEST = 0x0442
#else
ID_ZC_SKILL_SELECT_REQUEST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_SELECT_REQUEST
 *
 */ 
class ZC_SKILL_SELECT_REQUEST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_SELECT_REQUEST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_SELECT_REQUEST, s)
	{}
	virtual ~ZC_SKILL_SELECT_REQUEST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SKILL_UPDATE = 0x01ac
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_UPDATE = 0x01ac
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_UPDATE = 0x01ac
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SKILL_UPDATE = 0x01ac
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SKILL_UPDATE = 0x01ac
#else
ID_ZC_SKILL_UPDATE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SKILL_UPDATE
 *
 */ 
class ZC_SKILL_UPDATE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SKILL_UPDATE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SKILL_UPDATE, s)
	{}
	virtual ~ZC_SKILL_UPDATE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SOUND = 0x01d3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SOUND = 0x01d3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SOUND = 0x01d3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SOUND = 0x01d3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SOUND = 0x01d3
#else
ID_ZC_SOUND = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SOUND
 *
 */ 
class ZC_SOUND : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SOUND(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SOUND, s)
	{}
	virtual ~ZC_SOUND() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION == 20220831 \
	|| PACKET_VERSION == 20220817)
ID_ZC_SPECIALPOPUP = 0x0bbe
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION == 20221005 \
	|| PACKET_VERSION == 20220817)
ID_ZC_SPECIALPOPUP = 0x0bbe
#else
ID_ZC_SPECIALPOPUP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPECIALPOPUP
 *
 */ 
class ZC_SPECIALPOPUP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPECIALPOPUP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPECIALPOPUP, s)
	{}
	virtual ~ZC_SPECIALPOPUP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SPIRITS = 0x01d0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS = 0x01d0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS = 0x01d0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SPIRITS = 0x01d0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS = 0x01d0
#else
ID_ZC_SPIRITS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPIRITS
 *
 */ 
class ZC_SPIRITS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPIRITS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPIRITS, s)
	{}
	virtual ~ZC_SPIRITS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SPIRITS2 = 0x01e1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS2 = 0x01e1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS2 = 0x01e1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SPIRITS2 = 0x01e1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS2 = 0x01e1
#else
ID_ZC_SPIRITS2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPIRITS2
 *
 */ 
class ZC_SPIRITS2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPIRITS2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPIRITS2, s)
	{}
	virtual ~ZC_SPIRITS2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110809)
ID_ZC_SPIRITS_ATTRIBUTE = 0x08cf
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110810)
ID_ZC_SPIRITS_ATTRIBUTE = 0x08cf
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SPIRITS_ATTRIBUTE = 0x08cf
#else
ID_ZC_SPIRITS_ATTRIBUTE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPIRITS_ATTRIBUTE
 *
 */ 
class ZC_SPIRITS_ATTRIBUTE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPIRITS_ATTRIBUTE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPIRITS_ATTRIBUTE, s)
	{}
	virtual ~ZC_SPIRITS_ATTRIBUTE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SPRITE_CHANGE = 0x00c3
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE = 0x00c3
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE = 0x00c3
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SPRITE_CHANGE = 0x00c3
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE = 0x00c3
#else
ID_ZC_SPRITE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPRITE_CHANGE
 *
 */ 
class ZC_SPRITE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPRITE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPRITE_CHANGE, s)
	{}
	virtual ~ZC_SPRITE_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_SPRITE_CHANGE2 = 0x01d7
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE2 = 0x01d7
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE2 = 0x01d7
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_SPRITE_CHANGE2 = 0x01d7
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SPRITE_CHANGE2 = 0x01d7
#else
ID_ZC_SPRITE_CHANGE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SPRITE_CHANGE2
 *
 */ 
class ZC_SPRITE_CHANGE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SPRITE_CHANGE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SPRITE_CHANGE2, s)
	{}
	virtual ~ZC_SPRITE_CHANGE2() {}


	void deliver(int32_t guid, unit_appearance_type look_type, int32_t value, int32_t value2);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	int8_t _look_type{0};

#if ((CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181121) \
	|| (CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180704) \
	|| (CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20181114))
	int32_t _value{0};
	int32_t _value2{0};
#else
	int16_t _value{0};
	int16_t _value2{0};
#endif
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_SRPACKETR2_INIT = 0x02bf
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_SRPACKETR2_INIT = 0x02bf
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070807
ID_ZC_SRPACKETR2_INIT = 0x02bf
#else
ID_ZC_SRPACKETR2_INIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SRPACKETR2_INIT
 *
 */ 
class ZC_SRPACKETR2_INIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SRPACKETR2_INIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SRPACKETR2_INIT, s)
	{}
	virtual ~ZC_SRPACKETR2_INIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100608)
ID_ZC_SSILIST_ITEM_CLICK_ACK = 0x083d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100608)
ID_ZC_SSILIST_ITEM_CLICK_ACK = 0x083d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_SSILIST_ITEM_CLICK_ACK = 0x083d
#else
ID_ZC_SSILIST_ITEM_CLICK_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_SSILIST_ITEM_CLICK_ACK
 *
 */ 
class ZC_SSILIST_ITEM_CLICK_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_SSILIST_ITEM_CLICK_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_SSILIST_ITEM_CLICK_ACK, s)
	{}
	virtual ~ZC_SSILIST_ITEM_CLICK_ACK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050822
ID_ZC_STARPLACE = 0x0253
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050822)
ID_ZC_STARPLACE = 0x0253
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STARPLACE = 0x0253
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050817
ID_ZC_STARPLACE = 0x0253
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STARPLACE = 0x0253
#else
ID_ZC_STARPLACE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STARPLACE
 *
 */ 
class ZC_STARPLACE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STARPLACE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STARPLACE, s)
	{}
	virtual ~ZC_STARPLACE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STARSKILL = 0x020e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040705)
ID_ZC_STARSKILL = 0x020e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STARSKILL = 0x020e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040705
ID_ZC_STARSKILL = 0x020e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STARSKILL = 0x020e
#else
ID_ZC_STARSKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STARSKILL
 *
 */ 
class ZC_STARSKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STARSKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STARSKILL, s)
	{}
	virtual ~ZC_STARSKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_START_BABY = 0x01f8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20040308)
ID_ZC_START_BABY = 0x01f8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_START_BABY = 0x01f8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040308
ID_ZC_START_BABY = 0x01f8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_START_BABY = 0x01f8
#else
ID_ZC_START_BABY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_START_BABY
 *
 */ 
class ZC_START_BABY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_START_BABY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_START_BABY, s)
	{}
	virtual ~ZC_START_BABY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_START_CAPTURE = 0x019e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_START_CAPTURE = 0x019e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_START_CAPTURE = 0x019e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_START_CAPTURE = 0x019e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_START_CAPTURE = 0x019e
#else
ID_ZC_START_CAPTURE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_START_CAPTURE
 *
 */ 
class ZC_START_CAPTURE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_START_CAPTURE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_START_CAPTURE, s)
	{}
	virtual ~ZC_START_CAPTURE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110125)
ID_ZC_START_COLLECTION = 0x08b4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110125)
ID_ZC_START_COLLECTION = 0x08b4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_START_COLLECTION = 0x08b4
#else
ID_ZC_START_COLLECTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_START_COLLECTION
 *
 */ 
class ZC_START_COLLECTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_START_COLLECTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_START_COLLECTION, s)
	{}
	virtual ~ZC_START_COLLECTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_START_COUPLE = 0x01e4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_START_COUPLE = 0x01e4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_START_COUPLE = 0x01e4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_START_COUPLE = 0x01e4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_START_COUPLE = 0x01e4
#else
ID_ZC_START_COUPLE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_START_COUPLE
 *
 */ 
class ZC_START_COUPLE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_START_COUPLE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_START_COUPLE, s)
	{}
	virtual ~ZC_START_COUPLE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STATE_CHANGE = 0x0119
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STATE_CHANGE = 0x0119
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STATE_CHANGE = 0x0119
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STATE_CHANGE = 0x0119
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STATE_CHANGE = 0x0119
#else
ID_ZC_STATE_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STATE_CHANGE
 *
 */ 
class ZC_STATE_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STATE_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STATE_CHANGE, s)
	{}
	virtual ~ZC_STATE_CHANGE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_STATE_CHANGE3 = 0x0229
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050411)
ID_ZC_STATE_CHANGE3 = 0x0229
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STATE_CHANGE3 = 0x0229
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050411
ID_ZC_STATE_CHANGE3 = 0x0229
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STATE_CHANGE3 = 0x0229
#else
ID_ZC_STATE_CHANGE3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STATE_CHANGE3
 *
 */ 
class ZC_STATE_CHANGE3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STATE_CHANGE3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STATE_CHANGE3, s)
	{}
	virtual ~ZC_STATE_CHANGE3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STATUS = 0x00bd
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS = 0x00bd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS = 0x00bd
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STATUS = 0x00bd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS = 0x00bd
#else
ID_ZC_STATUS = 0x0000 // Disabled
#endif
};
struct zc_status_data {
	int16_t status_points{0};
	int8_t  strength{1};
	int8_t  strength_req_stats{1};
	int8_t  agility{1};
	int8_t  agility_req_stats{1};
	int8_t  vitality{1};
	int8_t  vitality_req_stats{1};
	int8_t  intelligence{1};
	int8_t  intelligence_req_stats{1};
	int8_t  dexterity{1};
	int8_t  dexterity_req_stats{1};
	int8_t  luck{1};
	int8_t  luck_req_stats{1};
	int16_t status_atk{1};
	int16_t equip_atk{1};
	int16_t status_matk{1};
	int16_t equip_matk{1};
	int16_t soft_def{1};
	int16_t hard_def{1};
	int16_t soft_mdef{1};
	int16_t hard_mdef{1};
	int16_t hit{1};
	int16_t flee{1};
	int16_t perfect_dodge{1};
	int16_t critical{1};
	int16_t attack_speed{0};
	int16_t plus_aspd{0}; // always 0 apparently.
};
/**
 * @brief Main object for the aegis packet: ZC_STATUS
 *
 */ 
class ZC_STATUS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STATUS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STATUS, s)
	{}
	virtual ~ZC_STATUS() {}

	void deliver(zc_status_data &data);
	ByteBuffer &serialize();

/* Structure */
	zc_status_data _data;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STATUS_CHANGE = 0x00be
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE = 0x00be
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE = 0x00be
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STATUS_CHANGE = 0x00be
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE = 0x00be
#else
ID_ZC_STATUS_CHANGE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STATUS_CHANGE
 *
 */ 
class ZC_STATUS_CHANGE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STATUS_CHANGE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STATUS_CHANGE, s)
	{}
	virtual ~ZC_STATUS_CHANGE() {}

	void deliver(status_point_type type, int8_t value);
	ByteBuffer &serialize();

/* Structure */
	status_point_type _type; // int16_t
	int8_t _value;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STATUS_CHANGE_ACK = 0x00bc
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE_ACK = 0x00bc
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE_ACK = 0x00bc
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STATUS_CHANGE_ACK = 0x00bc
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STATUS_CHANGE_ACK = 0x00bc
#else
ID_ZC_STATUS_CHANGE_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STATUS_CHANGE_ACK
 *
 */ 
class ZC_STATUS_CHANGE_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STATUS_CHANGE_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STATUS_CHANGE_ACK, s)
	{}
	virtual ~ZC_STATUS_CHANGE_ACK() {}

	void deliver(status_point_type type, int8_t value, bool success);
	ByteBuffer &serialize();

/* Structure */
	int16_t _type{0};
	int8_t _success{0};
	int8_t _amount{0};
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STOPMOVE = 0x0088
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STOPMOVE = 0x0088
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STOPMOVE = 0x0088
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STOPMOVE = 0x0088
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STOPMOVE = 0x0088
#else
ID_ZC_STOPMOVE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STOPMOVE
 *
 */ 
class ZC_STOPMOVE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STOPMOVE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STOPMOVE, s)
	{}
	virtual ~ZC_STOPMOVE() {}

	void deliver(int32_t guid, int16_t x, int16_t y);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
	int16_t _x{0};
	int16_t _y{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110802)
ID_ZC_STOPMOVE_FORCE = 0x08cd
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110803)
ID_ZC_STOPMOVE_FORCE = 0x08cd
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STOPMOVE_FORCE = 0x08cd
#else
ID_ZC_STOPMOVE_FORCE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STOPMOVE_FORCE
 *
 */ 
class ZC_STOPMOVE_FORCE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STOPMOVE_FORCE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STOPMOVE_FORCE, s)
	{}
	virtual ~ZC_STOPMOVE_FORCE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STORE_ENTRY = 0x0131
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ENTRY = 0x0131
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ENTRY = 0x0131
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STORE_ENTRY = 0x0131
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ENTRY = 0x0131
#else
ID_ZC_STORE_ENTRY = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ENTRY
 *
 */ 
class ZC_STORE_ENTRY : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ENTRY(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ENTRY, s)
	{}
	virtual ~ZC_STORE_ENTRY() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x00a6
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x00a6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x00a6
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x00a6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x00a6
#else
ID_ZC_STORE_EQUIPMENT_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_EQUIPMENT_ITEMLIST
 *
 */ 
class ZC_STORE_EQUIPMENT_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_EQUIPMENT_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_EQUIPMENT_ITEMLIST, s)
	{}
	virtual ~ZC_STORE_EQUIPMENT_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0296
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20061218)
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0296
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0296
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20061218
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0296
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0296
#else
ID_ZC_STORE_EQUIPMENT_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_EQUIPMENT_ITEMLIST2
 *
 */ 
class ZC_STORE_EQUIPMENT_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_EQUIPMENT_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_EQUIPMENT_ITEMLIST2, s)
	{}
	virtual ~ZC_STORE_EQUIPMENT_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x02d1
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070904)
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x02d1
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x02d1
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070904
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x02d1
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x02d1
#else
ID_ZC_STORE_EQUIPMENT_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_EQUIPMENT_ITEMLIST3
 *
 */ 
class ZC_STORE_EQUIPMENT_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_EQUIPMENT_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_EQUIPMENT_ITEMLIST3, s)
	{}
	virtual ~ZC_STORE_EQUIPMENT_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_STORE_ITEMLIST_EQUIP = 0x0905
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_STORE_ITEMLIST_EQUIP = 0x0905
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_EQUIP = 0x0905
#else
ID_ZC_STORE_ITEMLIST_EQUIP = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_EQUIP
 *
 */ 
class ZC_STORE_ITEMLIST_EQUIP : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_EQUIP(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_EQUIP, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_EQUIP() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_STORE_ITEMLIST_EQUIP_V2 = 0x0976
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_STORE_ITEMLIST_EQUIP_V2 = 0x0976
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_EQUIP_V2 = 0x0976
#else
ID_ZC_STORE_ITEMLIST_EQUIP_V2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_EQUIP_V2
 *
 */ 
class ZC_STORE_ITEMLIST_EQUIP_V2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_EQUIP_V2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_EQUIP_V2, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_EQUIP_V2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_STORE_ITEMLIST_EQUIP_V5 = 0x0996
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_STORE_ITEMLIST_EQUIP_V5 = 0x0996
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_EQUIP_V5 = 0x0996
#else
ID_ZC_STORE_ITEMLIST_EQUIP_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_EQUIP_V5
 *
 */ 
class ZC_STORE_ITEMLIST_EQUIP_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_EQUIP_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_EQUIP_V5, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_EQUIP_V5() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0b0a
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20140402
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0a10
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20140402
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0a10
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0b0a
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0a10
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180822)
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0b0a
#else
ID_ZC_STORE_ITEMLIST_EQUIP_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_EQUIP_V6
 *
 */ 
class ZC_STORE_ITEMLIST_EQUIP_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_EQUIP_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_EQUIP_V6, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_EQUIP_V6() {}

	void deliver(std::string name, std::vector<std::shared_ptr<const item_entry_data>> const &items);
	void deliver(inventory_type type, std::vector<std::shared_ptr<const item_entry_data>> const &items);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
#if (CLIENT_TYPE == 'R' && PACKET_VERSION >= 20180912) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION >= 20180919) || \
	(CLIENT_TYPE == 'M' && PACKET_VERSION >= 20181002)
	int8_t _inventory_type{ 0 };
#endif
#if (PACKET_VERSION >= 20120925 && \
	((CLIENT_TYPE == 'R' && PACKET_VERSION < 20180829) || \
	(CLIENT_TYPE == 'Z' && PACKET_VERSION < 20180919) || \
	(CLIENT_TYPE == 'M' && PACKET_VERSION < 20181002)))
	char _name[MAX_UNIT_NAME_LENGTH];
#endif
	std::vector<std::shared_ptr<const item_entry_data>> _items;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_STORE_ITEMLIST_NORMAL = 0x0904
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20111122)
ID_ZC_STORE_ITEMLIST_NORMAL = 0x0904
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_NORMAL = 0x0904
#else
ID_ZC_STORE_ITEMLIST_NORMAL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_NORMAL
 *
 */ 
class ZC_STORE_ITEMLIST_NORMAL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_NORMAL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_NORMAL, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_NORMAL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_STORE_ITEMLIST_NORMAL_V2 = 0x0975
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120221)
ID_ZC_STORE_ITEMLIST_NORMAL_V2 = 0x0975
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_NORMAL_V2 = 0x0975
#else
ID_ZC_STORE_ITEMLIST_NORMAL_V2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_NORMAL_V2
 *
 */ 
class ZC_STORE_ITEMLIST_NORMAL_V2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_NORMAL_V2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_NORMAL_V2, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_NORMAL_V2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_STORE_ITEMLIST_NORMAL_V5 = 0x0995
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120925)
ID_ZC_STORE_ITEMLIST_NORMAL_V5 = 0x0995
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_ITEMLIST_NORMAL_V5 = 0x0995
#else
ID_ZC_STORE_ITEMLIST_NORMAL_V5 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_NORMAL_V5
 *
 */ 
class ZC_STORE_ITEMLIST_NORMAL_V5 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_NORMAL_V5(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_NORMAL_V5, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_NORMAL_V5() {}

	void deliver(std::string name, std::vector<std::shared_ptr<const item_entry_data>> const &items);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{ 0 };
	char _name[MAX_UNIT_NAME_LENGTH]{ 0 };
	std::vector<std::shared_ptr<const item_entry_data>> _items;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_STORE_ITEMLIST_NORMAL_V6 = 0x0b09
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180829)
ID_ZC_STORE_ITEMLIST_NORMAL_V6 = 0x0b09
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180822)
ID_ZC_STORE_ITEMLIST_NORMAL_V6 = 0x0b09
#else
ID_ZC_STORE_ITEMLIST_NORMAL_V6 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_ITEMLIST_NORMAL_V6
 *
 */ 
class ZC_STORE_ITEMLIST_NORMAL_V6 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_ITEMLIST_NORMAL_V6(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_ITEMLIST_NORMAL_V6, s)
	{}
	virtual ~ZC_STORE_ITEMLIST_NORMAL_V6() {}

	void deliver(inventory_type type, std::vector<std::shared_ptr<const item_entry_data>> const &items);
	ByteBuffer &serialize();

/* Structure */
	int16 _packet_length { 0 };
	int8_t _inventory_type{ 0 };
	std::vector<std::shared_ptr<const item_entry_data>> _items;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STORE_NORMAL_ITEMLIST = 0x00a5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST = 0x00a5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST = 0x00a5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_STORE_NORMAL_ITEMLIST = 0x00a5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST = 0x00a5
#else
ID_ZC_STORE_NORMAL_ITEMLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_NORMAL_ITEMLIST
 *
 */ 
class ZC_STORE_NORMAL_ITEMLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_NORMAL_ITEMLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_NORMAL_ITEMLIST, s)
	{}
	virtual ~ZC_STORE_NORMAL_ITEMLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x01f0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20031218)
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x01f0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x01f0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20031218
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x01f0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x01f0
#else
ID_ZC_STORE_NORMAL_ITEMLIST2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_NORMAL_ITEMLIST2
 *
 */ 
class ZC_STORE_NORMAL_ITEMLIST2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_NORMAL_ITEMLIST2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_NORMAL_ITEMLIST2, s)
	{}
	virtual ~ZC_STORE_NORMAL_ITEMLIST2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x02ea
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x02ea
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x02ea
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x02ea
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x02ea
#else
ID_ZC_STORE_NORMAL_ITEMLIST3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STORE_NORMAL_ITEMLIST3
 *
 */ 
class ZC_STORE_NORMAL_ITEMLIST3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STORE_NORMAL_ITEMLIST3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STORE_NORMAL_ITEMLIST3, s)
	{}
	virtual ~ZC_STORE_NORMAL_ITEMLIST3() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151104)
ID_ZC_STYLE_CHANGE_RES = 0x0a47
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20151104)
ID_ZC_STYLE_CHANGE_RES = 0x0a47
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_STYLE_CHANGE_RES = 0x0a47
#else
ID_ZC_STYLE_CHANGE_RES = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_STYLE_CHANGE_RES
 *
 */ 
class ZC_STYLE_CHANGE_RES : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_STYLE_CHANGE_RES(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_STYLE_CHANGE_RES, s)
	{}
	virtual ~ZC_STYLE_CHANGE_RES() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050328
ID_ZC_TAEKWON_POINT = 0x0224
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050328)
ID_ZC_TAEKWON_POINT = 0x0224
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_TAEKWON_POINT = 0x0224
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050328
ID_ZC_TAEKWON_POINT = 0x0224
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_TAEKWON_POINT = 0x0224
#else
ID_ZC_TAEKWON_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_TAEKWON_POINT
 *
 */ 
class ZC_TAEKWON_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_TAEKWON_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_TAEKWON_POINT, s)
	{}
	virtual ~ZC_TAEKWON_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20050328
ID_ZC_TAEKWON_RANK = 0x0226
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20050328)
ID_ZC_TAEKWON_RANK = 0x0226
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_TAEKWON_RANK = 0x0226
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20050328
ID_ZC_TAEKWON_RANK = 0x0226
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_TAEKWON_RANK = 0x0226
#else
ID_ZC_TAEKWON_RANK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_TAEKWON_RANK
 *
 */ 
class ZC_TAEKWON_RANK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_TAEKWON_RANK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_TAEKWON_RANK, s)
	{}
	virtual ~ZC_TAEKWON_RANK() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_TALKBOX_CHATCONTENTS = 0x0191
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_TALKBOX_CHATCONTENTS = 0x0191
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_TALKBOX_CHATCONTENTS = 0x0191
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_TALKBOX_CHATCONTENTS = 0x0191
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_TALKBOX_CHATCONTENTS = 0x0191
#else
ID_ZC_TALKBOX_CHATCONTENTS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_TALKBOX_CHATCONTENTS
 *
 */ 
class ZC_TALKBOX_CHATCONTENTS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_TALKBOX_CHATCONTENTS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_TALKBOX_CHATCONTENTS, s)
	{}
	virtual ~ZC_TALKBOX_CHATCONTENTS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_THROW_MVPITEM = 0x010d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_THROW_MVPITEM = 0x010d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_THROW_MVPITEM = 0x010d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_THROW_MVPITEM = 0x010d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_THROW_MVPITEM = 0x010d
#else
ID_ZC_THROW_MVPITEM = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_THROW_MVPITEM
 *
 */ 
class ZC_THROW_MVPITEM : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_THROW_MVPITEM(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_THROW_MVPITEM, s)
	{}
	virtual ~ZC_THROW_MVPITEM() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_TRYCAPTURE_MONSTER = 0x01a0
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_TRYCAPTURE_MONSTER = 0x01a0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_TRYCAPTURE_MONSTER = 0x01a0
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_TRYCAPTURE_MONSTER = 0x01a0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_TRYCAPTURE_MONSTER = 0x01a0
#else
ID_ZC_TRYCAPTURE_MONSTER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_TRYCAPTURE_MONSTER
 *
 */ 
class ZC_TRYCAPTURE_MONSTER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_TRYCAPTURE_MONSTER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_TRYCAPTURE_MONSTER, s)
	{}
	virtual ~ZC_TRYCAPTURE_MONSTER() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110125)
ID_ZC_TRYCOLLECTION = 0x08b6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20110125)
ID_ZC_TRYCOLLECTION = 0x08b6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_TRYCOLLECTION = 0x08b6
#else
ID_ZC_TRYCOLLECTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_TRYCOLLECTION
 *
 */ 
class ZC_TRYCOLLECTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_TRYCOLLECTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_TRYCOLLECTION, s)
	{}
	virtual ~ZC_TRYCOLLECTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180117)
ID_ZC_UI_ACTION = 0x0af0
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180117)
ID_ZC_UI_ACTION = 0x0af0
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180117)
ID_ZC_UI_ACTION = 0x0af0
#else
ID_ZC_UI_ACTION = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UI_ACTION
 *
 */ 
class ZC_UI_ACTION : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UI_ACTION(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UI_ACTION, s)
	{}
	virtual ~ZC_UI_ACTION() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_UI_OPEN2 = 0x0b9a
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20211103
ID_ZC_UI_OPEN2 = 0x0b9a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| PACKET_VERSION >= 20201118)
ID_ZC_UI_OPEN2 = 0x0b9a
#else
ID_ZC_UI_OPEN2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UI_OPEN2
 *
 */ 
class ZC_UI_OPEN2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UI_OPEN2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UI_OPEN2, s)
	{}
	virtual ~ZC_UI_OPEN2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170308)
ID_ZC_UNKNOWN_CLEAN_ITEMS_LISTS = 0x0ac8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170308)
ID_ZC_UNKNOWN_CLEAN_ITEMS_LISTS = 0x0ac8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UNKNOWN_CLEAN_ITEMS_LISTS = 0x0ac8
#else
ID_ZC_UNKNOWN_CLEAN_ITEMS_LISTS = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UNKNOWN_CLEAN_ITEMS_LISTS
 *
 */ 
class ZC_UNKNOWN_CLEAN_ITEMS_LISTS : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UNKNOWN_CLEAN_ITEMS_LISTS(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UNKNOWN_CLEAN_ITEMS_LISTS, s)
	{}
	virtual ~ZC_UNKNOWN_CLEAN_ITEMS_LISTS() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070711
ID_ZC_UNUSED_SRPACKET_INIT = 0x02ae
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20070711
ID_ZC_UNUSED_SRPACKET_INIT = 0x02ae
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070711
ID_ZC_UNUSED_SRPACKET_INIT = 0x02ae
#else
ID_ZC_UNUSED_SRPACKET_INIT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UNUSED_SRPACKET_INIT
 *
 */ 
class ZC_UNUSED_SRPACKET_INIT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UNUSED_SRPACKET_INIT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UNUSED_SRPACKET_INIT, s)
	{}
	virtual ~ZC_UNUSED_SRPACKET_INIT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_UPDATE_CARDSLOT = 0x0a3f
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_UPDATE_CARDSLOT = 0x0a3f
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_UPDATE_CARDSLOT = 0x0a3f
#else
ID_ZC_UPDATE_CARDSLOT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_CARDSLOT
 *
 */ 
class ZC_UPDATE_CARDSLOT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_CARDSLOT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_CARDSLOT, s)
	{}
	virtual ~ZC_UPDATE_CARDSLOT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_UPDATE_CHARSTAT = 0x016d
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT = 0x016d
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT = 0x016d
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_UPDATE_CHARSTAT = 0x016d
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT = 0x016d
#else
ID_ZC_UPDATE_CHARSTAT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_CHARSTAT
 *
 */ 
class ZC_UPDATE_CHARSTAT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_CHARSTAT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_CHARSTAT, s)
	{}
	virtual ~ZC_UPDATE_CHARSTAT() {}

	void deliver(int account_id, int char_id, zc_update_charstat_status_type status);
	ByteBuffer &serialize();

/* Structure */
	int _account_id{ 0 };
	int _char_id{ 0 };
	int _status{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_UPDATE_CHARSTAT2 = 0x01f2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20040000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT2 = 0x01f2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT2 = 0x01f2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_UPDATE_CHARSTAT2 = 0x01f2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_CHARSTAT2 = 0x01f2
#else
ID_ZC_UPDATE_CHARSTAT2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_CHARSTAT2
 *
 */ 
class ZC_UPDATE_CHARSTAT2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_CHARSTAT2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_CHARSTAT2, s)
	{}
	virtual ~ZC_UPDATE_CHARSTAT2() {}

	void deliver(int account_id, int char_id, zc_update_charstat_status_type status, int16_t gender, int16_t hair_style_id, int16_t hair_color_id);
	ByteBuffer& serialize();

	/* Structure */
	int _account_id{ 0 };
	int _char_id{ 0 };
	int _status{ 0 };
	int16_t _gender{ 0 };
	int16_t _hair_style_id{ 0 };
	int16_t _hair_color_id{ 0 };
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_UPDATE_GDID = 0x016c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_GDID = 0x016c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_GDID = 0x016c
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_UPDATE_GDID = 0x016c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_GDID = 0x016c
#else
ID_ZC_UPDATE_GDID = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_GDID
 *
 */ 
class ZC_UPDATE_GDID : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_GDID(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_GDID, s)
	{}
	virtual ~ZC_UPDATE_GDID() {}

	void deliver(int guild_id, int emblem_id, int mode, int is_master, std::string guild_name);
#if (CLIENT_VERSION == 'M' && PACKET_VERSION >= 20220216) || (CLIENT_VERSION == 'Z' && PACKET_VERSION >= 20221024)
	void deliver(int guild_id, int emblem_id, int mode, int is_master, std::string guild_name, int master_char_id);
#endif
	ByteBuffer &serialize();

/* Structure */
	int _guild_id{ 0 };
	int _emblem_id{ 0 };
	int _mode{ 0 };
	int8_t _is_master{ 0 };
	int _inter_sid{ 0 };
	char _guild_name[MAX_GUILD_NAME_LENGTH];
#if (CLIENT_VERSION == 'M' && PACKET_VERSION >= 20220216) || (CLIENT_VERSION == 'Z' && PACKET_VERSION >= 20221024)
	int _master_char_id{ 0 };
#endif
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE = 0x081b
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20100420)
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE = 0x081b
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE = 0x081b
#else
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_ITEM_FROM_BUYING_STORE
 *
 */ 
class ZC_UPDATE_ITEM_FROM_BUYING_STORE : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_ITEM_FROM_BUYING_STORE(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE, s)
	{}
	virtual ~ZC_UPDATE_ITEM_FROM_BUYING_STORE() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131127)
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE2 = 0x09e6
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131127)
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE2 = 0x09e6
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE2 = 0x09e6
#else
ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_ITEM_FROM_BUYING_STORE2
 *
 */ 
class ZC_UPDATE_ITEM_FROM_BUYING_STORE2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_ITEM_FROM_BUYING_STORE2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_ITEM_FROM_BUYING_STORE2, s)
	{}
	virtual ~ZC_UPDATE_ITEM_FROM_BUYING_STORE2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_UPDATE_MAPINFO = 0x0192
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_MAPINFO = 0x0192
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_MAPINFO = 0x0192
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_UPDATE_MAPINFO = 0x0192
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_MAPINFO = 0x0192
#else
ID_ZC_UPDATE_MAPINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_MAPINFO
 *
 */ 
class ZC_UPDATE_MAPINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_MAPINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_MAPINFO, s)
	{}
	virtual ~ZC_UPDATE_MAPINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20070813
ID_ZC_UPDATE_MISSION_HUNT = 0x02b5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20070813)
ID_ZC_UPDATE_MISSION_HUNT = 0x02b5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_MISSION_HUNT = 0x02b5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20070813
ID_ZC_UPDATE_MISSION_HUNT = 0x02b5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_MISSION_HUNT = 0x02b5
#else
ID_ZC_UPDATE_MISSION_HUNT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_MISSION_HUNT
 *
 */ 
class ZC_UPDATE_MISSION_HUNT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_MISSION_HUNT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_MISSION_HUNT, s)
	{}
	virtual ~ZC_UPDATE_MISSION_HUNT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20140115
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x09fa
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x0afe
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20140115
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x09fa
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x0afe
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20170000
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x09fa
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20180605)
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x0afe
#else
ID_ZC_UPDATE_MISSION_HUNT_EX = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_MISSION_HUNT_EX
 *
 */ 
class ZC_UPDATE_MISSION_HUNT_EX : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_MISSION_HUNT_EX(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_MISSION_HUNT_EX, s)
	{}
	virtual ~ZC_UPDATE_MISSION_HUNT_EX() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120503)
ID_ZC_UPDATE_RANKING_POINT = 0x097e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120502)
ID_ZC_UPDATE_RANKING_POINT = 0x097e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_RANKING_POINT = 0x097e
#else
ID_ZC_UPDATE_RANKING_POINT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_RANKING_POINT
 *
 */ 
class ZC_UPDATE_RANKING_POINT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_RANKING_POINT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_RANKING_POINT, s)
	{}
	virtual ~ZC_UPDATE_RANKING_POINT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_UPDATE_ROULETTE_COIN = 0x0a33
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_UPDATE_ROULETTE_COIN = 0x0a33
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_ROULETTE_COIN = 0x0a33
#else
ID_ZC_UPDATE_ROULETTE_COIN = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_ROULETTE_COIN
 *
 */ 
class ZC_UPDATE_ROULETTE_COIN : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_ROULETTE_COIN(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_ROULETTE_COIN, s)
	{}
	virtual ~ZC_UPDATE_ROULETTE_COIN() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_UPDATE_TAIWANCASH = 0x0a34
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20140924)
ID_ZC_UPDATE_TAIWANCASH = 0x0a34
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_UPDATE_TAIWANCASH = 0x0a34
#else
ID_ZC_UPDATE_TAIWANCASH = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_UPDATE_TAIWANCASH
 *
 */ 
class ZC_UPDATE_TAIWANCASH : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_UPDATE_TAIWANCASH(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_UPDATE_TAIWANCASH, s)
	{}
	virtual ~ZC_UPDATE_TAIWANCASH() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_USER_COUNT = 0x00c2
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_USER_COUNT = 0x00c2
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_USER_COUNT = 0x00c2
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_USER_COUNT = 0x00c2
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USER_COUNT = 0x00c2
#else
ID_ZC_USER_COUNT = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USER_COUNT
 *
 */ 
class ZC_USER_COUNT : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USER_COUNT(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USER_COUNT, s)
	{}
	virtual ~ZC_USER_COUNT() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_USESKILL_ACK = 0x013e
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK = 0x013e
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK = 0x013e
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_USESKILL_ACK = 0x013e
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK = 0x013e
#else
ID_ZC_USESKILL_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USESKILL_ACK
 *
 */ 
class ZC_USESKILL_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USESKILL_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USESKILL_ACK, s)
	{}
	virtual ~ZC_USESKILL_ACK() {}

	void deliver(int src_guid, int dst_guid, int x, int y, int skill_id, int element, int delay_time);
	ByteBuffer &serialize();

/* Structure */
	uint32_t _src_guid;
	uint32_t _dst_guid;
	uint16_t _x;
	uint16_t _y;
	uint16_t _skill_id;
	uint32_t _element;
	uint32_t _delay_time;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091124)
ID_ZC_USESKILL_ACK2 = 0x07fb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20091124)
ID_ZC_USESKILL_ACK2 = 0x07fb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK2 = 0x07fb
#else
ID_ZC_USESKILL_ACK2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USESKILL_ACK2
 *
 */ 
class ZC_USESKILL_ACK2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USESKILL_ACK2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USESKILL_ACK2, s)
	{}
	virtual ~ZC_USESKILL_ACK2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK3 = 0x0b1a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK3 = 0x0b1a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20190000 && PACKET_VERSION < 20200000))
ID_ZC_USESKILL_ACK3 = 0x0b1a
#else
ID_ZC_USESKILL_ACK3 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USESKILL_ACK3
 *
 */ 
class ZC_USESKILL_ACK3 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USESKILL_ACK3(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USESKILL_ACK3, s)
	{}
	virtual ~ZC_USESKILL_ACK3() {}

	void deliver(uint16_t skill_id, uint32_t src, uint32_t target, uint16_t target_x, uint16_t target_y, uint32_t element, int casttime);
	ByteBuffer &serialize();

/* Structure */
	uint32_t _src_id;
	uint32_t _target_id;
	uint16_t _x;
	uint16_t _y;
	uint16_t _skill_id;
	uint32_t _element;
	uint32_t _delay_time;
	uint8_t _disposable;
	uint32_t _attack_motion;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_USE_ITEM_ACK = 0x00a8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK = 0x00a8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK = 0x00a8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_USE_ITEM_ACK = 0x00a8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK = 0x00a8
#else
ID_ZC_USE_ITEM_ACK = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USE_ITEM_ACK
 *
 */ 
class ZC_USE_ITEM_ACK : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USE_ITEM_ACK(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USE_ITEM_ACK, s)
	{}
	virtual ~ZC_USE_ITEM_ACK() {}

	void deliver(int16_t index, int16_t amount, bool success);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index;
	int16_t _amount;
	int8_t _success;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_USE_ITEM_ACK2 = 0x01c8
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK2 = 0x01c8
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK2 = 0x01c8
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_USE_ITEM_ACK2 = 0x01c8
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USE_ITEM_ACK2 = 0x01c8
#else
ID_ZC_USE_ITEM_ACK2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USE_ITEM_ACK2
 *
 */ 
class ZC_USE_ITEM_ACK2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USE_ITEM_ACK2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USE_ITEM_ACK2, s)
	{}
	virtual ~ZC_USE_ITEM_ACK2() {}

	void deliver(int16_t index, int16_t item_id, int32_t target_guid, int16_t amount, bool success);
	ByteBuffer &serialize();

/* Structure */
	int16_t _index;
	int16_t _item_id;
	int32_t _target_guid;
	int16_t _amount;
	int8_t _success;
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_USE_SKILL = 0x011a
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_USE_SKILL = 0x011a
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_USE_SKILL = 0x011a
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_USE_SKILL = 0x011a
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USE_SKILL = 0x011a
#else
ID_ZC_USE_SKILL = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USE_SKILL
 *
 */ 
class ZC_USE_SKILL : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USE_SKILL(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USE_SKILL, s)
	{}
	virtual ~ZC_USE_SKILL() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_USE_SKILL2 = 0x09cb
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20130717)
ID_ZC_USE_SKILL2 = 0x09cb
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_USE_SKILL2 = 0x09cb
#else
ID_ZC_USE_SKILL2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_USE_SKILL2
 *
 */ 
class ZC_USE_SKILL2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_USE_SKILL2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_USE_SKILL2, s)
	{}
	virtual ~ZC_USE_SKILL2() {}

	void deliver(int skill_id, int heal_amount, int target_guid, zc_use_skill2_result_type result);
	ByteBuffer &serialize();

/* Structure */
	int16_t _skill_id{ 0 };
	int32_t _heal_amount{ 0 };
	int32_t _target_guid{ 0 };
	int8_t _result{ 0 };
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_VIEW_CAMERAINFO = 0x0a78
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_VIEW_CAMERAINFO = 0x0a78
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000))
ID_ZC_VIEW_CAMERAINFO = 0x0a78
#else
ID_ZC_VIEW_CAMERAINFO = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_VIEW_CAMERAINFO
 *
 */ 
class ZC_VIEW_CAMERAINFO : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_VIEW_CAMERAINFO(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_VIEW_CAMERAINFO, s)
	{}
	virtual ~ZC_VIEW_CAMERAINFO() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_WAIT_DIALOG = 0x00b5
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_WAIT_DIALOG = 0x00b5
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_WAIT_DIALOG = 0x00b5
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_WAIT_DIALOG = 0x00b5
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WAIT_DIALOG = 0x00b5
#else
ID_ZC_WAIT_DIALOG = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WAIT_DIALOG
 *
 */ 
class ZC_WAIT_DIALOG : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WAIT_DIALOG(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WAIT_DIALOG, s)
	{}
	virtual ~ZC_WAIT_DIALOG() {}

	void deliver(int32_t guid);
	ByteBuffer &serialize();

/* Structure */
	int32_t _guid{0};
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_WAIT_DIALOG2 = 0x0973
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20120214)
ID_ZC_WAIT_DIALOG2 = 0x0973
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WAIT_DIALOG2 = 0x0973
#else
ID_ZC_WAIT_DIALOG2 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WAIT_DIALOG2
 *
 */ 
class ZC_WAIT_DIALOG2 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WAIT_DIALOG2(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WAIT_DIALOG2, s)
	{}
	virtual ~ZC_WAIT_DIALOG2() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_WARPLIST = 0x011c
#elif CLIENT_TYPE == 'M' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_WARPLIST = 0x011c
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_WARPLIST = 0x0abe
#elif CLIENT_TYPE == 'R' &&  \
	PACKET_VERSION >= 20080000
ID_ZC_WARPLIST = 0x011c
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20170228)
ID_ZC_WARPLIST = 0x0abe
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_WARPLIST = 0x011c
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WARPLIST = 0x0abe
#elif CLIENT_TYPE == 'Z' &&  \
	PACKET_VERSION >= 20180000
ID_ZC_WARPLIST = 0x011c
#else
ID_ZC_WARPLIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WARPLIST
 *
 */ 
class ZC_WARPLIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WARPLIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WARPLIST, s)
	{}
	virtual ~ZC_WARPLIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_WHISPER = 0x0097
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER = 0x0097
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER = 0x0097
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_WHISPER = 0x0097
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER = 0x0097
#else
ID_ZC_WHISPER = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WHISPER
 *
 */ 
class ZC_WHISPER : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WHISPER(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WHISPER, s)
	{}
	virtual ~ZC_WHISPER() {}

	void deliver(std::string name, std::string message, bool is_admin);
	ByteBuffer &serialize();

/* Structure */
	int16_t _packet_length{4};
	char _name[MAX_UNIT_NAME_LENGTH]{'\0'};
	int32_t _is_admin{0};
	char *_message;
};

enum {
#if CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131030)
ID_ZC_WHISPER02 = 0x09de
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| PACKET_VERSION >= 20131030)
ID_ZC_WHISPER02 = 0x09de
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER02 = 0x09de
#else
ID_ZC_WHISPER02 = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WHISPER02
 *
 */ 
class ZC_WHISPER02 : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WHISPER02(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WHISPER02, s)
	{}
	virtual ~ZC_WHISPER02() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

enum {
#if CLIENT_TYPE == 'A' &&  \
	PACKET_VERSION >= 20040000
ID_ZC_WHISPER_LIST = 0x00d4
#elif CLIENT_TYPE == 'M' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20030000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER_LIST = 0x00d4
#elif CLIENT_TYPE == 'R' && ( \
	PACKET_VERSION >= 20210000 \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20080000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER_LIST = 0x00d4
#elif CLIENT_TYPE == 'S' &&  \
	PACKET_VERSION >= 20030000
ID_ZC_WHISPER_LIST = 0x00d4
#elif CLIENT_TYPE == 'Z' && ( \
	PACKET_VERSION >= 20220000 \
	|| (PACKET_VERSION >= 20210000 && PACKET_VERSION < 20220000) \
	|| (PACKET_VERSION >= 20200000 && PACKET_VERSION < 20210000) \
	|| (PACKET_VERSION >= 20170000 && PACKET_VERSION < 20200000))
ID_ZC_WHISPER_LIST = 0x00d4
#else
ID_ZC_WHISPER_LIST = 0x0000 // Disabled
#endif
};
/**
 * @brief Main object for the aegis packet: ZC_WHISPER_LIST
 *
 */ 
class ZC_WHISPER_LIST : public Base::NetworkPacket<ZoneSession>
{
public:
	ZC_WHISPER_LIST(std::shared_ptr<ZoneSession> s)
	: NetworkPacket<ZoneSession>(ID_ZC_WHISPER_LIST, s)
	{}
	virtual ~ZC_WHISPER_LIST() {}

	void deliver();
	ByteBuffer &serialize();

/* Structure */
};

} /* namespace Zone
 */} /* namespace Horizon */
#endif /* HORIZON_ZONE_TRANSMITTED_PACKETS_HPP */
